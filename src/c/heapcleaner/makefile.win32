#
# the makefile for the garbage collector and heap I/O library
# win32 specific

MAKEFILE = 	makefile.win32
MAKE =		nmake /F$(MAKEFILE)
AR =		lib
ARFLAGS =	
RANLIB =	lib

LIB =		libmythryl-heapcleaner.lib

HEAPCLEANER_OBJS =							\
		heapcleaner-initialization.obj				\
		call-heapcleaner.obj					\
		heapclean-agegroup0.obj					\
		heapclean-n-agegroups.obj				\
		heapcleaner-stuff.obj					\
		heap-debug-stuff.obj				\
		pthread-heapcleaner-stuff.obj				\
		hugechunk.obj						\
		make-strings-and-vectors-etc.obj			\
		get-chunk-age.obj					\
		make-package-literals-via-bytecode-interpreter.obj	\
		tuple-ops.obj						\
		$(CHECK_HEAP)

HEAP_IO_OBJS =	import-heap.obj export-heap.obj \
		datastructure-unpickler.obj datastructure-pickler.obj datastructure-pickler-cleaner.obj \
		import-heap-stuff.obj export-heap-stuff.obj \
		writer.obj mem-writer.obj \
		address-hashtable.obj mythryl-callable-cfun-hashtable.obj

OBJS =		$(HEAPCLEANER_OBJS) $(HEAP_IO_OBJS)


VERSION =	v-dummy

OBJS_DIR =	..o
INC_DIR =	..\h
INCLUDES =	-I$(OBJS_DIR) -I$(INC_DIR)


$(LIB) :	$(VERSION) $(OBJS)
	del /F /Q $(LIB)
	$(AR) $(ARFLAGS) /out:$(LIB) $(OBJS)
	$(RANLIB) /out:$(LIB)

$(VERSION) :
	echo "$(VERSION)" > $(VERSION)

#
# GC chunks
#
heapcleaner-initialization.obj:	heapcleaner-initialization.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\runtime-values.h  $(INC_DIR)\bigcounter.h \
		$(INC_DIR)\sibid.h $(INC_DIR)\get-quire-from-os.h \
		$(INC_DIR)\heap.h  \
		$(INC_DIR)\heapcleaner-statistics.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) heapcleaner-initialization.c

call-heapcleaner.obj:	call-heapcleaner.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\runtime-values.h  $(INC_DIR)\bigcounter.h \
		$(INC_DIR)\sibid.h $(INC_DIR)\get-quire-from-os.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\heapcleaner-statistics.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) call-heapcleaner.c

heapclean-agegroup0.obj:	heapclean-agegroup0.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h \
		$(INC_DIR)\runtime-values.h $(INC_DIR)\make-strings-and-vectors-etc.h $(INC_DIR)\heap-tags.h \
		$(INC_DIR)\sibid.h \
		$(INC_DIR)\runtime-globals.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\coarse-inter-agegroup-pointers-map.h \
		copy-loop.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) heapclean-agegroup0.c

heapclean-n-agegroups.obj:	heapclean-n-agegroups.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\runtime-values.h $(INC_DIR)\make-strings-and-vectors-etc.h \
		$(INC_DIR)\sibid.h $(INC_DIR)\heap-tags.h \
		$(INC_DIR)\runtime-globals.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\coarse-inter-agegroup-pointers-map.h \
		copy-loop.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) heapclean-n-agegroups.c

heapcleaner-stuff.obj:	heapcleaner-stuff.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\runtime-values.h $(INC_DIR)\sibid.h \
		$(INC_DIR)\get-quire-from-os.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\coarse-inter-agegroup-pointers-map.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) heapcleaner-stuff.c

heap-debug-stuff.obj:	heap-debug-stuff.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\runtime-values.h $(INC_DIR)\sibid.h \
		$(INC_DIR)\get-quire-from-os.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\coarse-inter-agegroup-pointers-map.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) heap-debug-stuff.c

hugechunk.obj:	hugechunk.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\get-quire-from-os.h \
		$(INC_DIR)\sibid.h \
		$(INC_DIR)\heap.h 
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) hugechunk.c

make-strings-and-vectors-etc.obj:	make-strings-and-vectors-etc.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\make-strings-and-vectors-etc.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\sibid.h \
		$(INC_DIR)\heap-tags.h \
		$(INC_DIR)\heap.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) make-strings-and-vectors-etc.c

make-package-literals-via-bytecode-interpreter.obj: \
		make-package-literals-via-bytecode-interpreter.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\make-strings-and-vectors-etc.h \
		$(INC_DIR)\heap-tags.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\sibid.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) make-package-literals-via-bytecode-interpreter.c

tuple-ops.obj: \
		tuple-ops.c \
		$(OBJS_DIR)/sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)/runtime-base.h $(INC_DIR)/make-strings-and-vectors-etc.h $(INC_DIR)/heap-tags.h \
		sibid.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) tuple-ops.c

get-chunk-age.obj:	get-chunk-age.c \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-values.h $(INC_DIR)\heapcleaner.h \
		$(INC_DIR)\sibid.h \
		$(INC_DIR)\heap.h 
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) get-chunk-age.c

check-heap.obj:	check-heap.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h $(INC_DIR)\runtime-base.h \
		$(INC_DIR)\sibid.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\coarse-inter-agegroup-pointers-map.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) check-heap.c

heapcleaner-statistics.obj:	heapcleaner-statistics.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h $(INC_DIR)\runtime-base.h \
		heapcleaner-statistics.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) heapcleaner-statistics.c

pthread-heapcleaner-stuff.obj:	pthread-heapcleaner-stuff.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\runtime-values.h  $(INC_DIR)\bigcounter.h \
		$(INC_DIR)\sibid.h $(INC_DIR)\get-quire-from-os.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\heapcleaner-statistics.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) pthread-heapcleaner-stuff.c


#
# Heap I/O chunks
#
mythryl-callable-cfun-hashtable.obj: mythryl-callable-cfun-hashtable.c \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\mythryl-callable-cfun-hashtable.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) mythryl-callable-cfun-hashtable.c

import-heap.obj:	import-heap.c \
		$(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h $(OBJS_DIR)\reg-mask.h \
		$(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\mythryl-callable-cfun-hashtable.h \
		$(INC_DIR)\flush-instruction-cache-system-dependent.h \
		$(INC_DIR)\heap.h \
		$(INC_DIR)\sibid.h \
		$(INC_DIR)\coarse-inter-agegroup-pointers-map.h \
		writer.h \
		runtime-heap-image.h address-hashtable.h import-heap-stuff.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) import-heap.c

DEPENDENTS = $(OBJS_DIR)\sizes-of-some-c-types--autogenerated.h $(INC_DIR)\runtime-base.h $(INC_DIR)\runtime-configuration.h \
		$(INC_DIR)\mythryl-callable-cfun-hashtable.h \
		$(INC_DIR)\sibid.h \
		$(INC_DIR)\heap.h \
		writer.h \
		runtime-heap-image.h address-hashtable.h import-heap-stuff.h

export-heap.obj: export-heap.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) export-heap.c

datastructure-unpickler.obj: datastructure-unpickler.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) datastructure-unpickler.c

datastructure-pickler.obj: datastructure-pickler.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) datastructure-pickler.c

datastructure-pickler-cleaner.obj: datastructure-pickler-cleaner.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) datastructure-pickler-cleaner.c

import-heap-stuff.obj: import-heap-stuff.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) import-heap-stuff.c

export-heap-stuff.obj: export-heap-stuff.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) export-heap-stuff.c

writer.obj: writer.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) writer.c

mem-writer.obj: mem-writer.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) mem-writer.c

address-hashtable.obj: address-hashtable.c $(DEPENDENTS)
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) address-hashtable.c

clean :
	del /Q /F v-* *.obj *.pdb $(LIB) $(PTHREAD_LIB)

