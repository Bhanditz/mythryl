# This is the win32-specific main makefile for the Mythryl runtime system
#

SHELL =
MAKEFILE = 	makefile.win32
MAKE =		nmake /F$(MAKEFILE)
CC =		cl
CPP =		cl /E /EP
LD_LIBS =
AS =		ml /Cx /Zd /Zi /Fr
AR =		lib
ARFLAGS =	
RANLIB =	lib

#
# Dummy version
#
VERSION =	v-dummy

#
# target
#
RUNTIME =	interactive-mythryl-runtime-intel32

#
# source directories
#
ROOT_DIR =		..
OBJS_DIR =		$(ROOT_DIR)o
HEAPCLEANER_DIR =	$(ROOT_DIR)\heapcleaner
H_DIR =			$(ROOT_DIR)\h
KERN_DIR =		$(ROOT_DIR)\kernel
MACH_DIR =		$(ROOT_DIR)\machine-dependent
MEM_DIR =		$(ROOT_DIR)\memory
MULTICORE_DIR =		$(ROOT_DIR)\pthread
CLIB_DIR =		$(ROOT_DIR)\lib
CONFIG_DIR =		$(ROOT_DIR)\config

CFLAGS = 	

INCLUDES =	/I$(OBJS_DIR) /I$(H_DIR) /I$(MACH_DIR)
GC_INCLUDES =	$(INCLUDES) /I$(HEAPCLEANER_DIR)
GEN_INCLUDES =	/I$(CONFIG_DIR) $(INCLUDES)

OBJS =		mythryl-callable-c-libraries.obj win32-raise-syserr.obj \
                runtime-options.obj \
		load-compiledfiles.obj \
		load-and-run-heap-image.obj run-mythryl-code-and-runtime-eventloop.obj construct-runtime-package.obj runtime-state.obj \
		error-reporting.obj timers.obj win32-timers.obj \
		swap-bytes.obj \
		signal-stuff.obj prim.obj \
		win32-stuff.obj win32-fault.obj win32-signal.obj \
		$(XOBJS)

#
# Libraries of Mythryl-callable C functions
#
CLIBS =		$(XCLIBS) \
		$(CLIB_DIR)\win32\libwin32.lib \
		$(CLIB_DIR)\win32-io\libwin32-io.lib \
		$(CLIB_DIR)\win32-file-system\libwin32-file-system.lib \
		$(CLIB_DIR)\win32-process\libwin32-process.lib \
		$(CLIB_DIR)\dl\dynload.lib \
		$(CLIB_DIR)\heap\libmythryl-heap.lib \
		$(CLIB_DIR)\signal\libmythryl-signal.lib \
		$(CLIB_DIR)\socket\libmythryl-socket.lib \
		$(CLIB_DIR)\profiling\libmythryl-space-and-time-profiling.lib \
		$(CLIB_DIR)\time\libmythryl-time.lib \
		$(CLIB_DIR)\date\libmythryl-date.lib \
		$(CLIB_DIR)\math\libmythryl-math.lib

#
# The get-quire-from-win32 version is the default (and currently only) 
# memory subsystem for win32
#
LIBMEM_OBJS =	get-quire-from-win32.obj

#
# The posix-thread version is the default pthread library:
#
LIBMULTICORE_OBJS =	'OBJS=$$(POSIX_THREADS_OBJS)'

#
# The default cleaner ("garbage collection") library
#
GC_LIB =	libmythryl-heapcleaner.lib

#
# The various libraries; note that the order matters, since the C functions
# call GC library routines, and the GC library uses the memory library.
#
LIB7_LIBS =	$(MULTICORE_DIR)\libmythryl-pthread.lib \
		$(HEAPCLEANER_DIR)\$(GC_LIB) \
		$(MEM_DIR)\libmythryl-ram.lib

DEP_LIBS =	$(LIB7_LIBS) $(XLIBS)

ALL_LIBS =	$(CLIBS) $(DEP_LIBS)

clean:
	del /Q /F v-* run.* interactive-mythryl-runtime-intel32 \
		win32-sigtbl.c \
		generate-sizes-of-some-c-types-h.exe generate-task-and-pthread-struct-field-offsets-h.exe generate-regmask-h.exe \
		generate-system-signals-h-for-win32-systems.exe \
		gen-win32-sigtbl.exe \
		sizes-of-some-c-types--autogenerated.h reg-mask.h task-and-pthread-struct-field-offsets--autogenerated.h \
		system-signals.h \
		*.obj prim.s primops.s \
		*.sbr *.pdb
	cd $(MEM_DIR) 
	$(MAKE) MAKE="$(MAKE)" clean
	
	cd $(CLIB_DIR) 
	$(MAKE) MAKE="$(MAKE)" clean

	cd $(HEAPCLEANER_DIR) 
	$(MAKE) MAKE="$(MAKE)" clean

	cd $(MULTICORE_DIR) 
	$(MAKE) MAKE="$(MAKE)" clean


$(RUNTIME):	$(VERSION) main.obj $(OBJS) $(ALL_LIBS)
	$(CC) /Fe$(RUNTIME) $(CFLAGS) $(LDFLAGS) main.obj $(OBJS) $(ALL_LIBS) $(LD_LIBS) wsock32.lib netapi32.lib

$(VERSION):
		echo "$(VERSION)" > $(VERSION)

#
# Sizes
#
sizes-of-some-c-types--autogenerated.h:	generate-sizes-of-some-c-types-h.exe
	.\generate-sizes-of-some-c-types-h.exe

#
# kernel .compiled files
#
main.obj:		$(KERN_DIR)\main.c \
		sizes-of-some-c-types--autogenerated.h $(H_DIR)\runtime-base.h $(H_DIR)\runtime-commandline-argument-processing.h \
		$(H_DIR)\runtime-configuration.h $(H_DIR)\make-strings-and-vectors-etc.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\main.c

runtime-options.obj:	$(KERN_DIR)\error-reporting.c \
		$(H_DIR)\runtime-base.h $(H_DIR)\runtime-commandline-argument-processing.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\runtime-options.c

error-reporting.obj:	$(KERN_DIR)\error-reporting.c $(H_DIR)\runtime-base.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\error-reporting.c

dummy-main.obj:	$(KERN_DIR)\dummy-main.c sizes-of-some-c-types--autogenerated.h $(H_DIR)\runtime-base.h $(H_DIR)\runtime-configuration.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\dummy-main.c

load-compiledfiles.obj:	$(KERN_DIR)\load-compiledfiles.c \
		$(H_DIR)\system-dependent-stuff.h $(H_DIR)\flush-instruction-cache-system-dependent.h \
		sizes-of-some-c-types--autogenerated.h $(H_DIR)\runtime-base.h $(H_DIR)\compiledfile.h \
		$(H_DIR)\make-strings-and-vectors-etc.h $(H_DIR)\runtime-globals.h $(H_DIR)\heapcleaner.h \
		$(H_DIR)\runtime-configuration.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\load-compiledfiles.c

load-and-run-heap-image.obj:	$(KERN_DIR)\load-and-run-heap-image.c \
		sizes-of-some-c-types--autogenerated.h \
                system-signals.h \
		$(H_DIR)\runtime-base.h $(H_DIR)\system-dependent-root-register-indices.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\load-and-run-heap-image.c

run-mythryl-code-and-runtime-eventloop.obj:	$(KERN_DIR)\run-mythryl-code-and-runtime-eventloop.c \
		sizes-of-some-c-types--autogenerated.h reg-mask.h \
                system-signals.h \
		$(H_DIR)\runtime-base.h $(H_DIR)\runtime-values.h \
		$(H_DIR)\system-dependent-root-register-indices.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\run-mythryl-code-and-runtime-eventloop.c

construct-runtime-package.obj:	$(KERN_DIR)\construct-runtime-package.c \
		sizes-of-some-c-types--autogenerated.h $(H_DIR)\runtime-base.h $(H_DIR)\runtime-values.h $(H_DIR)\runtime-configuration.h \
		$(H_DIR)\mythryl-callable-cfun-hashtable.h $(H_DIR)\architecture-and-os-names-system-dependent.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\construct-runtime-package.c

runtime-state.obj:	$(KERN_DIR)\runtime-state.c \
		sizes-of-some-c-types--autogenerated.h \
                system-signals.h \
		$(H_DIR)\runtime-base.h $(H_DIR)\heap-tags.h \
		$(H_DIR)\runtime-values.h $(H_DIR)\system-dependent-root-register-indices.h \
		$(H_DIR)\runtime-globals.h $(H_DIR)\runtime-timer.h $(H_DIR)\heapcleaner.h \
		$(H_DIR)\runtime-configuration.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\runtime-state.c

timers.obj:	$(KERN_DIR)\timers.c \
		sizes-of-some-c-types--autogenerated.h \
                system-signals.h \
		$(H_DIR)\runtime-base.h \
		$(H_DIR)\runtime-timer.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\timers.c

win32-timers.obj:	$(KERN_DIR)\win32-timers.c \
		sizes-of-some-c-types--autogenerated.h \
		$(MACH_DIR)\win32-timers.h \
		$(H_DIR)\runtime-base.h \
		$(H_DIR)\system-dependent-root-register-indices.h \
		$(H_DIR)\runtime-timer.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\win32-timers.c

swap-bytes.obj:	$(KERN_DIR)\swap-bytes.c \
		sizes-of-some-c-types--autogenerated.h $(H_DIR)\runtime-base.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(KERN_DIR)\swap-bytes.c


#
# C libraries
#
mythryl-callable-c-libraries.obj:	$(CLIB_DIR)\mythryl-callable-c-libraries.c \
		sizes-of-some-c-types--autogenerated.h $(H_DIR)\runtime-base.h \
		$(CLIB_DIR)\mythryl-callable-c-libraries-list.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) /I$(CLIB_DIR) $(CLIB_DIR)\mythryl-callable-c-libraries.c

win32-raise-syserr.obj:	$(CLIB_DIR)\win32-raise-syserr.c \
		sizes-of-some-c-types--autogenerated.h \
		$(H_DIR)\runtime-base.h \
                $(H_DIR)\system-dependent-root-register-indices.h \
		$(H_DIR)\make-strings-and-vectors-etc.h $(H_DIR)\runtime-globals.h \
		$(CLIB_DIR)\raise-error.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(CLIB_DIR)\win32-raise-syserr.c



# Machine dependent .compiled files
#

win32-fault.obj:	$(MACH_DIR)\win32-fault.c $(MACH_DIR)\win32-fault.h \
		$(H_DIR)\system-dependent-signal-get-set-etc.h \
		system-signals.h \
		sizes-of-some-c-types--autogenerated.h \
		$(H_DIR)\runtime-base.h \
		$(H_DIR)\system-dependent-root-register-indices.h \
		$(H_DIR)\runtime-globals.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)\win32-fault.c

win32-stuff.obj:	$(MACH_DIR)\win32-stuff.c
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)\win32-stuff.c

signal-stuff.obj:	$(MACH_DIR)\signal-stuff.c \
		sizes-of-some-c-types--autogenerated.h system-signals.h \
		$(H_DIR)\runtime-base.h $(H_DIR)\system-dependent-signal-stuff.h \
		$(H_DIR)\system-dependent-root-register-indices.h \
		$(H_DIR)\runtime-configuration.h $(H_DIR)\make-strings-and-vectors-etc.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)\signal-stuff.c

win32-signal.obj:	$(MACH_DIR)\win32-signal.c win32-sigtbl.c \
		sizes-of-some-c-types--autogenerated.h \
		$(H_DIR)\runtime-base.h \
		$(H_DIR)\system-dependent-signal-stuff.h $(H_DIR)\system-dependent-root-register-indices.h \
		$(H_DIR)\runtime-configuration.h $(H_DIR)\make-strings-and-vectors-etc.h \
		$(H_DIR)\runtime-globals.h \
		$(H_DIR)\system-dependent-signal-get-set-etc.h
	$(CC) /c $(CFLAGS) $(DEFS) $(INCLUDES) $(MACH_DIR)\win32-signal.c

system-signals.h:	generate-system-signals-h-for-win32-systems.exe
	.\generate-system-signals-h-for-win32-systems.exe

win32-sigtbl.c:	gen-win32-sigtbl.exe
	.\gen-win32-sigtbl.exe

reg-mask.h:	generate-regmask-h.exe
	.\generate-regmask-h.exe

prim.obj:	$(MACH_DIR)\prim.$(TARGET).masm \
		$(MACH_DIR)\intel32-masm.h \
		sizes-of-some-c-types--autogenerated.h reg-mask.h $(H_DIR)\runtime-base.h $(H_DIR)\heap-tags.h \
		$(H_DIR)\asm-base.h \
		task-and-pthread-struct-field-offsets--autogenerated.h
	$(CPP) /D_ASM_ $(DEFS) /I$(MACH_DIR) $(INCLUDES) /Tc$(MACH_DIR)\prim.$(TARGET).masm > prim.s
	$(AS) /c prim.s
	


#
#

task-and-pthread-struct-field-offsets--autogenerated.h:	generate-task-and-pthread-struct-field-offsets-h.exe sizes-of-some-c-types--autogenerated.h \
                system-signals.h \
		$(H_DIR)\runtime-base.h \
		$(H_DIR)\system-dependent-root-register-indices.h
	.\generate-task-and-pthread-struct-field-offsets-h.exe


#
# Arguments to recursive make
#
MK_ARGS =		VERSION="$(VERSION)" \
			MAKE="$(MAKE)" \
			CC="$(CC)" CFLAGS="$(CFLAGS)" DEFS="$(DEFS)" \
			AR="$(AR)" ARFLAGS="$(ARFLAGS)" \
			RANLIB="$(RANLIB)" \
			INCLUDES="$(GC_INCLUDES)"

#
# memory management library
#
$(MEM_DIR)\libmythryl-ram.lib:	FORCE
	cd $(MEM_DIR)
	$(MAKE) OBJS="$(LIBMEM_OBJS)" $(MK_ARGS) libmythryl-ram.lib
	cd $(MAKEDIR)

#
# Cleaner library
#
$(HEAPCLEANER_DIR)\$(GC_LIB):	FORCE
	cd $(HEAPCLEANER_DIR)
	$(MAKE) CHECK_HEAP="$(CHECK_HEAP)" $(MK_ARGS) $(GC_LIB)
	cd $(MAKEDIR)

#
# multiprocessor library (optional)
#
$(MULTICORE_DIR)\libmythryl-pthread.lib:	FORCE
	cd $(MULTICORE_DIR)
	$(MAKE) $(LIBMULTICORE_OBJS) $(MK_ARGS) libmythryl-pthread.lib
	cd $(MAKEDIR)

#
# to force recursive makes
#
FORCE:



# Configuration tools
#
generate-sizes-of-some-c-types-h.exe:	$(CONFIG_DIR)\generate-sizes-of-some-c-types-h start-and-finish-generating-header-file.obj $(CONFIG_DIR)\header-file-autogeneration-stuff.h \
		$(H_DIR)\runtime-base.h
	$(CC) $(DEFS) $(GEN_INCLUDES) /Fegenerate-sizes-of-some-c-types-h.exe $(CONFIG_DIR)\generate-sizes-of-some-c-types-h start-and-finish-generating-header-file.obj

generate-regmask-h.exe:	$(CONFIG_DIR)\generate-regmask-h start-and-finish-generating-header-file.obj $(CONFIG_DIR)\header-file-autogeneration-stuff.h
	$(CC) $(DEFS) $(GEN_INCLUDES) /Fegenerate-regmask-h.exe $(CONFIG_DIR)\generate-regmask-h start-and-finish-generating-header-file.obj

generate-task-and-pthread-struct-field-offsets-h.exe:	$(CONFIG_DIR)\generate-task-and-pthread-struct-field-offsets-h start-and-finish-generating-header-file.obj $(CONFIG_DIR)\header-file-autogeneration-stuff.h \
		sizes-of-some-c-types--autogenerated.h \
                system-signals.h \
		$(H_DIR)\runtime-base.h \
		$(H_DIR)\system-dependent-root-register-indices.h
	$(CC) $(DEFS) $(GEN_INCLUDES) /Fegenerate-task-and-pthread-struct-field-offsets-h $(CONFIG_DIR)\generate-task-and-pthread-struct-field-offsets-h start-and-finish-generating-header-file.obj

generate-system-signals-h-for-win32-systems.exe:	$(CONFIG_DIR)\generate-system-signals-h-for-win32-systems.c $(CONFIG_DIR)\win32-sigtab.h \
		start-and-finish-generating-header-file.obj \
		$(CONFIG_DIR)\header-file-autogeneration-stuff.h
	$(CC) $(GEN_INCLUDES) $(DEFS) /Fegenerate-system-signals-h-for-win32-systems.exe $(CONFIG_DIR)\generate-system-signals-h-for-win32-systems.c start-and-finish-generating-header-file.obj

gen-win32-sigtbl.exe:	$(CONFIG_DIR)\gen-win32-sigtbl.c $(CONFIG_DIR)\win32-sigtab.h \
		start-and-finish-generating-header-file.obj \
		$(CONFIG_DIR)\header-file-autogeneration-stuff.h
	$(CC) $(CFLAGS) $(GEN_INCLUDES) $(DEFS) /Fegen-win32-sigtbl.exe $(CONFIG_DIR)\gen-win32-sigtbl.c start-and-finish-generating-header-file.obj

start-and-finish-generating-header-file.obj:	$(CONFIG_DIR)\start-and-finish-generating-header-file.c $(CONFIG_DIR)\header-file-autogeneration-stuff.h
	$(CC) /c $(GEN_INCLUDES) $(CONFIG_DIR)\start-and-finish-generating-header-file.c

#
# Make rules for the C libraries
#

# include directories for the library sub-directories
#
LIB_OBJS_DIR =	..\..o
LIB_H_DIR =	..\..\include
LIB_MACH_DIR =  ..\..\machine-dependent
LIB_INCLUDES =	/I$(LIB_OBJS_DIR) /I$(LIB_H_DIR) /I$(LIB_MACH_DIR) /I..

#
# Arguments to recursive make
#
LIB_MK_ARGS =		VERSION="$(VERSION)" \
			MAKE="$(MAKE)" \
			CC="$(CC)" CFLAGS="$(CFLAGS)" DEFS="$(DEFS)" \
			AR="$(AR)" ARFLAGS="$(ARFLAGS)" \
			RANLIB="$(RANLIB)" \
			INCLUDES="$(LIB_INCLUDES)"

$(CLIB_DIR)\win32\libwin32.lib: FORCE
	cd $(CLIB_DIR)\win32
	$(MAKE) $(LIB_MK_ARGS) libwin32.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\win32-io\libwin32-io.lib: FORCE
	cd $(CLIB_DIR)\win32-io
	$(MAKE) $(LIB_MK_ARGS) libwin32-io.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\win32-file-system\libwin32-file-system.lib: FORCE
	cd $(CLIB_DIR)\win32-file-system
	$(MAKE) $(LIB_MK_ARGS) libwin32-file-system.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\win32-process\libwin32-process.lib: FORCE
	cd $(CLIB_DIR)\win32-process
	$(MAKE) $(LIB_MK_ARGS) libwin32-process.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\heap\libmythryl-heap.lib: FORCE
	cd $(CLIB_DIR)\heap
	$(MAKE) $(LIB_MK_ARGS) libmythryl-heap.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\signal\libmythryl-signal.lib: FORCE
	cd $(CLIB_DIR)\signal
	$(MAKE) $(LIB_MK_ARGS) libmythryl-signal.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\socket\libmythryl-socket.lib: FORCE
	cd $(CLIB_DIR)\socket
	$(MAKE) $(LIB_MK_ARGS) libmythryl-socket.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\dl\dynload.lib: FORCE
	cd $(CLIB_DIR)\dl
	$(MAKE) $(LIB_MK_ARGS) dynload.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\profile\libmythryl-space-and-time-profiling.lib: FORCE
	cd $(CLIB_DIR)\profile
	$(MAKE) $(LIB_MK_ARGS) libmythryl-space-and-time-profiling.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\time\libmythryl-time.lib: FORCE
	cd $(CLIB_DIR)\time
	$(MAKE) $(LIB_MK_ARGS) libmythryl-time.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\date\liblmythryl-date.lib: FORCE
	cd $(CLIB_DIR)\date
	$(MAKE) $(LIB_MK_ARGS) libmythryl-date.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\math\libmythryl-math.lib: FORCE
	cd $(CLIB_DIR)\math
	$(MAKE) $(LIB_MK_ARGS) libmythryl-math.lib
	cd $(MAKEDIR)

$(CLIB_DIR)\ccalls\libmythryl-ccalls.lib: FORCE
	cd $(CLIB_DIR)\ccalls 
	$(MAKE) $(LIB_MK_ARGS) libmythryl-ccalls.lib
	cd $(MAKEDIR)

#$(CLIB_DIR)\multicore\libmythryl-pthread.lib: FORCE
#	cd $(CLIB_DIR)\pthread
#	$(MAKE) $(LIB_MK_ARGS) libmythryl-pthread.lib
#	cd $(MAKEDIR)



## COPYRIGHT(c) 1996 Bell Laboratories, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2011,
## released under Gnu Public Licence version 3.

