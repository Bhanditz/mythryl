#
# makefile for the C library that provides ML-callable C functions
# win32 specific

SHELL =

INC_DIR =	..\..\include
CLIB_DIR =	..\

INCLUDES =	/I$(INC_DIR) /I$(CLIB_DIR) /I..\..o

MAKEFILE = 	makefile.win32
MAKE =		nmake /F$(MAKEFILE)
AS =		ml /Cx /Zd /Zi /Fr
AR =		lib
ARFLAGS =	
RANLIB =	lib

LIBRARY =	libmythryl-ccalls.lib

VERSION =	v-dummy



OBJS =		libmythryl-ccalls.obj \
		ccalls.obj \
		ccalls-fns.obj \
		c-entry.obj \
		cutil.obj

C_CFUNS = cutil-cfuns.h

$(LIBRARY)	: $(VERSION) $(OBJS)
	del /F /Q $(LIBRARY)
	$(AR) $(ARFLAGS) /out:$(LIBRARY) $(OBJS)
	$(RANLIB) /out:$(LIBRARY)

$(VERSION) :
	echo "$(VERSION)" > $(VERSION)

DEPENDENTS = $(CLIB_DIR)\raise-error.h	$(CLIB_DIR)\ml-c.h \
	     $(INC_DIR)\system-dependent-stuff.h $(INC_DIR)\runtime-base.h \
	     $(INC_DIR)\runtime-values.h $(INC_DIR)\flush-instruction-cache-system-dependent.h \
	     ccalls.h \
  	     cfun-proto-list.h cfun-list.h

libmythryl-ccalls.obj: $(INC_DIR)\system-dependent-stuff.h $(DEPENDENTS) $(C_CFUNS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) $(LOCAL_INCLUDES) /c libmythryl-ccalls.c
	
c-entry.obj: c-entry.asm ccalls.h
	$(CPP) /D_ASM_ $(DEFS) $(INCLUDES) c-entry.asm > c-entry.s
	$(AS) /c c-entry.s

ccalls.obj: $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) $(LOCAL_INCLUDES) /c ccalls.c

ccalls-fns.obj: $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) $(LOCAL_INCLUDES) /c ccalls-fns.c

cutil.obj: $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) $(LOCAL_INCLUDES) /c cutil.c

clean:
	del /F /Q v-* *.obj *.pdb *.s  $(LIBRARY)

