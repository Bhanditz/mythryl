#
# The win32-specific makefile for the runtime library.
#

SHELL =

INC_DIR =	..\..\include
MACH_DIR =      ..\..\machine-dependent
CLIB_DIR =	..\

INCLUDES =	/I$(INC_DIR) /I$(CLIB_DIR) /I..\..o /I$(MACH_DIR)
GC_INCLUDES =	$(INCLUDES) /I..\..\gc

MAKEFILE = 	makefile.win32
MAKE =		nmake /F$(MAKEFILE)
AR =		lib
ARFLAGS =
RANLIB =	lib

LIBRARY =	libmythryl-heap.lib

VERSION =	v-dummy

OBJS =		libmythryl-heap.obj \
		allocate-codechunk.obj \
		commandline-args.obj \
		raw-commandline-args.obj \
		program-name-from-commandline.obj \
		datastructure-unpickler.obj \
		datastructure-pickler.obj \
		debug.obj \
		dummy.obj \
		export-heap.obj \
		export-fun.obj \
		cleaner-control.obj \
		interval-tick.obj \
		make-codechunk-executable.obj \
		make-package-literals-via-bytecode-interpreter.obj \
		make-single-slot-tuple.obj \
		concatenate-two-tuples.obj \
		get-platform-property.obj \
		set-sigalrm-frequency.obj

$(LIBRARY)	: $(VERSION) $(OBJS)
	del /Q /F $(LIBRARY)
	$(AR) $(ARFLAGS) /out:$(LIBRARY) $(OBJS)
	$(RANLIB) $(LIBRARY)

$(VERSION) :
	echo "$(VERSION)" > $(VERSION)

DEPENDENTS=$(INC_DIR)\system-dependent-unix-stuff.h $(INC_DIR)\runtime-base.h \
	   $(INC_DIR)\runtime-values.h \
	   $(INC_DIR)\make-strings-and-vectors-etc.h \
	   $(CLIB_DIR)\lib7-c.h cfun-proto-list.h cfun-list.h

libmythryl-heap.obj: libmythryl-heap.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c libmythryl-heap.c

allocate-codechunk.obj: allocate-codechunk.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c allocate-codechunk.c

commandline-args.obj: commandline-args.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c commandline-args.c

raw-commandline-args.obj: raw-commandline-args.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c raw-commandline-args.c

program-name-from-commandline.obj: program-name-from-commandline.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c program-name-from-commandline.c

datastructure-unpickler.obj: datastructure-unpickler.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c datastructure-unpickler.c

datastructure-pickler.obj: datastructure-pickler.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c datastructure-pickler.c

debug.obj: debug.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c debug.c

dummy.obj: dummy.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c dummy.c

export-heap.obj: export-heap.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c export-heap.c

export-fun.obj: export-fun.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c export-fun.c

cleaner-control.obj: cleaner-control.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c cleaner-control.c

interval-tick.obj: interval-tick.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c interval-tick.c

make-codechunk-executable.obj: make-codechunk-executable.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c make-codechunk-executable.c

make-package-literals-via-bytecode-interpreter.obj: make-package-literals-via-bytecode-interpreter.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c make-package-literals-via-bytecode-interpreter.c

make-single-slot-tuple.obj: make-single-slot-tuple.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c make-single-slot-tuple.c

concatenate-two-tuples.obj: concatenate-two-tuples.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c concatenate-two-tuples.c

get-platform-property.obj: get-platform-property.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c get-platform-property.c

set-sigalrm-frequency.obj: set-sigalrm-frequency.c $(MACH_DIR)\win32-timers.h $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(GC_INCLUDES) /c set-sigalrm-frequency.c

clean :
	del /Q /F v-* *.obj *.pdb $(LIBRARY)

