#
# the makefile for the Sockets library
# win32 specific

SHELL =		

INC_DIR =	..\..\include
CLIB_DIR =	..\

INCLUDES =	/I$(INC_DIR) /I$(CLIB_DIR) /I..\..o

MAKEFILE = 	makefile.win32
MAKE =		nmake /F$(MAKEFILE)
AR =		lib
ARFLAGS =	
RANLIB =	lib

LIBRARY =	libmythryl-socket.lib

VERSION =	v-dummy

NETDB_OBJS =	get-host-name.obj \
		get-network-by-name.obj \
		get-network-by-address.obj \
		get-host-by-name.obj \
		get-host-by-address.obj \
		get-protocol-by-name.obj \
		get-protocol-by-number.obj \
		get-service-by-name.obj \
		get-service-by-port.obj

CTL_OBJS =	get-or-set-socket-broadcast-option.obj \
		get-or-set-socket-debug-option.obj \
		get-or-set-socket-dontroute-option.obj \
		get-or-set-socket-keepalive-option.obj \
		get-or-set-socket-linger-option.obj \
		get-or-set-socket-nodelay-option.obj \
		get-or-set-socket-oobinline-option.obj \
		get-or-set-socket-rcvbuf-option.obj \
		get-or-set-socket-reuseaddr-option.obj \
		get-or-set-socket-sndbuf-option.obj \
		getERROR.obj \
		getTYPE.obj \
		setNBIO.obj \
		getNREAD.obj \
		getATMARK.obj \
		getpeername.obj \
		getsockname.obj

SOCK_OBJS =	accept.obj \
		bind.obj \
		close.obj \
		connect.obj \
		listen.obj \
		socket.obj \
		to-log.obj \
		shutdown.obj

IO_OBJS =	pull.obj \
		recvbuf.obj \
		recvfrom.obj \
		recvbuffrom.obj \
		sendbuf.obj \
		sendbufto.obj

MISC_OBJS =	list-addr-families.obj \
		list-socket-types.obj \
		getaddrfamily.obj \
		inetany.obj \
		from-inetaddr.obj \
		to-inetaddr.obj

UTIL_OBJS =     util-mkhostent.obj \
                util-mknetent.obj \
                util-mkservent.obj \
                get-or-set-boolean-socket-option.obj \
                tbl-socket-type.obj \
                tbl-addr-family.obj \
		setprintiffd.obj \
		log-if.obj

OBJS =		libmythryl-socket.obj \
		$(NETDB_OBJS) $(CTL_OBJS) $(SOCK_OBJS) $(MISC_OBJS) \
		$(IO_OBJS) $(UTIL_OBJS)


$(LIBRARY)	: $(VERSION) $(OBJS)
	del /F /Q $(LIBRARY)
	$(AR) $(ARFLAGS) /out:$(LIBRARY) $(OBJS)
	$(RANLIB) /out:$(LIBRARY)

$(VERSION) :
	echo "$(VERSION)" > $(VERSION)

DEPENDENTS = $(INC_DIR)\system-dependent-unix-stuff.h $(INC_DIR)\runtime-base.h \
	     $(INC_DIR)\runtime-values.h \
	     $(CLIB_DIR)\lib7-c.h cfun-proto-list.h cfun-list.h


libmythryl-socket.obj: libmythryl-socket.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c libmythryl-socket.c

list-addr-families.obj: list-addr-families.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c list-addr-families.c

list-socket-types.obj: list-socket-types.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c list-socket-types.c

to-log.obj: to-log.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c to-log.c

socket.obj: socket.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c socket.c

recvbuffrom.obj: recvbuffrom.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c recvbuffrom.c

recvfrom.obj: recvfrom.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c recvfrom.c

recvbuf.obj: recvbuf.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c recvbuf.c

pull.obj: pull.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c pull.c

sendbufto.obj: sendbufto.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c sendbufto.c

sendbuf.obj: sendbuf.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c sendbuf.c

shutdown.obj: shutdown.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c shutdown.c

listen.obj: listen.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c listen.c

connect.obj: connect.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c connect.c

bind.obj: bind.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c bind.c

accept.obj: accept.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c accept.c

close.obj: close.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c close.c

getaddrfamily.obj: getaddrfamily.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c getaddrfamily.c

inetany.obj: inetany.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c inetany.c

from-inetaddr.obj: from-inetaddr.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c from-inetaddr.c

to-inetaddr.obj: to-inetaddr.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c to-inetaddr.c

getsockname.obj: getsockname.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c getsockname.c

getpeername.obj: getpeername.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c getpeername.c

get-service-by-port.obj: get-service-by-port.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-service-by-port.c

get-service-by-name.obj: get-service-by-name.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-service-by-name.c

get-protocol-by-number.obj: get-protocol-by-number.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-protocol-by-number.c

get-protocol-by-name.obj: get-protocol-by-name.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-protocol-by-name.c

get-host-by-name.obj: get-host-by-name.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-host-by-name.c

get-host-by-address.obj: get-host-by-address.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-host-by-address.c

get-network-by-name.obj: get-network-by-name.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-network-by-name.c

get-network-by-address.obj: get-network-by-address.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-network-by-address.c

get-host-name.obj: get-host-name.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-host-name.c

util-mkhostent.obj: util-mkhostent.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c util-mkhostent.c

util-mknetent.obj: util-mknetent.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c util-mknetent.c

util-mkservent.obj: util-mkservent.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c util-mkservent.c

get-or-set-boolean-socket-option.obj: get-or-set-boolean-socket-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-boolean-socket-option.c

getATMARK.obj: getATMARK.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c getATMARK.c

getNREAD.obj: getNREAD.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c getNREAD.c

setNBIO.obj: setNBIO.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c setNBIO.c

getERROR.obj: getERROR.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c getERROR.c

getTYPE.obj: getTYPE.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c getTYPE.c

get-or-set-socket-nodelay-option.obj: get-or-set-socket-nodelay-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-nodelay-option.c

get-or-set-socket-rcvbuf-option.obj: get-or-set-socket-rcvbuf-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-rcvbuf-option.c

get-or-set-socket-sndbuf-option.obj: get-or-set-socket-sndbuf-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-sndbuf-option.c

get-or-set-socket-oobinline-option.obj: get-or-set-socket-oobinline-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-oobinline-option.c

get-or-set-socket-broadcast-option.obj: get-or-set-socket-broadcast-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-broadcast-option.c

get-or-set-socket-linger-option.obj: get-or-set-socket-linger-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-linger-option.c

get-or-set-socket-dontroute-option.obj: get-or-set-socket-dontroute-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-dontroute-option.c

get-or-set-socket-keepalive-option.obj: get-or-set-socket-keepalive-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-keepalive-option.c

get-or-set-socket-reuseaddr-option.obj: get-or-set-socket-reuseaddr-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-reuseaddr-option.c

get-or-set-socket-debug-option.obj: get-or-set-socket-debug-option.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c get-or-set-socket-debug-option.c

tbl-socket-type.obj: tbl-socket-type.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c tbl-socket-type.c

tbl-addr-family.obj: tbl-addr-family.c $(DEPENDENTS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) /c tbl-addr-family.c


clean :
	del /F /Q v-* *.obj *.pdb $(LIBRARY)
