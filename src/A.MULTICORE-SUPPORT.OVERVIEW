The SML/NJ multicore support in the codebase was implemented circa 1992-1994
on multiprocessor SGI and Solaris machines.  An early paper describing this
work is:

    A Portable Multiprocessor Interface for Standard ML of New Jersey
    Morrisett + Tolmach 1992 31p
    http://mythryl.org/pub/pml/a-portable-multiprocessor-interface-for-smlnj-morrisett-tolmach-1992.ps

Support is included if

    MULTICORE_SUPPORT

is defined.

The source files affected are:

    src/c/main/runtime-state.c:                          Populates pthread_table_global with malloc'ed Pthreads; Partition agegroup0 between them; only Pthread zero has timers.
    src/c/main/run-mythryl-code-and-runtime-eventloop.c: Drives garbage collection from software-generated-periodic-event facility.
    src/c/main/error.c:                                  die() calls mc_shut_down ();
    src/c/main/runtime-main.c:                           Calls  mc_initialize();  from sgi-multicore.c|solaris-multicore.c;  accepts and ignores   --runtime-nprocs=6  arg.
    src/c/machine-dependent/posix-signal.c:              Event handling -- currently done only in thread zero.
    src/c/machine-dependent/win32-signal.c:              "                                                   "
    src/c/main/win32-timers.c:                           "                                                   "

    src/c/h/runtime-configuration.h:                     #defines  MAX_PTHREADS  and   MAX_TOTAL_CLEANING_ROOTS
    src/c/h/pthread.h:                                   Adds  Pid  and  Pthread_Status   fields to standard Pthread struct.

    src/c/lib/mythryl-callable-c-libraries-list.h:	Adds      Libmythryl_Multicore   to set of Mythryl-callable C libraries.
    src/c/lib/multicore/libmythryl-multicore.c      Defines   Libmythryl_Multicore.
    src/c/lib/multicore/cfun-list.h:             Lists the Libmythryl_Multicore   Mythryl-callable functions:  acquire_pthread, max_pthreads, release_pthread, spin_lock. 
    //
    src/c/lib/multicore/acquire-pthread.c        Provides  Libmythryl_Multicore   Mythryl-callable function binding   acquire_pthread   -- actual implementation is   mc_acquire_pthread   in sgi-multicore.c|solaris-multicore.c
    src/c/lib/multicore/max-pthreads.c           Provides  Libmythryl_Multicore   Mythryl-callable function binding   max_pthreads      -- actual implementation is   mc_max_pthreads      in sgi-multicore.c|solaris-multicore.c
    src/c/lib/multicore/release-pthread.c        Provides  Libmythryl_Multicore   Mythryl-callable function binding   release_pthread   -- actual implementation is   mc_release_pthread   in sgi-multicore.c|solaris-multicore.c
    src/c/lib/multicore/spin-lock.c              Provides  Libmythryl_Multicore   Mythryl-callable function binding   spin_lock         -- actual implementation is   mc_release_pthread   in sgi-multicore.c|solaris-multicore.c

    src/c/lib/heap/get-platform-property.c:                 Defines "HAS_MP" to be TRUE instead of FALSE.
    src/c/cleaner/make-strings-and-vectors-etc.c:    Fixes to retry when other pthreads steal memory out from under us.
    src/c/cleaner/clean-agegroup0.c:                 Process one heap_changelog per pthread instead of a single heap_changelog.
    src/c/cleaner/call-cleaner.c:                Get additional roots from   mc_extra_cleaner_roots_global  and the saved per-pthread Mythryl register sets, call mc_finish_cleaning
    src/c/cleaner/multicore-cleaning-stuff.c:    Multicore-specific start-clean and finish-clean busywork.

    src/c/h/runtime-multicore.h:                         Defines the interface to the system-dependent multicore support functions mc_*.
    src/c/multicore/sgi-multicore.c:                     Implements the above.
    src/c/multicore/solaris-multicore.c:                 Implements the above.

