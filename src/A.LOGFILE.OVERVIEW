Brief notes:


src/lib/src/lib/thread-kit/src/lib/logger.pkg

    --> See copious comments at bottom of   src/lib/src/lib/thread-kit/src/lib/logger.api

    This is the main multi-threaded tracing/logging package.
    It is activated by calling (eg)

        set_logger_to  (TO_FILE tracefile);

    -- for an example see   src/lib/x-kit/xclient/pkg/stuff/xclient-unit-test.pkg



src/lib/x-kit/xclient/pkg/stuff/xlogger.pkg
    Special tracing support for x-kit built on top of   src/lib/src/lib/thread-kit/src/lib/logger.pkg




mythryl.compile.log

   This file is created by calling

	  set_process_name_in_logfile  "whatever"	   in     src/lib/std/src/io/file-g.pkg

   which generic gets instantiated in     src/lib/std/src/posix/file.pkg

   This logfile may then be written via the functions

       file::log    [ "strings" ];
       file::say    [ "strings" ];

   (This stuff belongs in
       src/lib/std/src/io/say.pkg
   not src/lib/std/src/io/file-g.pkg
   but that introduces cyclic-dependency problems
   when debugging stuff that involves file I/O,
   which is pretty common.)

   These three functions can be independently configured to write to stdout and/or the logfile,
   via the function calls

	include file;

	set_say_policy ( LOG, STDOUT,  bool);
	set_say_policy ( SAY, STDOUT,  bool);
	set_say_policy ( LOG, LOGFILE, bool);
	set_say_policy ( SAY, LOGFILE, bool);

   By default:  log  writes only to the logfile.
                say  write  to both stdout and logfile.

   This facility is used mainly in    src/app/makelib/main/makelib-g.pkg



load-compiledfiles.c.log

   This file is created by    open_logfile   in   src/c/main/load-compiledfiles.c
   It is written only within that file.


mythryl.c.log~

    This file is created by    open_logfile   in   src/c/o/mythryl.c
    It is written only within that file.


mythryl-gtk-slave-%d.log~

    This file is created by open_logfile   in   src/c/gtk/mythryl-gtk-slave.c
    It is written in that file and         in   src/c/lib/gtk/gtk-driver.c





