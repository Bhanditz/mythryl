stipulate
    package hbo =  highcode_baseops;				# highcode_baseops	is from   src/lib/compiler/back/top/highcode/highcode-baseops.pkg
herein


By default Mythryl generates code which always checks that a
vector index is valid before doing a fetch/store to/from the vector.

This prevents heap corruption due to incorrect index computations,
but does have a significant performance penalty.

The bounds-checking logic is implemented in

    src/lib/compiler/back/top/translate/translate-deep-syntax-to-lambdacode.pkg

in the cases of

    hbo::GET_RO_VECSLOT_CONTENTS_AFTER_BOUNDS_CHECK
    hbo::GET_RW_VECSLOT_CONTENTS_AFTER_BOUNDS_CHECK
    hbo::SET_VECSLOT_AFTER_BOUNDS_CHECK
    hbo::GET_VECSLOT_NUMERIC_CONTENTS
    hbo::SET_VECSLOT_TO_NUMERIC_VALUE

A compile switch  compiler::check_vector_index_bounds  is provided by

    src/lib/compiler/toplevel/main/compiler-controls.pkg

-- bounds-checking may be disabled in a particular source file by placing
the line

    #DO  set_control  "compiler::check_vector_index_bounds"  "FALSE";

near the top of that file.  This can make vector-intensive code more than
twice as fast.  It can also produce horrible heap corruption bugs if the
code in that file is buggy -- USE WITH EXTREME CAUTION!




end;