#!/usr/bin/mythryl
#
# This is adapted from the Chapter 2 example from
#   GLFW Users Guide Api v 2.7
#   http://www.glfw.org/GLFWUsersGuide274.pdf

stipulate
#   package ogl =  opengl_client_driver_for_library_in_main_process;			# opengl_client_driver_for_library_in_main_process	is from   src/glu/opengl/src/opengl-client-driver-for-library-in-main-process.pkg
    package ogl =  opengl_client_driver_for_library_in_c_subprocess;			# opengl_client_driver_for_library_in_c_subprocess	is from   src/glu/opengl/src/opengl-client-driver-for-library-in-c-subprocess.pkg
herein

    {
	s = ogl::make_session [];

	if (!ogl::open_window { high => 300, wide => 300, redbits => 0, greenbits => 0, bluebits => 0, alphabits => 0, depthbits => 0, stencilbits => 0, fullscreen => FALSE })
	    printf "Unable to ogl::open_window!\n";
	    exit(1);
	fi;

	loop()
	where
	    fun loop ()
		=
		{

		};
	end;
    };

    int running = GL_TRUE;

    // Initialize GLFW

    if( !glfwInit() )

    {

    exit( EXIT_FAILURE );

    }

    // Open an OpenGL window

    if( !glfwOpenWindow( 300,300, 0,0,0,0,0,0, GLFW_WINDOW ) )

    {

    glfwTerminate();

    exit( EXIT_FAILURE );

    }

    // Main loop

    while( running )

    {

    // OpenGL rendering goes here...

    glClear( GL_COLOR_BUFFER_BIT );

    // Swap front and back rendering buffers

    glfwSwapBuffers();

    // Check if ESC key was pressed or window was closed

    running = !glfwGetKey( GLFW_KEY_ESC ) &&

    glfwGetWindowParam( GLFW_OPENED );

    }

    // Close window and terminate GLFW

    glfwTerminate();

    // Exit program

    exit( EXIT_SUCCESS )
end;