# ncurses-client.api
#
# Here we define the primary low-level end-user
# api for constructing Ncurses GUI interfaces.
#
# This api is implemented by the generic package
#
#     src/glu/ncurses/src/ncurses-client-g.pkg
#
# which is instantiated twice:
#
#     src/glu/ncurses/src/ncurses-client-for-library-in-main-process.pkg
#     src/glu/ncurses/src/ncurses-client-for-library-in-c-subprocess.pkg
#
# The former puts the Ncurses library code in our main
# Mythryl process address space; the latter puts it
# in a subprocess, controlled via a pipe.
#
# Putting the Ncurses code in the main process is potentially
# faster but carries the risk that loose pointers in the
# Ncurses C code can corrupt the delicate and dynamic Mythryl
# heap.  Pointer bugs have always been endemic in C code,
# so this is a nontrivial risk.
#
# Putting the Ncurses code in a subprocess yields the opposite
# cost/benefit tradeoff:  Passing control back and forth
# through the control pipe may potentially slow down the
# GUI, but bugs in the Ncurses C code cannot possible crash
# the main Mythryl application; at most they can crash
# the Ncurses subprocess.  (Note that on a multicore machine
# putting the Ncurses display code in a subprocess may actually
# improve performance, by allowing the Ncurses code to run in
# parallel with the main Mythyrl process.)
#
#
# A alternative higher-level interface to Ncurses functionality
# which is intended to make easy stuff easier at the cost of
# being somewhat less flexible is defined in
#
#     src/glu/ncurses/src/easy-ncurses.api

# Compiled by:
#     src/lib/std/standard.lib

# Implemented in:
#     src/glu/ncurses/src/ncurses-client-for-library-in-main-process.pkg
#     src/glu/ncurses/src/ncurses-client-for-library-in-c-subprocess.pkg

# See also:
#     src/glu/ncurses/src/easy-ncurses.api



###		"Complexity is a hard global problem.
###              Efficiency is an easy local problem.
###              Solve the hard problem first."

###              "All modern American literature comes from
###               one book by Mark Twain called Huckleberry Finn.
###               American writing comes from that.
###               There is nothing before.
###               There has been nothing as good since."
###
###                                  -- Ernest Hemingway,
###                                     Green Hills of Africa,
###                                     1935 




# NB: Lines which contain a comment
#     starting with the keyword 'glue'
#     are read and analysed by
#
#         src/glu/ncurses/sh/make-ncurses-glue
#
#     which synthesizes code
#     in response.


api Ncurses_Client {
    #
#    exception NCURSES_ERROR String;

    Session;

#    Widget;  		# This is the production def

    #################################################################################################
    # The following stuff gets copied directly from the
    #     build-a: mythryl-type
    # section of
    #     src/glu/ncurses/etc/ncurses-construction.plan
    # via handle_fieldset -> build_mythryl_type -> to_xxx_client_api_types in
    #     src/lib/make-library-glue/make-library-glue.pkg
    # This section is duplicated in
    #     src/glu/ncurses/src/ncurses-client-g.pkg
    # Do not edit this or following lines -- they are autobuilt.  (patchname="types")
    # Do not edit this or preceding lines -- they are autobuilt.
    #################################################################################################

    make_session:		  List( String )           -> Session;			#								# 

#    set_widget_tree:             (Session, Widget)         -> Void;			# 
#    run_eventloop_indefinitely:	  Session                  -> Void;			#								# http://library.gnome.org/devel/gtk/stable/gtk-General.html#gtk-main
#    run_eventloop_once:		{ session: Session, block_until_event: Bool } -> Bool;	#								# http://library.gnome.org/devel/gtk/stable/gtk-General.html#gtk-main
#    quit_eventloop:		  Session                  -> Void;			#								# http://library.gnome.org/devel/gtk/stable/gtk-General.html#gtk-exit

#    make_dialog			    	                  				# 								# http://library.gnome.org/devel/gtk/stable/GtkDialog.html#gtk-dialog-new
#	:
#	Session
#	->
#	{ dialog:       Widget,
#	  vbox:         Widget,
#	  action_area:  Widget
#	};
#




#    set_easy_id:                 (Session, String, Widget) -> Void;
#    get_by_easy_id:              (Session, String) -> Widget;
#    drop_easy_id:                (Session, String) -> Void;

#    unref_object:		 (Session, Widget) -> Void;					#								# http://library.gnome.org/devel/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref


#    get_widget_allocation:	(Session, Widget) -> ncurses_event::Allocation;


    #################################################################################################
    # The following stuff gets built from
    #     build-a: plain-fn
    #     fn-name: foo
    #     fn-type: Foo -> Bar
    # paragraphs in
    #     src/glu/ncurses/etc/ncurses-construction.plan
    # via build_plain_function -> build_fun_declaration_for_'xxx_client_api' -> to_xxx_client_api_funs in
    #     src/lib/make-library-glue/make-library-glue.pkg
    # Do not edit this or following lines -- they are autobuilt.  (patchname="functions")

    print_hello_world:                       Session -> Void;
    negate_int:                             (Session, Int) -> Int;
    negate_float:                           (Session, Float) -> Float;

    negate_boolean:                         (Session, Bool) -> Bool;
    addch:                                  (Session, Int) -> Void;
    cbreak:                                  Session -> Void;

    endwin:                                  Session -> Void;
    getch:                                   Session -> Int;
    has_colors:                              Session -> Bool;

    initscr:                                 Session -> Void;
    move:                                    { session: Session, x: Int, y: Int } -> Void;
    nl:                                      Session -> Void;

    noecho:                                  Session -> Void;
    nonl:                                    Session -> Void;
    refresh:                                 Session -> Void;

    start_color:                             Session -> Void;
    # Do not edit this or preceding lines -- they are autobuilt.
    #################################################################################################

#    clamp: { min: Float, max: Float, value: Float } -> Float;

};


## Code by Jeff Prothero: Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
