# ncurses-client-driver.api

# Compiled by:
#     src/lib/std/standard.lib

# Implemented by:
#     src/glu/ncurses/src/ncurses-client-driver-for-library-in-c-subprocess.pkg

api Ncurses_Client_Driver {
    #
    Session;	# When our NCURSES server is remote, session holds the I/O streams leading to/from it.
		# When our NCURSES server is in-process, session holds little.

    make_session
        :
	{ void:              Ref (int_red_black_map::Map( Void                       -> Void )),	# drivers are allowed to read but not write these callback maps -- they are "owned" by our client, not by us.
	  bool:              Ref (int_red_black_map::Map( Bool                       -> Void )),
	  float:             Ref (int_red_black_map::Map( Float                      -> Void ))
        }
        ->
        Session;

#    get_widget_allocation: (Session, Int/*Widget*/) -> (/*x*/Int, /*y*/Int, /*wide*/Int, /*high*/Int);

#    make_dialog: Session -> (Int/*dialog Widget*/, Int/*vbox Widget*/, Int/*action_area Widget*/);

#    unref_object: (Session, Int/*Widget*/) -> Void;

#    quit_eventloop:			Session                  -> Void;
#    run_eventloop_indefinitely:	  	Session                  -> Void;
#    run_eventloop_once:		       (Session, Bool)           -> Bool;



    #################################################################################################
    # The following stuff gets built from
    #     build-a: plain-fn
    #     fn-name: foo
    #     fn-type: Int -> Void		# e.g.
    #     libcall: foo(i0)		# e.g.
    # paragraphs in
    #     src/glu/ncurses/etc/ncurses-construction.plan
    # via build_plain_function -> build_fun_declaration_for_'xxx_client_driver_api' -> to_xxx_client_driver_api in
    #     src/lib/make-library-glue/make-library-glue.pkg
    # Do not edit this or following lines -- they are autobuilt.  (patchname="functions")

    print_hello_world:                      (Session)                                -> Void;
    negate_int:                             (Session, Int)                           -> Int;
    negate_float:                           (Session, Float)                         -> Float;

    negate_boolean:                         (Session, Bool)                          -> Bool;
    addch:                                  (Session, Int)                           -> Void;
    # Do not edit this or preceding lines -- they are autobuilt.
    #################################################################################################

};
