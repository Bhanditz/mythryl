## posix-id.api

# Compiled by:
#     src/lib/std/src/standard-core.sublib



# Api for POSIX 1003.1 process dictionary submodule



###        "One of my most productive days
###         was throwing away 1000 lines of code."
###
###                          -- Ken Thompson 



###        "Do not meddle with the affairs
###         of Wizards for they are subtle
###         and quick to anger."
###
###                      -- Gildor
###
###                   [J.R.R. Tolkein, "Lord of the Rings"]



###         "We don't have to protect the
###          environment -- the Second Coming
###          is at hand."
###
###                       -- James Watt



stipulate
    package i1w =  one_word_int;					# one_word_int				is from   src/lib/std/one-word-int.pkg
    package ih  =  host_int;						# host_int				is from   src/lib/std/src/posix-1003.1b/host-int.pkg
    package uh  =  host_unt;						# host_unt				is from   src/lib/std/types-only/bind-largest32.pkg
    package tim =  time;						# time					is from   src/lib/std/time.pkg
herein

    api Posix_Id {

	eqtype Process_Id;
	eqtype File_Descriptor;

	eqtype User_Id;
	eqtype Group_Id;

	uid_to_unt:  User_Id -> uh::Unt;
	unt_to_uid:  uh::Unt -> User_Id;
	gid_to_unt:  Group_Id -> uh::Unt;
	unt_to_gid:  uh::Unt -> Group_Id;

	get_process_id:            Void -> ih::Int;          get_process_id':            Void -> Process_Id;
	get_parent_process_id:     Void -> ih::Int;          get_parent_process_id':     Void -> Process_Id;

	get_user_id:               Void -> ih::Int;          get_user_id':               Void -> User_Id;
	get_effective_user_id:     Void -> ih::Int;          get_effective_user_id':     Void -> User_Id;

	get_group_id:              Void -> ih::Int;          get_group_id':              Void -> Group_Id;
	get_effective_group_id:    Void -> ih::Int;          get_effective_group_id':    Void -> Group_Id;

	set_user_id:               ih::Int -> Void;          set_user_id':               User_Id  -> Void;
	set_group_id:              ih::Int -> Void;          set_group_id':              Group_Id -> Void;

	get_group_ids:             Void -> List( ih::Int );  get_group_ids':             Void -> List( Group_Id );

	get_login:  Void -> String;

	get_process_group:         Void -> Int;                    get_process_group':         Void -> Process_Id;
	set_session_id:            Void -> Int;                    set_session_id':            Void -> Process_Id;

	set_process_group_id
	    :
	    (Int, Int)
	    ->
	    Void;

	set_process_group_id'
	    :
	    { pid:   Null_Or( Process_Id ),
	      pgid:  Null_Or( Process_Id )
	    }
	    ->
	    Void;

	get_kernel_info:  Void -> List ((String, String));

									# Note that while get_elapsed_seconds_since_jan_1_1970()
									# is traditional (under the name 'time()'), it only measures
									# time to the resolution of seconds.
									# tim::now() is much more accurate.
									#     
	get_elapsed_seconds_since_jan_1_1970:    Void -> i1w::Int;
	get_elapsed_seconds_since_jan_1_1970':   Void -> tim::Time;

	times:  Void ->   { elapsed:  tim::Time,		# Elapsed system time 
			    utime:    tim::Time,		# User time of process 
			    stime:    tim::Time,		# System time of process 
			    cutime:   tim::Time,		# User time of terminated child processes 
			    cstime:   tim::Time			# System time of terminated child processes 
			  };

	getenv:		String -> Null_Or( String );
	environment:	Void -> List( String );

	get_name_of_controlling_terminal:	Void		-> String;
	get_name_of_terminal:			File_Descriptor -> String;
	is_a_terminal:				File_Descriptor -> Bool;

	sysconf:  String -> uh::Unt;

    };						# api Posix_Id 
end;


## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
