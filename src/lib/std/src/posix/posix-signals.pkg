## posix-signals.pkg
#
# This extends the generic SIGNALS interface to POSIX signals.

# Compiled by:
#     src/lib/std/src/standard-core.sublib


###                        "Fear is the main source of superstition,
###                         and one of the main sources of cruelty.
###                         To conquer fear is the beginning of wisdom."
###
###                                             -- Bertrand Russell 



package   posix_signals
: (weak)  Posix_Signals								# Posix_Signals		is from   src/lib/std/src/posix/posix-signals.api
{
    include runtime_signals;							# runtime_signals	is from   src/lib/std/src/nj/runtime-signals.pkg

    # The following signals are already defined in Runtime_Signals:
    #
    #  my sigHUP:   signal	#  hangup 
    #  my sigINT:   signal	#  interactive interrupt 
    #  my sigALRM:  signal	#  interval timer signal 
    #  my sigTERM:  signal	#  termination 


    # Required Posix signals:
    #
    my sig_pipe:  Signal = null_or::the (get_signal_by_name "PIPE");
    my sig_quit:  Signal = null_or::the (get_signal_by_name "QUIT");
    my sig_usr1:  Signal = null_or::the (get_signal_by_name "USR1");
    my sig_usr2:  Signal = null_or::the (get_signal_by_name "USR2");

    # Job-control signals:
    #
    my sig_chld:  Signal = null_or::the (get_signal_by_name "CHLD");
    my sig_cont:  Signal = null_or::the (get_signal_by_name "CONT");
    my sig_tstp:  Signal = null_or::the (get_signal_by_name "TSTP");
    my sig_ttin:  Signal = null_or::the (get_signal_by_name "TTIN");
    my sig_ttou:  Signal = null_or::the (get_signal_by_name "TTOU");

    # Other UNIX signals that may be available (depending on the OS):
    #
    # my sigWINCH:   signal
    # my sigURG:     signal
    # my sigIO:      signal
    # my sigPOLL:    signal
    # my sigVTALRM:  signal


};	#  posix_signals 




## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
