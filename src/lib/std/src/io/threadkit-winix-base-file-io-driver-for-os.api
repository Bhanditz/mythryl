## threadkit-winix-base-file-io-driver-for-os.api
#
# This is a multithreaded replacement for standard.lib's
#
#     src/lib/std/src/io/winix-base-file-io-driver-for-os.api
#
# The differences are that we use mailop-valued
# interfaces instead of non-blocking operations,
# and that the operations are not optional.
#
# This is the lowest layer in the multithreaded file I/O stack;
# The api for the next layer up is defined by
#
#     src/lib/std/src/io/threadkit-winix-file-for-os.api
#

# Compiled by:
#     src/lib/std/standard.lib


stipulate
    package thr =  threadkit;					# threadkit	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
herein

    api Threadkit_Winix_Base_File_Io_Driver_For_Os {
	#
	Mailop(X)   = thr::Mailop(X);

	Rw_Vector;
	Vector;
	Element;
	Vector_Slice;
	Rw_Vector_Slice;
	eqtype File_Position;

	compare:  (File_Position, File_Position) -> Order;

	Filereader
	    =
	    FILEREADER
	      {
		name:              String, 
		chunk_size:        Int,

		read_vector:       Int -> Vector,
		read_rw_vector:    Rw_Vector_Slice -> Int,

		read_vec_mailop:   Int -> Mailop( Vector ),
		read_arr_mailop:   Rw_Vector_Slice -> Mailop( Int ),

		avail:             Void -> Null_Or( Int ),

		get_position:      Null_Or( Void -> File_Position ),
		set_position:      Null_Or( File_Position -> Void ),
		end_position:      Null_Or( Void -> File_Position ),

		verify_position:   Null_Or( Void -> File_Position ),

		close:             Void -> Void,

		io_descriptor:     Null_Or( winix::io::Io_Descriptor )
	      };

	Filewriter
	    =
	    FILEWRITER
	      {
		name:               String,
		chunk_size:         Int,

		write_vector:       Vector_Slice -> Int,
		write_rw_vector:    Rw_Vector_Slice -> Int,

		write_vec_mailop:     Vector_Slice -> Mailop( Int ),
		write_arr_mailop:  Rw_Vector_Slice -> Mailop( Int ),

		get_position:       Null_Or( Void -> File_Position ),
		set_position:       Null_Or( File_Position -> Void ),
		end_position:       Null_Or( Void -> File_Position ),

		verify_position:    Null_Or( Void -> File_Position ),

		close:              Void -> Void,

		io_descriptor:       Null_Or( winix::io::Io_Descriptor )
	      };

    };
end;


## COPYRIGHT (c) 1991 John H. Reppy.
## COPYRIGHT (c) 1996 AT&T Research.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2011,
## released under Gnu Public Licence version 3.
