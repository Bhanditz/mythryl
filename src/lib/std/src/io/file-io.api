## file-io.api
#
# This defines the api for our basic file-io layer above
# the low-level file-io driver layer defined by
#
#     src/lib/std/src/io/file-io-driver-for-os.api

# Compiled by:
#     src/lib/std/src/standard-core.sublib

# Included by:
#     src/lib/std/src/io/binary-file-io.api


api   File_Io {
    #
    Vector;
    Element;

    Input_Stream;
    Output_Stream;

    read:            Input_Stream -> Vector;
    read_one:        Input_Stream -> Null_Or( Element );
    read_n:         (Input_Stream, Int) -> Vector;
    read_all:        Input_Stream -> Vector;
    can_read:       (Input_Stream, Int) -> Null_Or( Int );
    lookahead:       Input_Stream -> Null_Or( Element );
    close_input:     Input_Stream -> Void;
    end_of_stream:   Input_Stream -> Bool;

    write:           (Output_Stream, Vector ) -> Void;
    write_one:       (Output_Stream, Element) -> Void;
    flush:            Output_Stream -> Void;
    close_output:     Output_Stream -> Void;
										# Pure_File_Io	is from   src/lib/std/src/io/pure-file-io.api
    package pur:  Pure_File_Io;							# "pur" is short for "pure" (I/O).
		  sharing Vector  == pur::Vector;
		  sharing Element == pur::Element;

    make_instream:     pur::Input_Stream -> Input_Stream;

    get_instream:               Input_Stream -> pur::Input_Stream;
    set_instream:              (Input_Stream, pur::Input_Stream) -> Void;

    get_output_position:         Output_Stream -> pur::Out_Position;
    set_output_position:        (Output_Stream, pur::Out_Position) -> Void;

    make_outstream:	    pur::Output_Stream -> Output_Stream;

    get_outstream:               Output_Stream -> pur::Output_Stream;
    set_outstream:              (Output_Stream, pur::Output_Stream) -> Void;
};



## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2011,
## released under Gnu Public Licence version 3.
