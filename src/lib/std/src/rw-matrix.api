## rw-matrix.api
#
# Two-dimensional matrices.
#
# Use (_[]) and (_[]:=) to improve readability:
#
#     eval:  m = rw_matrix::make_matrix ((2, 2), 0.0);
#     eval:  rw_matrix::get (m, (0,0));
#     0.0
#     
#     eval:  rw_matrix::set (m, (0,0), 1.0);
#     eval:  rw_matrix::get (m, (0,0));
#     1.0
#     
#     eval:  (_[])   =  rw_matrix::get;
#     eval:  (_[]:=) =  rw_matrix::set;
#     eval:  m[0,0] :=  2.0;
#     eval:  m[0,0]; 
#     2.0


# Compiled by:
#     src/lib/std/src/standard-core.sublib



###                   "If you go on with this nuclear arms race, all
###                    you are going to do is make the rubble bounce."
###
###                                     -- Winston Churchill


stipulate
    package vec =  vector;							# vector		is from   src/lib/std/src/vector.pkg
herein

    # This api is immplemented in:
    #
    #     src/lib/std/src/rw-matrix.pkg
    #
    api Rw_Matrix {
	#
	eqtype Rw_Matrix(X);

	Region(X)
	    =
	    {   base:  Rw_Matrix(X),
		row:  Int,
		col:  Int,
		nrows:  Null_Or( Int ),
		ncols:  Null_Or( Int )
	      };

	make_matrix: ((Int, Int), X) -> Rw_Matrix(X);
	from_list:  List( List(X) ) -> Rw_Matrix(X);
	from_fn:    ((Int, Int), (Int, Int) -> X) -> Rw_Matrix(X);

	get:        (Rw_Matrix(X), (Int, Int)) -> X;
	set:        (Rw_Matrix(X), (Int, Int), X) -> Void;

	dimensions:  Rw_Matrix(X) -> (Int, Int);
	columns:     Rw_Matrix(X) -> Int;
	rows:        Rw_Matrix(X) -> Int;

	row:        (Rw_Matrix(X), Int) -> vec::Vector(X);
	column:     (Rw_Matrix(X), Int) -> vec::Vector(X);

	copy:
	     { src:  Region(X),
	       dst:  Rw_Matrix(X),

	       dst_row:  Int,
	       dst_col:  Int
	     }
	     ->
	     Void;

	keyed_apply:		((Int, Int, X) -> Void) -> Region(X) -> Void;
	apply:			(X -> Void) -> Rw_Matrix(X) -> Void;

	keyed_map_in_place:	((Int, Int, X) -> X) -> Region(X) -> Void;
	map_in_place:		(X -> X) -> Rw_Matrix(X) -> Void;

	foldi:			((Int, Int, X, Y) -> Y) -> Y -> Region(X) -> Y;
	fold:			((X, Y) -> Y) -> Y -> Rw_Matrix(X) -> Y;

    };
end;


## COPYRIGHT (c) 1997 AT&T Research.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
