## codestream-g.pkg
#
# The compiler backend lowhalf components pass code
# via streams of treecode expressions and machcode
# (abstract machine code) instructions.   Here we define the
# abstract API shared by all such streams;  this API gets
# specialized to the various concrete streams.

# Compiled by:
#     src/lib/compiler/back/low/lib/lowhalf.lib



stipulate
    package lbl =  codelabel;							# codelabel		is from   src/lib/compiler/back/low/code/codelabel.pkg
herein

    # This generic is invoked in:
    #
    #     src/lib/compiler/back/low/main/intel32/backend-lowhalf-intel32-g.pkg
    #     src/lib/compiler/back/low/main/pwrpc32/backend-lowhalf-pwrpc32.pkg
    #     src/lib/compiler/back/low/main/sparc32/backend-lowhalf-sparc32.pkg
    #
    generic package   codestream_g   (
	#             ============
	#
	pop:  Pseudo_Ops							# Pseudo_Ops		is from   src/lib/compiler/back/low/mcg/pseudo-op.api
    )
    : (weak)  Codestream							# Codestream		is from   src/lib/compiler/back/low/code/codestream.api
    {
	# Export to client packages:
	#	
	package pop =  pop;							# "pop" == "pseudo_op".

	Codestream (X,Y,Z,W)							# X == instruction
	  =
	  {
	    begin_connected_component:        Int -> Void,					# Start new compilation unit. 
	    end_connected_component:          Y -> W,					# End compilation unit. 

	    emit_op:              X -> Void,					# Emit instruction. 
	    emit_pseudo_op:       pop::Pseudo_Op -> Void,			# Emit a pseudo op. 

	    emit_public_label:  lbl::Codelabel -> Void,			# Define an externally   visible codelabel marking current spot in codestream.
	    emit_private_label:   lbl::Codelabel -> Void,			# Define an externally invisible codelabel marking current spot in codestream.

	    emit_comment:         String -> Void,				# Emit comment. 

	    emit_bblock_note:	  note::Note -> Void,				# Add annotation. 
	    get_notes:            Void -> Ref( note::Notes ),			# Get annotations.

	    emit__end_of_fn__mark:        Z -> Void              			# Mark the end of a procedure. 
	  };

    };
end;