


###              "The illiterate of the 21st century will not
###               be those who cannot read and write, but those
###               who cannot learn, unlearn, and relearn."
###
###                                 -- Alvin Toffler



generic package GCMap (GC:  Per_Codetemp_Heapcleaner_Info_Template) : GC_MAP {

   package c = registerkinds_junk
   package gc = GC
   exception GCMap

   type gcmap = c::hashtable::Hashtable( gc::gctype )

   GCMAP = note::make_notekind (THE (\\ _ => "gcmap")) 
                 : Annotations::property( gcmap )

   fun to_string gcmap =
   let lookup = c::hashtable::lookup gcmap
       fun f r = "{ " + gc::to_string (lookup r) + "}" except _ => "{?}"
   in  f end

   fun pr (r, gc) = "r" + int::to_string (c::cellId r) + ":" + gc::to_string gc
   fun prSet S = "{ " + fold_backward (\\ (x, "") => pr x | (x, y) => pr x + ", " + y) "" S + "}"

   GCLIVEIN  = note::make_notekind (THE (\\ S => "livein: " + prSet S))
   GCLIVEOUT = note::make_notekind (THE (\\ S => "liveout: " + prSet S))

}
