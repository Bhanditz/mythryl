
# This is Reif and Tarjan's algorithm (SIAM J Computing 1981) 
# for computing approximate birthpoints for expressions.   
# For each basic block B,
#   idef (B) = { v | v is defined on some path between B's idom and B }
#
# -- Allen Leung

api LOWHALF_IDEFS =
api

   package dom:  Dominator_Tree
   package mcg:  Machcode_Controlflow_Graph
   package i:    Machcode
   package c:    Cells
      sharing mcg::I = I
      sharing C     = i::C

   my idefs:  
       (i::instruction -> List( c::cell ) * List( c::cell ) ) ->
       mcg::Machcode_Controlflow_Graph ->
       { idefuse:      Void -> 
            rw_vector::Rw_Vector( c::SortedCells::sorted_cells * 
            c::SortedCells::sorted_cells),
         ipostdefuse:  Void -> 
            rw_vector::Rw_Vector( c::SortedCells::sorted_cells * 
            c::SortedCells::sorted_cells)
       }
end

