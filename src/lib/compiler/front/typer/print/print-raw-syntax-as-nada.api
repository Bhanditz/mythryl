## print-raw-syntax-tree-as-nada.api 
## Jing Cao and Lukasz Ziarek 

# Compiled by:
#     src/lib/compiler/front/typer/typer.sublib

stipulate
    package pp  =  standard_prettyprint_mill;					# standard_prettyprint_mill	is from   src/lib/prettyprint/big/src/standard-prettyprint-mill.pkg
    package raw =  raw_syntax;							# raw_syntax			is from   src/lib/compiler/front/parser/raw-syntax/raw-syntax.pkg
    package sci =  sourcecode_info;						# sourcecode_info		is from   src/lib/compiler/front/basics/source/sourcecode-info.pkg
    package syx =  symbolmapstack;						# symbolmapstack		is from   src/lib/compiler/front/typer-stuff/symbolmapstack/symbolmapstack.pkg
herein

    api Print_Raw_Syntax_Tree_As_Lib7 {
	#
	print_expression_as_nada:  (syx::Symbolmapstack,
					Null_Or( sci::Sourcecode_Info ))
				      -> pp::Prettyprint_Mill
				      -> (raw::Raw_Expression,
					 Int)
				      -> Void; 

	print_pattern_as_nada:   (syx::Symbolmapstack,
				      Null_Or( sci::Sourcecode_Info ))
				   -> pp::Prettyprint_Mill
				   -> (raw::Case_Pattern,
				      Int)
				   -> Void;

	print_package_expression_as_nada:   (syx::Symbolmapstack,
						   Null_Or( sci::Sourcecode_Info ))
						-> pp::Prettyprint_Mill
						-> (raw::Package_Expression,
						   Int)
						-> Void;

	print_generic_expression_as_nada:   (syx::Symbolmapstack,
						 Null_Or( sci::Sourcecode_Info ))
					      -> pp::Prettyprint_Mill
					      -> (raw::Generic_Expression,
						 Int)
					      -> Void;

	print_where_spec_as_nada:   (syx::Symbolmapstack,
					 Null_Or( sci::Sourcecode_Info ))
				      -> pp::Prettyprint_Mill
				      -> (raw::Where_Spec,
					 Int)
				      -> Void;

	print_api_expression_as_nada:   (syx::Symbolmapstack,
						   Null_Or( sci::Sourcecode_Info ))
						-> pp::Prettyprint_Mill
						-> (raw::Api_Expression,
						   Int)
						-> Void;

	print_generic_api_expression_as_nada:   (syx::Symbolmapstack,
							   Null_Or( sci::Sourcecode_Info ))
							-> pp::Prettyprint_Mill
							-> (raw::Generic_Api_Expression,
							   Int)
							-> Void;

	print_specification_as_nada:   (syx::Symbolmapstack,
					    Null_Or( sci::Sourcecode_Info ))
					 -> pp::Prettyprint_Mill
					 -> (raw::Api_Element,
					    Int)
					 -> Void; 

	print_declaration_as_nada:   (syx::Symbolmapstack,
					  Null_Or( sci::Sourcecode_Info ))
				       -> pp::Prettyprint_Mill
				       -> (raw::Declaration,
					  Int)
				       -> Void;

	print_named_value_as_nada:    (syx::Symbolmapstack,
					    Null_Or( sci::Sourcecode_Info )) 
					 -> pp::Prettyprint_Mill
					 -> (raw::Named_Value,
					    Int)
					 -> Void;

	print_recursively_named_value_as_nada:    (syx::Symbolmapstack,
						      Null_Or( sci::Sourcecode_Info ))
						   -> pp::Prettyprint_Mill
						   -> (raw::Named_Recursive_Value,
						      Int)
						   -> Void;

	print_sml_named_function_as_nada:    (syx::Symbolmapstack,
						   Null_Or( sci::Sourcecode_Info ))
						-> pp::Prettyprint_Mill
						-> String
						-> (raw::Named_Function,
						   Int)
						-> Void;

	print_lib7_named_function_as_nada:    (syx::Symbolmapstack,
						    Null_Or( sci::Sourcecode_Info ))
						 -> pp::Prettyprint_Mill
						 -> String
						 -> (raw::Nada_Named_Function,
						    Int)
						 -> Void;

	print_pattern_clause_as_nada:   (syx::Symbolmapstack,
						 Null_Or( sci::Sourcecode_Info ))
					      -> pp::Prettyprint_Mill
					      -> (raw::Pattern_Clause,
						 Int)
					      -> Void;

	print_type_naming_as_nada:    (syx::Symbolmapstack,
					   Null_Or( sci::Sourcecode_Info ))
					-> pp::Prettyprint_Mill
					-> (raw::Named_Type,
					   Int)
					-> Void;

	print_sumtype_naming_as_mythryl7:    (syx::Symbolmapstack,
					       Null_Or( sci::Sourcecode_Info ))
					    -> pp::Prettyprint_Mill
					    -> (raw::Sumtype,
					       Int)
					    -> Void;  

	print_sumtype_naming_right_hand_side_as_nada:    (syx::Symbolmapstack,
							       Null_Or( sci::Sourcecode_Info ))
							    -> pp::Prettyprint_Mill
							    -> (raw::Sumtype_Right_Hand_Side,
							       Int)
							    -> Void;

	print_exception_naming_as_nada:    (syx::Symbolmapstack,
						Null_Or( sci::Sourcecode_Info ))
					     -> pp::Prettyprint_Mill
					     -> (raw::Named_Exception,
						Int)
					     -> Void;

	print_named_package_as_nada:    (syx::Symbolmapstack,
						Null_Or( sci::Sourcecode_Info ))
					     -> pp::Prettyprint_Mill
					     -> (raw::Named_Package,
						Int)
					     -> Void;

	print_generic_naming_as_nada:    (syx::Symbolmapstack,
					      Null_Or( sci::Sourcecode_Info ))
					   -> pp::Prettyprint_Mill
					   -> (raw::Named_Generic,
					      Int)
					   -> Void;

	print_typevar_as_nada:   (syx::Symbolmapstack,
					    Null_Or( sci::Sourcecode_Info ))
					 -> pp::Prettyprint_Mill
					 -> (raw::Typevar,
					    Int)
					 -> Void;

	print_typoid_as_nada:   (syx::Symbolmapstack,
				   Null_Or( sci::Sourcecode_Info ))
				-> pp::Prettyprint_Mill
				-> (raw::Any_Type,
				   Int)
				-> Void; 
    };
end;

## Copyright 2003 by University of Chicago 
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2014,
## released per terms of SMLNJ-COPYRIGHT.
