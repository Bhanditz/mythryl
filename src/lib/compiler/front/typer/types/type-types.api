## type-types.api 
#
# Types for core predefined stuff: void, bools, chars, ints, strings, lists, tuples, records,
# plus somewhat more exotic stuff like exceptions, fates, suspensions and spinlocks.
 
# Compiled by:
#     src/lib/compiler/front/typer/typer.sublib

stipulate
    package sta =  stamp;							# stamp		is from   src/lib/compiler/front/typer-stuff/basics/stamp.pkg
    package ty  =  types;							# types		is from   src/lib/compiler/front/typer-stuff/types/types.pkg
    package vh  =  varhome;							# varhome	is from   src/lib/compiler/front/typer-stuff/basics/varhome.pkg
herein

    api Type_Types {
	#
	arrow_stamp:  sta::Stamp;
	arrow_typ:  ty::Typ; 

	--> : (ty::Type, ty::Type) -> ty::Type;

	is_arrow_type:    ty::Type -> Bool;
	domain:           ty::Type -> ty::Type;
	range:            ty::Type -> ty::Type;

	int_typ:        ty::Typ;     int_type:		ty::Type;
	int32_typ:      ty::Typ;     int32_type:		ty::Type;
	int64_typ:      ty::Typ;     int64_type:		ty::Type;
	integer_typ:    ty::Typ;     integer_type:	ty::Type;
	float64_typ:    ty::Typ;     float64_type:	ty::Type;
	unt_typ:        ty::Typ;     unt_type:		ty::Type;
	unt8_typ:       ty::Typ;     unt8_type:		ty::Type;
	unt32_typ:      ty::Typ;     unt32_type:		ty::Type;
	unt64_typ:      ty::Typ;     unt64_type:		ty::Type;
	string_typ:     ty::Typ;     string_type:		ty::Type;
	char_typ:       ty::Typ;     char_type:		ty::Type;
	exception_typ:  ty::Typ;     exception_type:	ty::Type;

	fate_typ:			ty::Typ; 
	control_fate_typ:		ty::Typ; 
	rw_vector_typ:		ty::Typ; 
	vector_typ:			ty::Typ;

	chunk_typ:			ty::Typ;
	c_function_typ:		ty::Typ;
	un8_rw_vector_typ:		ty::Typ;
	float64_rw_vector_typ:	ty::Typ;
	spinlock_typ:		ty::Typ;

	void_typ:			ty::Typ; 
	void_type:			ty::Type;

	record_type:   List( (ty::Label, ty::Type) ) -> ty::Type;
	tuple_type:    List( ty::Type ) -> ty::Type;

        # Get the types of a tuple-type's fields 

	get_fields:  ty::Type -> Null_Or( List( ty::Type ) );

	bool_signature:    vh::Valcon_Signature;

	bool_typ:  ty::Typ; 
	bool_type:    ty::Type;

	false_dcon:   ty::Valcon;
	true_dcon:    ty::Valcon;

	#  Unnecessary; removed by appel
	#
	#  my optionTyp:  ty::Typ 
	#  my NONEDcon:      ty::Valcon
	#  my SOMEDcon:      ty::Valcon


	ref_typ:        ty::Typ; 
	ref_pattern_type:  ty::Type;
	ref_dcon:          ty::Valcon;

	list_typ:       ty::Typ; 
	nil_dcon:          ty::Valcon;
	cons_dcon:         ty::Valcon;

	ulist_typ:      ty::Typ; 
	unil_dcon:         ty::Valcon;
	ucons_dcon:        ty::Valcon;

	frag_typ:       ty::Typ;
	antiquotedcon:     ty::Valcon;
	quotedcon:         ty::Valcon;

	susp_typ:       ty::Typ;       	# "susp" == "suspension"
	susp_pattern_type: ty::Type;        
	dollar_dcon:       ty::Valcon;    

    }; #  Api Type_Types 
end;

## Copyright 1996 by AT&T Bell Laboratories 
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2011,
## released under Gnu Public Licence version 3.
