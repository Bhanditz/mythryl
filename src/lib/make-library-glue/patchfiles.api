## patchfiles.api
#
# Adding content to files in spots
# marked by linepairs like
#
#    # Do not edit this or following lines -- they are autobuilt.
#    ...
#    # Do not edit this or preceding lines -- they are autobuilt.

# Compiled by:
#     src/lib/std/standard.lib

stipulate
    package sm  =  string_map;											# string_map		is from   src/lib/src/string-map.pkg
herein

    # This api is implemented in:
    #
    #     src/lib/make-library-glue/patchfiles.api
    #
    api  Patchfiles
    {
	Patch = { filename:  String,
		  patchname: String,										# patchname will be "functions" for a patch started by:
		  lines:     List(String)									#     # Do not edit this or following lines -- they are autobuilt.  (patchname="functions")
		};

	Patchfiles;												# Collection of 'Patchfile's, indexed by filename.

	load_patchfile:	Patchfiles -> String -> Patchfiles;							# No-op if already loaded.

	get_filenames:		Patchfiles -> List(String);

	write_patchfiles:	Patchfiles -> Void;

	get_patch:		{ patchfiles: Patchfiles, filename: String, patchname: String } -> Patch;	# Get patch by name.

	apply_patch:		Patchfiles ->      Patch   -> Patchfiles;					# 
#	apply_patches:		Patchfiles -> List(Patch)  -> Patchfiles;					# 
#
#	append_to_patch:	Patchfiles -> Patch -> Patchfiles;						# Append  given lines to named patch.
#	prepend_to_patch:	Patchfiles -> Patch -> Patchfiles;						# Prepend given lines to named patch.
#
#	empty_all_patches:	Patchfiles -> Patchfiles;							# Set every patch to contain the empty list.
#
#	map_patches:		Patchfiles -> (Patch -> List(String)) -> Patchfiles;				# Set contents of each patch to some function of that patch.
#
#	patch_apply:		Patchfile	-> (Patch -> Void) -> Void;					# Call user_fn on every patch in file.
    };
end;

