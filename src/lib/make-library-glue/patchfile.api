## patchfile.api
#
# Adding content to files in spots
# marked by linepairs like
#
#    # Do not edit this or following lines -- they are autobuilt.
#    ...
#    # Do not edit this or preceding lines -- they are autobuilt.

# Compiled by:
#     src/lib/std/standard.lib


stipulate
    package sm  =  string_map;											# string_map		is from   src/lib/src/string-map.pkg
herein

    # This api is implemented in:
    #
    #     src/lib/make-library-glue/patchfile.pkg
    #
    api  Patchfile
    {
	Patch = { patchname: String,										# patchname will be "functions" for a patch started by:
		  lines:     List(String)									#     # Do not edit this or following lines -- they are autobuilt.  (patchname="functions")
		};

	Patch'  = { filename:  String,										# Primarily used in patchfiles.pkg.
		    patchname: String,										# patchname will be "functions" for a patch started by:
		    lines:     List(String)									#     # Do not edit this or following lines -- they are autobuilt.  (patchname="functions")
		  };

	Patchfile;

	get_patch_names:	Patchfile -> List(String);

	get_patch:		(Patchfile, String) -> Patch;							# Get patch by name.

	print_patchfile:	Patchfile -> Void;

	read_patchfile:		String -> Patchfile;

	write_patchfile:	Patchfile -> Void;
	write_patchfile':	Patchfile -> List(Patch) -> Void;

	patch_count:		Patchfile -> Int;
	text_count:		Patchfile -> Int;

	get_only_patch:		Patchfile -> List(String);							# Patchfile must contain exactly one patch.
	set_only_patch:		Patchfile -> List(String) -> Patchfile;						# Patchfile must contain exactly one patch.

	apply_patch:		Patchfile ->      Patch  -> Patchfile;						# 
	apply_patches:		Patchfile -> List(Patch) -> Patchfile;						# 

	append_to_patch:	(Patchfile, String, List(String)) -> Patchfile;					# Append  given lines to named patch.
	prepend_to_patch:	(Patchfile, String, List(String)) -> Patchfile;					# Prepend given lines to named patch.

	empty_all_patches:	Patchfile -> Patchfile;								# Set every patch to contain the empty list.

	map:			(Patch' -> List(String)) -> Patchfile -> Patchfile;				# Set contents of each patch to some function of that patch.							
	apply:			(Patch' -> Void)         -> Patchfile -> Void;					# Call user_fn on every patch in file.
	fold:			((Patch', Y) -> Y)  -> Y -> Patchfile -> Y;					# Compute some statistic over all patches.
    };
end;

