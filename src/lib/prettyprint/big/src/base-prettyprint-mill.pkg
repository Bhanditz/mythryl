## base-prettyprint-mill.pkg
#
# Support for prettyprinting plain ascii text --
# a workhorse tool used by about eighty packages.
#
# Compare to:
#     src/lib/prettyprint/simple/simple-prettyprinter.pkg

# Compiled by:
#     src/lib/prettyprint/big/prettyprint-mill.lib



package   base_prettyprint_mill
: (weak)  Base_Prettyprint_Mill								# Base_Prettyprint_Mill	is from   src/lib/prettyprint/big/src/core-prettyprint-mill.api
{
    Prettyprint_Output_Stream
        =
        { consumer:   String -> Void,
	  flush:      Void -> Void,
	  close:      Void -> Void
        };

    package out {
	#
	Prettyprint_Output_Stream = Prettyprint_Output_Stream;
	Texttraits = Void;

	fun same_texttraits _    = TRUE;
	fun push_texttraits _    = ();
	fun pop_texttraits _     = ();
	fun default_texttraits _ = ();

	fun depth _ = NULL;
	fun text_width _ = NULL;

	fun spaces ( { consumer, flush, close }, n)
	    =
	    consumer (number_string::pad_left ' ' n "");

	fun newline  { consumer, flush, close }     =  consumer "\n";
	fun text   ( { consumer, flush, close }, s) =  consumer s;
	fun char   ( { consumer, flush, close }, c) =  consumer (str c);
	fun flush    { consumer, flush, close }     =  flush();
	fun close    { consumer, flush, close }     =  close();
    };

    package pp
        =
        base_prettyprint_mill_g (							# base_prettyprint_mill_g	is from   src/lib/prettyprint/big/src/prettyprint-mill-g.pkg
	    #
            package tt  =  traitless_text;						# traitless_text		is from   src/lib/prettyprint/big/src/traitless-text.pkg
            package out =  out;
        );

    include pp;
};											# package base_prettyprint_mill


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 2003 The SML/NJ Fellowship
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
