## plain-prettyprinter-output-stream.pkg
#
# A simple (no textstyles) prettyprinter output stream.
# This is what we use 99% of the time in practice.
#
# For an overview of prettyprinter output stream functionality see
#
#     src/lib/prettyprint/big/src/out/prettyprinter-output-stream.api
#
# Compare to:
#
#     src/lib/prettyprint/big/src/out/ansi-terminal-prettyprinter-output-stream.pkg
#     src/lib/prettyprint/big/src/out/html-prettyprinter-output-stream.pkg

# Compiled by:
#     src/lib/prettyprint/big/prettyprinting.lib

###                 "Teach us delight in simple things,
###                  and mirth that has no bitter springs."
###
###                                   -- Rudyard Kipling


stipulate
    package fil =  file__premicrothread;										# file__premicrothread		is from   src/lib/std/src/posix/file--premicrothread.pkg
herein

    api Plain_Prettyprinter_Output_Stream {
	#
	include Prettyprinter_Output_Stream;										# Prettyprinter_Output_Stream	is from   src/lib/prettyprint/big/src/out/prettyprinter-output-stream.api

	make_plain_prettyprinter_output_stream
	    :
	    { output_stream:  fil::Output_Stream,
	      width_in_chars:  Int
	    }
	    -> Prettyprinter_Output_Stream;
    };
    

    package  plain_prettyprinter_output_stream
    : (weak) Plain_Prettyprinter_Output_Stream
    {
	Prettyprinter_Output_Stream
	    =
	    PRETTYPRINTER_OUTPUT_STREAM
	      {
		output_stream:  fil::Output_Stream,
		width_in_chars:  Int
	      };

	Textstyle = Void;            # No textstyle support 

	fun same_textstyle    _ = TRUE;
	fun push_textstyle    _ = ();
	fun pop_textstyle     _ = ();
	fun default_textstyle _ = ();

	make_plain_prettyprinter_output_stream
	    =
	    PRETTYPRINTER_OUTPUT_STREAM;

	fun depth _ =   NULL;												# Maximum printing depth (in terms of boxes) 

	fun line_width (PRETTYPRINTER_OUTPUT_STREAM { width_in_chars, ... } )						# The width of the device 
	    =
	    THE width_in_chars;

	fun text_width _ =   NULL;											# The suggested maximum width of text on a line.

	fun space (PRETTYPRINTER_OUTPUT_STREAM { output_stream, ... }, n)						# Append some number of spaces to the output stream.
	    =
	    fil::write (output_stream, number_string::pad_left ' ' n "");

	fun newline (PRETTYPRINTER_OUTPUT_STREAM { output_stream, ... } )						# Append a newline to the output stream.
	    =
	    fil::write_one (output_stream, '\n');


	fun string (PRETTYPRINTER_OUTPUT_STREAM { output_stream, ... }, s) =  fil::write     (output_stream, s);	# Append a string    in the current textstyle to the output stream:
	fun char   (PRETTYPRINTER_OUTPUT_STREAM { output_stream, ... }, c) =  fil::write_one (output_stream, c);	# Append a character in the current textstyle to the output stream:

	fun flush  (PRETTYPRINTER_OUTPUT_STREAM { output_stream, ... }   ) =  fil::flush output_stream;			# 
    };
end;


## COPYRIGHT (c) 1997 Bell Labs, Lucent Technologies.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
