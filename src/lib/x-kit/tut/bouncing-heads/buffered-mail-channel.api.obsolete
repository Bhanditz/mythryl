## buffered-mail-channel.pkg

# Compiled by:
#     src/lib/x-kit/tut/bouncing-heads/bouncing-heads-app.lib


# This is an implementation of unbounded buffered channels.
# Send operations never block, but accept/receive operations may.
# Caveat: since the buffer is unbounded it is possible for the buffer to consume
# excessive amounts of space, if the number of send operations greatly exceeds
# the number of accepts over some time period.

# Does this do anything mailqueues don't do?
# Or was it written before mailqueues were implemented?  -- 2009-12-01 CrT  XXX BUGGO FIXME
# LATER: He hands this as an argument to a Multicast
# functor in 'load' -- I think maybe at that point
# multicast didn't incorporate queues.  Since
# multicast now comes with queues included, this
# file is probably junk.

api Buffered_Mail_Channel {

#    package threadkit:  CONCUR_LIB7

    Buffered_Mail_Channel( X );

    buffer:  Void -> Buffered_Mail_Channel( X );
    buffer_in:  mailslot::Mailslot(X)  -> Buffered_Mail_Channel(X);
    buffer_out:  mailslot::Mailslot(X) -> Buffered_Mail_Channel(X);
    buffer_send:  (Buffered_Mail_Channel(X), X) -> Void;
    buffer_accept:  Buffered_Mail_Channel(X) -> X;
    buffer_receive:  Buffered_Mail_Channel(X) -> mailop::Mailop(X);
};

## COPYRIGHT (c) 1990 by John H. Reppy.  See COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010,
## released under Gnu Public Licence version 3.
