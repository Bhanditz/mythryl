## gui-displaylist.pkg
#
# Our cross-platform drawing anguage for the Mythryl widget set.

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib

stipulate

# XXX SUCKO FIXME For the moment we need 'exp' for the Draw_Op def,
# but the appwindow interface is intended to be renderlib-independent
# (i.e., X-independent).  So if we do wind up using Draw_Op as our
# cross-platform displaylist type, we should move Draw_Op into a
# separate package so that it can be shared without requiring
# xserver.pkg to be mentioned by non-X appwindow implementations.
#                                       -- 2014-04-27 CrT
    package w2x =  widget_to_xserver;										# widget_to_xserver		is from   src/lib/x-kit/xclient/src/window/widget-to-xserver.pkg
    package r8  =  rgb8;											# rgb8				is from   src/lib/x-kit/xclient/src/color/rgb8.pkg
    package xg  =  xgeometry;											# xgeometry			is from   src/lib/std/2d/xgeometry.pkg
herein

    package gui_displaylist {
	#
	Draw_Op
	  = POLY_POINT     List( xg::Point )
	  | POLY_LINE      List( xg::Point )
	  | FILL_POLY      List( xg::Point )
	  | POLY_SEG       List( xg::Line  )
	  | POLY_BOX       List( xg::Box   )
	  | POLY_FILL_BOX  List( xg::Box   )
	  | POLY_ARC       List( xg::Arc   )
	  | POLY_FILL_ARC  List( xg::Arc   )
	  | CLEAR_AREA           xg::Box
	  ;
	  # Draw_Op is intended to be the cross-platform-portable
	  # subset of widget_to_xserver::x::Op									# widget_to_xserver		is from   src/lib/x-kit/xclient/src/window/widget-to-xserver.pkg
	  #
	  # The intent is that gui_to_appwindow should define a
	  # rendering model which is highly compatible with X
	  # (Mythryl's prime target) but able to be supported
	  # with reasonable effort on other platforms.

	Gui_Displaylist
	  =
	  List(Draw_Op);		# Later we'll introduce a hierarchical structure; this is an initial placeholder.
    };
end;