## node-look-imp.api

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib


stipulate
    include package   threadkit;						# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
#   package ap  =  atom_port;							# atom_port			is from   src/lib/x-kit/xclient/src/iccc/atom-port.pkg
#   package au  =  authentication;						# authentication		is from   src/lib/x-kit/xclient/src/stuff/authentication.pkg
#   package cpm =  cs_pixmap;							# cs_pixmap			is from   src/lib/x-kit/xclient/src/window/cs-pixmap.pkg
#   package cpt =  cs_pixmat;							# cs_pixmat			is from   src/lib/x-kit/xclient/src/window/cs-pixmat.pkg
#   package dy  =  display;							# display			is from   src/lib/x-kit/xclient/src/wire/display.pkg
#   package xet =  xevent_types;						# xevent_types			is from   src/lib/x-kit/xclient/src/wire/xevent-types.pkg
#   package w2x =  widget_to_xserver;						# widget_to_xserver		is from   src/lib/x-kit/xclient/src/window/widget-to-xserver.pkg
#   package fil =  file__premicrothread;					# file__premicrothread		is from   src/lib/std/src/posix/file--premicrothread.pkg
#   package fti =  font_index;							# font_index			is from	  src/lib/x-kit/xclient/src/window/font-index.pkg
#   package kp  =  keymap;							# keymap			is from   src/lib/x-kit/xclient/src/window/keymap.pkg
#   package mtx =  rw_matrix;							# rw_matrix			is from   src/lib/std/src/rw-matrix.pkg
#   package r8  =  rgb8;							# rgb8				is from   src/lib/x-kit/xclient/src/color/rgb8.pkg
#   package rgb =  rgb;								# rgb				is from   src/lib/x-kit/xclient/src/color/rgb.pkg
#   package rop =  ro_pixmap;							# ro_pixmap			is from   src/lib/x-kit/xclient/src/window/ro-pixmap.pkg
#   package rw  =  root_window;							# root_window			is from   src/lib/x-kit/widget/lib/root-window.pkg
#   package rwv =  rw_vector;							# rw_vector			is from   src/lib/std/src/rw-vector.pkg
#   package sep =  selection_port;						# selection_port		is from   src/lib/x-kit/xclient/src/window/selection-port.pkg
#   package shp =  shade;							# shade				is from   src/lib/x-kit/widget/lib/shade.pkg
#   package sj  =  socket_junk;							# socket_junk			is from   src/lib/internet/socket-junk.pkg
#   package tr  =  logger;							# logger			is from   src/lib/src/lib/thread-kit/src/lib/logger.pkg
#   package tsr =  thread_scheduler_is_running;					# thread_scheduler_is_running	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler-is-running.pkg
#   package u1  =  one_byte_unt;						# one_byte_unt			is from   src/lib/std/one-byte-unt.pkg
#   package v1u =  vector_of_one_byte_unts;					# vector_of_one_byte_unts	is from   src/lib/std/src/vector-of-one-byte-unts.pkg
#   package v2w =  value_to_wire;						# value_to_wire			is from   src/lib/x-kit/xclient/src/wire/value-to-wire.pkg
#   package wg  =  widget;							# widget			is from   src/lib/x-kit/widget/basic/widget.pkg
#   package wi  =  window;							# window			is from   src/lib/x-kit/xclient/src/window/window.pkg
#   package wme =  window_map_event_sink;					# window_map_event_sink		is from   src/lib/x-kit/xclient/src/window/window-map-event-sink.pkg
#   package wpp =  window_watcher;						# window_watcher		is from   src/lib/x-kit/xclient/src/window/window-watcher.pkg
#   package wy  =  widget_style;						# widget_style			is from   src/lib/x-kit/widget/lib/widget-style.pkg
#   package e2s =  xevent_to_string;						# xevent_to_string		is from   src/lib/x-kit/xclient/src/to-string/xevent-to-string.pkg
#   package xc  =  xclient;							# xclient			is from   src/lib/x-kit/xclient/xclient.pkg
#   package xg  =  xgeometry;							# xgeometry			is from   src/lib/std/2d/xgeometry.pkg
#   package xj  =  xsession_junk;						# xsession_junk			is from   src/lib/x-kit/xclient/src/window/xsession-junk.pkg
#   package xt  =  xtypes;							# xtypes			is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
#   package xtr =  xlogger;							# xlogger			is from   src/lib/x-kit/xclient/src/stuff/xlogger.pkg

    package nl  =    node_look;							#   node_look			is from   src/lib/x-kit/widget/theme/canvas/look/node-look.pkg
    package nsi =  node_state_imp;						# node_state_imp		is from   src/lib/x-kit/widget/space/canvas/node/node-state-imp.pkg
    package cwe =  canvas_widget_egg;						# canvas_widget_egg		is from   src/lib/x-kit/widget/space/canvas/canvas-widget-egg.pkg
    package pp  =  standard_prettyprint_mill;					# standard_prettyprint_mill	is from   src/lib/prettyprint/big/src/standard-prettyprint-mill.pkg
#   package nl  =  node_look;							# node_look			is from   src/lib/x-kit/widget/theme/canvas/look/node-look.pkg
    package ns  =  node_state;							# node_state			is from   src/lib/x-kit/widget/space/canvas/node/node-state.pkg
    #
    package c2l =  canvas_to_look;						# canvas_to_look		is from   src/lib/x-kit/widget/space/canvas/canvas-to-look.pkg
    package l2c =  look_to_canvas;						# look_to_canvas		is from   src/lib/x-kit/widget/space/canvas/look-to-canvas.pkg
    #
    tracefile   =  "widget-unit-test.trace.log";
herein

    # This api is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/theme/canvas/default/look/default-node-look-imp-for-x.pkg
    #
    api Node_Look_Imp {
	#
        make_node_egg:    ( ns::Node_Arg,					# Initialization data for our underlying node-state imp.
			    nl::Node_Look_Arg,					# Initialization data for us.
			    l2c::Look_To_Canvas,
			    Null_Or(Oneshot_Maildrop(ns::Node_Arg)),		# guiboss uses this to capture final state of state-imp when endgun fires.
			    Null_Or(Oneshot_Maildrop(nl::Node_Look_Arg))	# guiboss uses this to capture final state of  look-imp when endgun fires.
			  )
			  ->
			  cwe::Canvas_Widget_Egg;								# 

	pprint_node_look_arg:	pp::Prettyprint_Mill -> nl::Node_Look_Arg -> Void;
    };

end;
