## canvas-theme.pkg
#

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include threadkit;										# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package csi =  canvas_space_imp;								# canvas_space_imp		is from   src/lib/x-kit/widget/space/canvas/canvas-space-imp.pkg
    package nsi =    node_state_imp;								#   node_state_imp		is from   src/lib/x-kit/widget/space/canvas/node/node-state-imp.pkg
    package nli =     node_look_imp;								#    node_look_imp		is from   src/lib/x-kit/widget/theme/canvas/node/node-look-imp.pkg
    package cwe = canvas_widget_egg;								# canvas_widget_egg		is from   src/lib/x-kit/widget/space/canvas/canvas-widget-egg.pkg
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/theme/canvas/default/default-canvas-theme-for-x.pkg
    #
    package canvas_theme {
	#
	Canvas_Theme
	  =
	  { pass_something:			Replyqueue -> (Int -> Void) -> Void,
	    exercise_appwindow:			Void -> (Void -> Int),					# Executing returned thunk will wait for completion of window exercise.
	    do_something:			Int -> Void,
	    #
	    #
	    canvas_space:			csi::Canvas_Space_Arg -> csi::Canvas_Space_Egg,
	    #
	    #										   
	    node:				(nsi::Node_Arg,    nli::Node_Look_Arg)
						->
						( Null_Or(Oneshot_Maildrop(nsi::Node_Arg      )),	# These pass final widget state back to
						  Null_Or(Oneshot_Maildrop(nli::Node_Look_Arg ))	# gui_boss when the end_gun fires.
						)
						->
						cwe::Canvas_Widget_Egg,
	    #
	    pass_appwindow_exercise_results:	Replyqueue -> (Int -> Void) -> Void			# PUBLIC.
	  };
    };													# package canvas_theme;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
