## ball-look.pkg
#
# THIS PACKAGE PROBABLY NEEDS TO DIE
# I wound up eliminating packed-look.pkg because it
# turned out the interface needs to be specialized
# on a per-type basis -- see replacement code in
#     src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-g.pkg
#  -- 2014-07-02 CrT

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include package   threadkit;								# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package b2l =  bounce_to_look;								# bounce_to_look		is from   src/lib/x-kit/widget/space/bounce/bounce-to-look.pkg
    package l2g =    look_to_gui;								# look_to_gui			is from   src/lib/x-kit/widget/gui/look-to-gui.pkg
    package l2p =  look_to_packed;								# look_to_packed		is from   src/lib/x-kit/widget/space/packed/look-to-packed.pkg
    package iul =  issue_unique_look_id;							# issue_unique_look_id		is from   src/lib/x-kit/widget/gui/issue-unique-look-id.pkg
herein

# THIS FILE IS PROBABLY UNUSED AND RIPE FOR DELETION  -- 2014-07-04 CrT

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/theme/bounce/default/look/ball-look-imp.pkg
    #
    package ball_look {
	#
	Ball_Look
	  =
	  { id:			iul::Id,								# Unique id to facilitate storing ball_look instances in indexed datastructures like red-black trees.
	    pass_something:	Replyqueue -> (Int -> Void) -> Void,
	    do_something:	Int -> Void
	  };

# The Button_Press_Fn + Key_Press_Fn defs are duplicated in
#     src/lib/x-kit/widget/theme/bounce/look/ball-look.pkg
#     src/lib/x-kit/widget/theme/canvas/look/node-look.pkg
#     src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-g.pkg
# -- probably they should be defined in one central place somewhere. Not clear where. Maybe their own package?
	Button_Press_Fn
	  =
	  { value:				ss::Value,
	    button:				evt::Mousebutton,
	    point:				xg::Point,
	    site:				xg::Box,						# Widget's assigned area in window coordinates.
	    modifier_keys_state:	        evt::Modifier_Keys_State,				# State of the modifier keys (shift, ctrl...).
	    mousebuttons_state:		        evt::Mousebuttons_State,				# State of mouse buttons.
	    client_to_state:			ss::Client_To_State,
	    look_to_gui:			l2g::Look_To_Gui,
	    look_to_packed:			l2p::Look_To_Packed
	  }
	  ->
	  Void;

	Key_Press_Fn
	  =
	  { value:				ss::Value,
	    keycode:				evt::Keycode,
	    point:				xg::Point,
	    site:				xg::Box,						# Widget's assigned area in window coordinates.
	    modifier_keys_state:	        evt::Modifier_Keys_State,				# State of the modifier keys (shift, ctrl...).
	    mousebuttons_state:		        evt::Mousebuttons_State,				# State of mouse buttons.
	    client_to_state:			ss::Client_To_State,
	    look_to_gui:			l2g::Look_To_Gui,
	    look_to_packed:			l2p::Look_To_Packed
	  }
	  ->
	  Void;

	Ball_Look_Option
	    #
	    = MICROTHREAD_NAME		String							# 
	    | ID			iul::Id							# Unique ID for imp, issued by issue_unique_id::issue_unique_id().
	    #
	    | WIDGET_CONTROL_CALLBACK	b2l::Bounce_To_Look -> Void				# Gui boss registers this callback to get a port to us once we start up.
	    | BALL_LOOK_CALLBACK	(         Ball_Look -> Void	)			# App      registers this maildrop to get a port to us once we start up.
	    #
	    | BUTTON_PRESS_FN		Button_Press_Fn
	    | BUTTON_RELEASE_FN		Button_Press_Fn
	    #
	    | KEY_PRESS_FN		Key_Press_Fn
	    | KEY_RELEASE_FN		Key_Press_Fn
	    ;

	Ball_Look_Arg    = List(Ball_Look_Option);						# Currently no required components.
    };												# package ball_look;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
