## gui-to-packed-theme.pkg
#
# For the big picture see the imp dataflow diagrams in
#
#     src/lib/x-kit/xclient/src/window/xclient-ximps.pkg
#

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include package   threadkit;								# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package c2f  =  client_to_float_state;							# client_to_float_state		is from   src/lib/x-kit/widget/space/packed/client-to-float-state.pkg
    package c2i  =  client_to_int_state;							# client_to_int_state		is from   src/lib/x-kit/widget/space/packed/client-to-int-state.pkg
    package c2m  =  client_to_image_state;							# client_to_image_state		is from   src/lib/x-kit/widget/space/packed/client-to-image-state.pkg
    package c2s  =  client_to_string_state;							# client_to_string_state	is from   src/lib/x-kit/widget/space/packed/client-to-string-state.pkg
    package c2t  =  client_to_bool_state;							# client_to_bool_state		is from   src/lib/x-kit/widget/space/packed/client-to-bool-state.pkg
    package c2x  =  client_to_exception_state;							# client_to_exception_state	is from   src/lib/x-kit/widget/space/packed/client-to-exception-state.pkg
    #
#   package pl  =  packed_look;									# packed_look			is from   src/lib/x-kit/widget/theme/packed/look/packed-look.pkg
    #
    package l2p =  look_to_packed;								# look_to_packed		is from   src/lib/x-kit/widget/space/packed/look-to-packed.pkg
    #
    package ps  =  guiboss_to_packed_space;							# guiboss_to_packed_space	is from   src/lib/x-kit/widget/space/packed/guiboss-to-packed-space.pkg
    package psi =  packed_space_imp;								# packed_space_imp		is from   src/lib/x-kit/widget/space/packed/packed-space-imp.pkg
    package pwe =  packed_widget_egg;								# packed_widget_egg		is from   src/lib/x-kit/widget/space/packed/packed-widget-egg.pkg
    #
    package gp  =  gui_plan;									# gui_plan			is from   src/lib/x-kit/widget/gui/gui-plan.pkg
    package sg  =  stopped_gui;									# stopped_gui			is from   src/lib/x-kit/widget/gui/stopped-gui.pkg
    #
    package xg  =  xgeometry;									# xgeometry			is from   src/lib/std/2d/xgeometry.pkg

# This is an experiment:
    package fli =   float_look_imp_for_x;			#  float_look_imp_for_x			is from   src/lib/x-kit/widget/xkit/theme/packed/default/look/float-look-imp-for-x.pkg
    package ili =   int_look_imp_for_x;				#  int_look_imp_for_x			is from   src/lib/x-kit/widget/xkit/theme/packed/default/look/int-look-imp-for-x.pkg
    package mli =  image_look_imp_for_x;			# image_look_imp_for_x			is from   src/lib/x-kit/widget/xkit/theme/packed/default/look/image-look-imp-for-x.pkg
    package sli =  string_look_imp_for_x;			# string_look_imp_for_x			is from   src/lib/x-kit/widget/xkit/theme/packed/default/look/string-look-imp-for-x.pkg
    package xli =  exception_look_imp_for_x;			# exception_look_imp_for_x		is from   src/lib/x-kit/widget/xkit/theme/packed/default/look/exception-look-imp-for-x.pkg
    package tli =  bool_look_imp_for_x;				# bool_look_imp_for_x		is from   src/lib/x-kit/widget/xkit/theme/packed/default/look/bool-look-imp-for-x.pkg
Dummy1 = tli::Packed_Look_Arg;

    Once(X) = Oneshot_Maildrop(X);
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/theme/packed/default/default-packed-theme-imp-for-x.pkg
    #
    package gui_to_packed_theme {
	#
	Gui_To_Packed_Theme
	  =
	  { do_something:			Int -> Void,


	    #######################################
	    # Space and widget factory calls:

	    packed_space:			ps::Packed_Space_Arg -> psi::Packed_Space_Egg,


	    # These calls allow the packed theme to customize interpretation of Stopped_Gui
	    # widget descriptions during guiboss-imp translation of Stopped_Gui to Running_Gui:             These pass widget endstate back to guiboss when the end_gun fires.
	    #                                                                                                ===================================================================
	    make_float_widget_state_imp_egg:	(c2f::Make_Arg, fli::Packed_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Once(c2f::Make_Arg)), Null_Or(Once(fli::Packed_Look_Arg ))) -> pwe::Packed_Widget_Egg,
	    make_string_widget_state_imp_egg:	(c2s::Make_Arg, sli::Packed_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Once(c2s::Make_Arg)), Null_Or(Once(sli::Packed_Look_Arg ))) -> pwe::Packed_Widget_Egg,
	    make_other_widget_state_imp_egg:	(c2x::Make_Arg, xli::Packed_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Once(c2x::Make_Arg)), Null_Or(Once(xli::Packed_Look_Arg ))) -> pwe::Packed_Widget_Egg,
	    make_image_widget_state_imp_egg:	(c2m::Make_Arg, mli::Packed_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Once(c2m::Make_Arg)), Null_Or(Once(mli::Packed_Look_Arg ))) -> pwe::Packed_Widget_Egg,
	    make_int_widget_state_imp_egg:	(c2i::Make_Arg, ili::Packed_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Once(c2i::Make_Arg)), Null_Or(Once(ili::Packed_Look_Arg ))) -> pwe::Packed_Widget_Egg,
	    make_bool_widget_state_imp_egg:	(c2t::Make_Arg, tli::Packed_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Once(c2t::Make_Arg)), Null_Or(Once(tli::Packed_Look_Arg ))) -> pwe::Packed_Widget_Egg,


	    # These calls allow the packed theme to customize interpretation of Gui_Plan
	    # widget descriptions during guiboss-imp translation of Gui_Plan to Stopped_Gui:
	    #
	    make_checkbox_widget:		gp::checkbox::Checkbox_Arg	     -> sg::Packed_Widget,
	    make_image_widget:			gp::image::Image_Arg		     -> sg::Packed_Widget,
	    make_label_widget:			gp::label::Label_Arg		     -> sg::Packed_Widget,
	    make_select_widget:			gp::select::Select_Arg		     -> sg::Packed_Widget,
	    make_other_widget:			gp::other::Other_Arg		     -> sg::Packed_Widget,
	    #
	    make_knob_widget:			gp::knob::Knob_Arg		     -> sg::Packed_Widget,
	    make_xslider_widget:		gp::xslider::Xslider_Arg	     -> sg::Packed_Widget,
	    make_yslider_widget:		gp::yslider::Yslider_Arg	     -> sg::Packed_Widget



	    #######################################
	    # Misc:
	  };
    };												# package gui_to_packed_theme;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
