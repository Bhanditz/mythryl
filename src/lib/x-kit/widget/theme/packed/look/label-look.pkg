## label-look.pkg
#

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include threadkit;										# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package l2p =  look_to_packed;								# look_to_packed		is from   src/lib/x-kit/widget/space/packed/look-to-packed.pkg
    package p2l =  packed_to_look;								# packed_to_look		is from   src/lib/x-kit/widget/space/packed/packed-to-look.pkg
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/theme/packed/default/look/string-look-imp-for-x.pkg
    #
    package label_look {
	#
	Label_Look
	  =
	  { id:			Id,								# Unique id to facilitate storing node_state instances in indexed datastructures like red-black trees.
	    pass_something:	Replyqueue -> (Int -> Void) -> Void,
	    do_something:	Int -> Void
	  };

	Label_Look_Option
	    #
	    = MICROTHREAD_NAME			String						# 
	    | ID				Id						# Unique ID for imp, issued by issue_unique_id::issue_unique_id().
	    | WIDGET_CONTROL_CALLBACK		( p2l::Packed_To_Look -> Void	)		# Gui boss registers this maildrop to get a port to us once we start up.
	    | LABEL_LOOK_CALLBACK		(                 Label_Look -> Void	)	# App      registers this maildrop to get a port to us once we start up.
	    ;

	Label_Look_Arg	  =  List(Label_Look_Option);						# No required components at present.
    };												# package label_look;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
