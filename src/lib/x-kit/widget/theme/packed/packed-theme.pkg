## packed-theme.pkg
#

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include threadkit;										# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package ls  =   string_state;								#  string_state			is from   src/lib/x-kit/widget/space/packed/string-state.pkg
    package ss  =  slider_state;								# slider_state			is from   src/lib/x-kit/widget/space/packed/slider-state.pkg
    #
    package lsi =  string_state_imp;								# string_state_imp		is from   src/lib/x-kit/widget/space/packed/string-state-imp.pkg
    package ssi =  slider_state_imp;								# slider_state_imp		is from   src/lib/x-kit/widget/space/packed/slider-state-imp.api
    #
    package kl  =  knob_look;									# knob_look			is from   src/lib/x-kit/widget/theme/packed/look/knob-look.pkg
    package ll  =  label_look;									# label_look			is from   src/lib/x-kit/widget/theme/packed/look/label-look.pkg
    package xl  = xslider_look;									# xslider_look			is from   src/lib/x-kit/widget/theme/packed/look/xslider-look.pkg
    package yl  = yslider_look;									# yslider_look			is from   src/lib/x-kit/widget/theme/packed/look/yslider-look.pkg

    #
    package l2p =  look_to_packed;								# look_to_packed		is from   src/lib/x-kit/widget/space/packed/look-to-packed.pkg
    #
    package ps  =  packed_space;								# packed_space			is from   src/lib/x-kit/widget/space/packed/packed-space.pkg
    package psi =  packed_space_imp;								# packed_space_imp		is from   src/lib/x-kit/widget/space/packed/packed-space-imp.pkg
    package pwe =  packed_widget_egg;								# packed_widget_egg		is from   src/lib/x-kit/widget/space/packed/packed-widget-egg.pkg
    #
    package xg  =  xgeometry;									# xgeometry			is from   src/lib/std/2d/xgeometry.pkg
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/theme/packed/default/default-packed-theme-imp-for-x.pkg
    #
    package packed_theme {
	#
	Packed_Theme
	  =
	  { do_something:			Int -> Void,
	    pass_window_site:			Replyqueue -> (xg::Window_Site -> Void) -> Void,
	    #
	    #
	    #
	    # Space and widget factory calls:
	    #
	    packed_space:			ps::Packed_Space_Arg -> psi::Packed_Space_Egg,
	    #
	    # 										               These pass final widget state back to gui_boss when the end_gun fires.
	    #                                                                               ==============================================================================================
	    label:	(ls::Label_Arg,    ll::Label_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Oneshot_Maildrop(ls::Label_Arg )), Null_Or(Oneshot_Maildrop(ll::Label_Look_Arg  ))) -> pwe::Packed_Widget_Egg,
	    knob:	(ss::Slider_Arg,    kl::Knob_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Oneshot_Maildrop(ss::Slider_Arg)), Null_Or(Oneshot_Maildrop(kl::Knob_Look_Arg   ))) -> pwe::Packed_Widget_Egg,
	    xslider:	(ss::Slider_Arg, xl::Xslider_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Oneshot_Maildrop(ss::Slider_Arg)), Null_Or(Oneshot_Maildrop(xl::Xslider_Look_Arg))) -> pwe::Packed_Widget_Egg,
	    yslider:	(ss::Slider_Arg, yl::Yslider_Look_Arg, l2p::Look_To_Packed) -> (Null_Or(Oneshot_Maildrop(ss::Slider_Arg)), Null_Or(Oneshot_Maildrop(yl::Yslider_Look_Arg))) -> pwe::Packed_Widget_Egg,
	    #
	    exercise_appwindow:			Void -> (Void -> Int),				# Executing returned thunk will wait for completion of window exercise.
	    pass_appwindow_exercise_results:	Replyqueue -> (Int -> Void) -> Void		# 
	  };
    };												# package packed_theme;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
