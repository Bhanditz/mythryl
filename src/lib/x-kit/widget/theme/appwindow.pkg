## appwindow.pkg
#

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include threadkit;												# threadkit	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package r8  =  rgb8;											# rgb8				is from   src/lib/x-kit/xclient/src/color/rgb8.pkg
    package xg  =  xgeometry;											# xgeometry			is from   src/lib/std/2d/xgeometry.pkg
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/app/appwindow-for-x.pkg
    #
    package appwindow {
	#
	Appwindow
	  =
	  { id:					Int,								# Unique id to facilitate storing appwindow instances in indexed datastructures like red-black trees.
	    #
	    pass_something:			Replyqueue -> (Int -> Void) -> Void,				# These two are useless examples which should be deleted in due course.
	    do_something:			Int -> Void,
	    #
	    subscribe_to_changes:		( {								# This record is appwindow-for-x.pkg: Appwindow_Needs, but that name would produce a package cycle.
						    site:		xg::Window_Site,			# size-in-pixels + position of app window.
						    background_pixel:	r8::Rgb8				# Background color for appwindow.
					          }
						  -> Void
						)
						-> Void,
	    #
	    exercise_appwindow:			Void -> (Void -> Void),						# Executing returned thunk will wait for completion of window exercise.
	    pass_appwindow_exercise_results:	Replyqueue -> (Int -> Void) -> Void				# PUBLIC.
	  };

	Widget_Site												# This tells a widget where to draw itself.
	  =
	  { row:	Int,
	    col:	Int,
	    rows:	Int,
	    cols:	Int
	  };
    };														# package appwindow;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
