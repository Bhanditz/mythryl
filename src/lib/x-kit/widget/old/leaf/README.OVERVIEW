
    "The current widget set is not very rich or well-developed,
     not particularly pleasing to the eye.  There are a variety
     of notable omissions.  Some of the implementations are not
     graphically efficient. [...]"

       -- p22 Gansner + Reppy's 1993 eXene widget manual,
          http:://mythryl.org/pub/exene/1993-widgets.ps

Leaf widgets have no subwidgets;  They form the base
set from which more complex widgets can be composed.

Leaf widgets may be modified in two ways:

 o  Parameters may be set at creation or dynamically.

 o  A wrapping widget may modulate the widget's
    preferred_size function or its mouse-, keyboard-
    or control-event mail.

Button appearance and behavior are implemented
separately and then combined to produce a complete
button flavor.

Two button behaviors are implemented:

    pushbutton-behavior-g.pkg
    toggleswitch-behavior-g.pkg

A pushbutton is a momentary-contact switch: Click
it and something happens.

A toggleswitch has separate ON and OFF states which
persist indefinitely.  They may be combined in
groups or radiobutton groups via

    src/lib/x-kit/widget/lib/button-group.pkg


Pushbuttons and toggleswitches are both available
in two flavors, callback and standard:

 o Callback buttons just call the supplied callback
   function when pressed.  (A button is pressed by
   moving the mouse over the button and pressing
   any mouse button.)

 o Standard buttons generate event mails on each
   button transition identifying both the transition
   and the state of all mouse buttons.

   When a mouse button is pressed the button widget
   generates a BUTTON_DOWN eventmail, and continues
   to generate them regularly until the button is
   released (at which point it generates a BUTTON_UP
   eventmail) or until it leaves the widget window,
   at which point it generates a BUTTON_EXIT eventmail.

    [ 'BUTTON_EXIT' does not exist; it must have
      become BUTTON_IS_UNDER_MOUSE or BUTTON_IS_NOT_UNDER_MOUSE.  See:
          src/lib/x-kit/widget/old/leaf/pushbuttons.api
    ]


Button appearances are defined by:

    arrowbutton-look.pkg
    boxbutton-look.pkg
    checkbutton-look.pkg
    diamondbutton-look.pkg
    labelbutton-look.pkg
    rockerbutton-look.pkg
    roundbutton-look.pkg
    textbutton-look.pkg

Some of these are generated from underlying
shapes via button_look_from_drawfn_and_sizefn_g:

    arrowbutton-drawfn-and-sizefn.pkg
    boxbutton-drawfn-and-sizefn.pkg
    diamondbutton-drawfn-and-sizefn.pkg
    roundbutton-drawfn-and-sizefn.pkg

Two main collections of buttons are exported:

    pushbuttons.api
    pushbuttons.pkg
	"momentary-contact":  trigger some action when clicked.

    toggleswitches.api
    toggleswitches.pkg
	"double-throw": Have a persistent ON/OFF state.


