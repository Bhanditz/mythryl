## ro-pixmap-cache-old.api
#
# Support for icons, button images
# and so forth:   Track what read-only
# pixmaps we have on the X server and
# transparently load new ones as needed.
#

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib

stipulate
    package qk  =  quark;				# quark				is from   src/lib/x-kit/style/quark.pkg
    package xc  =  xclient;				# xclient			is from   src/lib/x-kit/xclient/xclient.pkg
#    package cpm =  cs_pixmap;				# cs_pixmap			is from   src/lib/x-kit/xclient/src/window/cs-pixmap.pkg
#    package rpm =  ro_pixmap;				# ro_pixmap			is from   src/lib/x-kit/xclient/src/window/ro-pixmap.pkg
herein

    # This api is implemented in:
    #
    #     src/lib/x-kit/widget/lib/ro-pixmap-cache-old.pkg

    api Ro_Pixmap_Cache_Old {

	Ro_Pixmap_Cache;

	exception BAD_NAME;

	make_readonly_pixmap_cache
	    :
	    ( xc::Screen,
	      (qk::Quark -> xc::Cs_Pixmap_Old)
	    )
	    ->
	    Ro_Pixmap_Cache;
							    # bitmap_io_old		is from   src/lib/x-kit/draw/bitmap-io-old.pkg
	# Return X server ro_pixmap,
	# creating it if necessary.
	#
	# Second argument is a name string giving
	# the source for the required pixel data.
	#
	# If the name starts with an '@' the
	# remainder is interpreted as a filename
	# to be loaded via
	#
	#     bitmap_io::read_bitmap
	#
	# If the name does not start with a '@'
	# it is interpreted as naming a clientside
	# window to be located using the lookup
	# function given to our originating
	#
	#     make_readonly_pixmap_cache
	#
	# We raise BAD_NAME if unable to convert
	# the given name into a ro_pixmap:	
	#
	get_ro_pixmap
	    :
	    Ro_Pixmap_Cache
	    ->
	    String
	    ->
	    xc::Ro_Pixmap;
    };

end;