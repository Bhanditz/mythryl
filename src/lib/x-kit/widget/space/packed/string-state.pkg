## string-state.pkg
#

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib



stipulate
    include threadkit;										# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/space/packed/string-state-imp.pkg
    #
    package string_state {
	#
	Value = String;

	Is_Bad_Value =  Value -> Null_Or( (Void -> String, Null_Or (Void -> Value) ));		# Given a Value, return NULL if it is valid, else a thunk returning a diagnostic
												# string explaining why it is not, plus optionally thunk computing 'nearby' valid value.
												# usable in place of the invalid value.
	Client_To_State
	  =
	  { id:					Id,						# Unique id to facilitate storing node_state instances in indexed datastructures like red-black trees.
	    #
	    set_value:			                  Value    -> Void,
	    pass_state:		 Replyqueue ->  ({ value: Value }  -> Void)  ->  Void,
	    subscribe_to_changes:	        ({ value: Value }  -> Void)  ->  Void
	  };


	Needs
	    =
	    { value:	Value
	    };

	Option
	  #
	  = MICROTHREAD_NAME	 	String							# 
	  | ID				Id							# Unique ID for imp, issued by issue_unique_id::issue_unique_id().
	  | IS_BAD_VALUE		Is_Bad_Value
	  | CHANGE_CALLBACK		Needs -> Void						# We'll call each of these callbacks each time our value changes.
	  | CLIENT_TO_STATE_CALLBACK	( Client_To_State -> Void )				# Client code registers this callback to get a port to us once we start up.
	  ;

	Make_Arg = (Needs, List(Option));

    };												# package string_state;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
