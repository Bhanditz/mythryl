## gui-to-look.pkg
#
# For the big picture see the imp dataflow diagrams in
#
#     src/lib/x-kit/xclient/src/window/xclient-ximps.pkg
#
# This port manages
#     src/lib/x-kit/widget/gui/guiboss-imp.pkg
# requests to to widget look-imps.
#
# See also:
#     src/lib/x-kit/widget/gui/look-to-gui.pkg

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include package   threadkit;								# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package xg  =  xgeometry;									# xgeometry			is from   src/lib/std/2d/xgeometry.pkg
    package evt =  gui_event_types;								# gui_event_types		is from   src/lib/x-kit/widget/gui/gui-event-types.pkg

    package iul =  issue_unique_look_id;							# issue_unique_look_id		is from   src/lib/x-kit/widget/gui/issue-unique-look-id.pkg
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/xkit/theme/bounce/default/look/default-ball-look-imp-for-x.pkg
    #     src/lib/x-kit/widget/xkit/theme/canvas/default/look/default-node-look-imp-for-x.pkg
    #     src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg
    #
    #     src/lib/x-kit/widget/xkit/theme/packed/default/look/string-look-imp-for-x.pkg
    #     src/lib/x-kit/widget/xkit/theme/packed/default/look/float-look-imp-for-x.pkg
    #
    package gui_to_look {
	#

	Gui_To_Look
	  =
	  { id:			iul::Id,							# Unique id to facilitate storing Gui_To_Look ports in indexed datastructures like red-black trees.
	    #
	    start_of_frame:	{								# At the start of every frame every look-imp gets this call from   src/lib/x-kit/widget/gui/guiboss-imp.pkg
				  #								# If its appearance has changed it should call note_changed_widget_foreground() from   src/lib/x-kit/widget/gui/look-to-gui.pkg
				  frame_number:		Int,					# 1,2,3,... Purely for convenience of look-imp, guiboss-imp makes no use of this.
				  site:			xg::Box,				# Window rectangle in which to draw.
				  visible:		Bool,					# If FALSE, widget is not visible on screen, so look-imp may be able to avoid updating foreground displaylist.
				  duration_in_seconds:	Float					# If state has changed look-imp should call note_changed_widget_foreground() before this time is up. Also useful for motionblur.
				}
				->
				Void,


	    note_keyboard_key_press_event:   (evt::Keycode, xg::Point)  -> Void,		# Note  keyboard keypress at 'point'.
					#	^						# 'point'  ise the click point the window's coordinate system.
					#	|						#
					#	Keyboard key just pressed down.														#

	    note_keyboard_key_release_event: (evt::Keycode,  xg::Point) -> Void,		# Note keyboard key release at 'point'.
					#	^						#'point' is the click point in the window's coordinate system.
					#	|						# 
					#	Keyboard key just released.														#

	    note_mousebutton_press_event:    (evt::Mousebutton, xg::Point)  -> Void,		# Note mousebutton click at 'point'.
					#	^						# 'point' is the click point in the window's coordinate system.
					#	|						# 
					#	Mouse button just clicked down.														#

	    note_mousebutton_release_event:  (evt::Mousebutton, xg::Point)  -> Void,		# Note mousebutton release at 'point'.
					#	^						# 'point' is the button-release point in the window's coordinate system.
					#	|						# 
					#	Mouse button just released.														#

	    note_mouse_motion_event:	     (List(evt::Mousebutton), xg::Point)  -> Void	# Note a mouse "drag" operations.
					#	^						# 'point' is the mouse-pointer location in the window's coordinate system.
					#	|						# 
					#	Mouse button(s) being dragged.			#

	  };
    };												# package guiboss;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
