## gui-to-look.pkg
#
# This port manages
#     src/lib/x-kit/widget/gui/gui-boss-imp.pkg
# requests to to widget look-imps.

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include threadkit;										# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package exp =  xserver;									# xserver			is from   src/lib/x-kit/xclient/src/window/xserver.pkg
    package xg  =  xgeometry;									# xgeometry			is from   src/lib/std/2d/xgeometry.pkg
herein

    # This port is implemented in:
    #
    package gui_to_look {
	#
	Gui_To_Look
	  =
	  { id:			Id,								# Unique id to facilitate storing look-imp instances in indexed datastructures like red-black trees.
	    #
	    start_of_frame:	{								# At the start of every frame look-imp gets this call from   src/lib/x-kit/widget/gui/gui-boss-imp.pkg
				  frame_number:		Int,					# 1,2,3,... Purely for convenience of look-imp, gui-boss-imp makes no use of this.
				  site:			xg::Box,				# Window rectangle in which to draw.
				  visible:		Bool,					# If FALSE, widget is not visible on screen, so look-imp may be able to avoid updating foreground displaylist.
				  duration_in_seconds:	Float					# If state has changed look-imp should call note_changed_widget_foreground() before this time is up. Also useful for motionblur.
				}
				->
				Void
	  };
    };												# package gui_boss;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
