## space-to-gui.pkg
#
# For the big picture see the imp dataflow diagrams in
#
#     src/lib/x-kit/xclient/src/window/xclient-ximps.pkg
#
# This defines the interface which
#
#     src/lib/x-kit/widget/gui/guiboss-imp.pkg
#
# exports for use by
#
#     src/lib/x-kit/widget/space/bounce/bouncespace-imp.pkg
#     src/lib/x-kit/widget/space/canvas/canvasspace-imp.pkg
#     src/lib/x-kit/widget/space/packed/packedspace-imp.pkg

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include package   threadkit;								# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package g2d =  geometry2d;									# geometry2d			is from   src/lib/std/2d/geometry2d.pkg
    package iul =  issue_unique_look_id;							# issue_unique_look_id		is from   src/lib/x-kit/widget/gui/issue-unique-look-id.pkg
    package g2p =  gadget_to_pixmap;								# gadget_to_pixmap		is from   src/lib/x-kit/widget/theme/gadget-to-pixmap.pkg
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/gui/guiboss-imp.pkg
    #
    package space_to_gui {
	#
	Backing_Pixmap
	  #	
	  = TOPWINDOW_PIXMAP  { pixmap:		g2p::Gadget_To_Rw_Pixmap			# 
			      }
	  #	
	  | VIEWPORT_PIXMAP   { pixmap:		g2p::Gadget_To_Rw_Pixmap,			# The pixmap visible in the viewport.
				#
				viewports:	Ref( List					# We make this a Ref(List(...)) to allow for adding additional viewports opening onto the same underlying pixmap.
												# WARNING: We don't currently use multiple viewports onto one pixmap; if we start doing so we'll probably find that *VIEWPORT_PIXMAP.is_visible doesn't work right with them.
						      {						# This is type Viewport but record types cannot be recursive...
							parent_pixmap:	Backing_Pixmap,
							viewport_site:	Ref(g2d::Box),		# Size and location of subwindow viewport in parent Backing_Pixmap coordinates.
							#
							subview_origin:	Ref(g2d::Point)		# Location of subview relative to viewport. Used to scroll subwindow contents around in parent viewport.
						      }						# So  if origin is (0,0), pixel (0,0) on subview draws at upper-left of viewport,
												# and if origin is (5,5), pixel (0,0) on subview draws 5 pixels in diagonally at upper-left of viewport.
												# Used in compute_gadget_redraw_transform() in   src/lib/x-kit/widget/gui/guiboss-imp.pkg
						),

				is_visible:	Ref( Bool )					# This will be FALSE only if we are one of several alternate views in a TABBED_VIEWS set.
												# We need this so that   update_offscreen_parent_pixmaps_and_then_topwindow()   in   src/lib/x-kit/widget/gui/guiboss-imp.pkg
												# can know when to stop propagating widget updates up the viewport tree.
			      }
	  ;

	Viewport
	  =
	  {
	    parent_pixmap:	Backing_Pixmap,
	    viewport_site:	Ref(g2d::Box),							# Size and location of subwindow viewport in parent Backing_Pixmap coordinates.
	    #
	    subview_origin:	Ref(g2d::Point)							# Location of subview relative to viewport. Used to scroll subwindow contents around in parent viewport.
	  };
 
	fun backing_pixmap_id_of    (TOPWINDOW_PIXMAP r) =>  r.pixmap.id;
	    backing_pixmap_id_of    (VIEWPORT_PIXMAP  r) =>  r.pixmap.id;
	end; 

	fun gadget_to_rw_pixmap__of (TOPWINDOW_PIXMAP r) =>  r.pixmap;
	    gadget_to_rw_pixmap__of (VIEWPORT_PIXMAP  r) =>  r.pixmap;
	end; 

	Space_To_Gui
	  =
	  { id:				Id,							# Unique id to facilitate storing space_to_gui ports in indexed datastructures like red-black trees.
	    #
	    note_widget_site:	      { id:		iul::Id,
					site:		g2d::Box,
					backing_pixmap:	Backing_Pixmap
				      }
				      -> Void
	  };
    };												# package packedspace_to_widget;
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
