## run-in-x-window.pkg
#
# This package provides a higher-level interface to invoking applications.
# Users may set the shell variable "DISPLAY" to specify the display connection.

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib






###                  "There should be no such thing as boring mathematics."
###
###                                           -- E.J. Dijkstra

stipulate
    include threadkit;									# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package wg  =  widget;								# widget			is from   src/lib/x-kit/widget/basic/widget.pkg
    package xc  =  xclient;								# xclient			is from   src/lib/x-kit/xclient/xclient.pkg
herein

    package   run_in_x_window
    : (weak)  Run_In_X_Window								# Run_In_X_Window		is from   src/lib/x-kit/widget/lib/run-in-x-window.api
    {
											# thread_scheduler_control_g	is from   src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg
	fun make_root_window
                display_or_null								# Allow overriding of the DISPLAY environment variable setting.
	    =
	    {   my  ( xdisplay,								# Typically from $DISPLAY environment variable.
                      xauthentication:  Null_Or(xc::Xauthentication)			# Typically from ~/.Xauthority
                    )
		    =
		    xc::get_xdisplay_string_and_xauthentication  display_or_null;

		wg::make_root_window (xdisplay, xauthentication)
		except
		    x as xclient::XSERVER_CONNECT_ERROR s
			=
			{   file::write
				( file::stderr,
				  string::cat
				    [ "run_in_x_window: unable to open display \"",   xdisplay,   "\"\n",
				      "  ",   s,   "\n"
				    ]
				);

			    raise exception x;	
#			    shut_down_thread_scheduler  threadkit_winix::process::failure;	# No longer kosher since 6.3
			};
	      };

	default_time_quantum
	    =
	    time::from_milliseconds 20;

	fun run_in_x_window  do_it
	    =
	    {
		{   do_it (make_root_window NULL);
		    #
		    winix::process::success;
		}
		except
		    _ = winix::process::failure;

		();
	    };

	Run_In_X_Window_Options
	  #
	  = DISPLAY String								# Connect to this display. String is as in DISPLAY environment var: "127.0.0.1:0.0" or such.  Value of "" will be ignored.
	  ;

	fun run_in_x_window' app (options:  List(Run_In_X_Window_Options))
	    =
	    run_in_x_window'' (options, NULL: Null_Or(String))
	    where
		fun run_in_x_window'' ((DISPLAY "" ! rest), display_or_null)
			=>
			run_in_x_window'' (rest, display_or_null);			# Ignore DISPLAY values of "".

		    run_in_x_window'' ((DISPLAY display ! rest), display_or_null)
			=>
			run_in_x_window'' (rest, THE display);				# Note DISPLAY value.

		    run_in_x_window'' ([], display_or_null)
			=> 
			{   {   app (make_root_window display_or_null);
				#
				winix::process::success;
			    }
			    except  _ = winix::process::failure;

			    ();
			};
		end;
	    end;

    };										# package run_in_x_window 

end;


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1994 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
