## xclient-ximps.pkg
#
# This package has the highest-level responsibility for
# managing all the state and operations relating to
# communication with a given X server.
#
#
# Architecture
# ------------
#
# Nomenclature:  An 'imp' is a server microthread.
#                (Like a daemon but smaller!)
#
#                A 'ximp' is an X-specific imp. 
#
# An xsocket  is built of four  imps.
# An xsession adds three more   imps to make seven imps total.
# An xclient  adds two   more   imps to make nine  imps total.
# An X application adds an unbounded number of additional widget imps.
#
# Adapting from the page 8 diagram in
#     http:://mythryl.org/pub/exene/1991-ml-workshop.pdf
# our dataflow network for xsession looks like:
#
#       ----------------------
#       |  X server process  |
#       ----------------------
#            ^          |
#            |          v
#   -------<network socket>------------- network and process boundary.
#            ^          |xpackets
#            |xpackets  v                                          ---           ---              ---
#  --------------- ---------------                                  .             .                .				# outbuf_ximp		is from   src/lib/x-kit/xclient/src/wire/outbuf-ximp.pkg
#  | outbuf_ximp | | inbuf_ximp  |                                  .             .                .				#
#  --------------- ---------------                                  .             .                .				#  inbuf_ximp		is from   src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg
#        ^             | xpackets                                   .             .                .				#
#        | xpackets    v                                            .             .                .				#
#  --------------------------------------                           ... xsocket   .                .				# xsocket_ximps		is from   src/lib/x-kit/xclient/src/wire/xsocket-ximps.pkg
#  |       xsequencer_ximp              |--> (error handler)        .   ximps     .                .				# xsequencer_ximp	is from   src/lib/x-kit/xclient/src/wire/xsequencer-ximp.pkg
#  --------------------------------------                           .             .                .				#
#                ^                  | xpackets                      .             .                .				#
#                |                  v                               .             ... xsession     .				# xsession_ximps	is from   src/lib/x-kit/xclient/src/window/xsession-ximps.pkg
#                |               -------------------------          .             .   ximps        .				#
#                |               | decode_xpackets_ximp  |          .             .                .				# decode_xpackets_ximp	is from   src/lib/x-kit/xclient/src/wire/decode-xpackets-ximp.pkg
#                |               -------------------------          .             .                .				#
#                |                  | xevents                      ---            .                .... xclient			# xclient_ximps		is from   src/lib/x-kit/xclient/src/window/xclient-ximps.pkg
#                |                  v                                             .                .	ximps			#
#                |           -------------------------    ---------------         .                .				# xevent_router_ximp	is from   src/lib/x-kit/xclient/src/window/xevent-to-window-ximp.pkg
#                |           | xevent_router_ximp |--> | keymap_ximp |         .                .				#
#                |           -------------------------    ---------------         .                .				# keymap_ximp		is from   src/lib/x-kit/xclient/src/window/keymap-ximp.pkg
#                |              | xevents  ^                    ^                 .                .				#
#                |              |          |                    |                 .                .				#
#                |              |          |                    |                 .                .				#
#                |              |          |                    |                ---               .				#
#      ------------------------ |          |                    |                                  .				#
#      |    xserver_ximp      | |          |                    |                                  .				# xserver_ximp		is from   src/lib/x-kit/xclient/src/window/xserver-ximp.pkg
#      ------------------------ |          |                    |                                  .				#
#                ^              |          |get_window_site     |                                  .				#
#                |draw ops etc  | xevents  |note_new_topwindow  |keycode_to_keysym                ---				#
#                |              v          |                    v								#
# (.................................to/from widget threads......................................) ---				#
#        ^                |	          ^                |	                                   .				#
#        |xrequests       | xevents       |xrequests       | xevents                               .				#
#        |                v	          |                v	                                   .				#
#     -------------------------	       -------------------------                                   .				#
#     | xevent_to_widget_ximp |	       | xevent_to_widget_ximp |   ... (all topwindows for app)    .				# xevent_router_ximp	is from   src/lib/x-kit/xclient/src/window/xevent-to-window-ximp.pkg
#     -------------------------	       -------------------------                                   .... widget ximps		#
#             /      \		               /      \		                                   .				#
#            / widget \		              / widget \	                                   .				#
#           /   tree   \	             /   tree   \	                                   .				#
#          /            \	            /            \	                                   .				#
#         /     ...      \                 /     ...      \                                        .				#
#                                                                                                 ---				#
# Dramatis Personae:
#
#  o  The             "xsocket  ximps" are started up by:   src/lib/x-kit/xclient/src/wire/xsocket-ximps.pkg
#     The (remaining) "xsession ximps" are started up by:   src/lib/x-kit/xclient/src/window/xsession-ximps.pkg
#     The (remaining) "xclient  ximps" are started up here: src/lib/x-kit/xclient/src/window/xclient-ximps.pkg
#     The             "widget   ximps" are started up by:   src/lib/x-kit/widget/gui/guiboss-imp.pkg
# 
#  o  The xsequencer_ximp matches replies to requests.
#     All traffic to/from the X server goes through it.
#         Implemented in:  src/lib/x-kit/xclient/src/wire/xsequencer-ximp.pkg
#
#  o  The outbuf_ximp optimizes network usage by
#     combining multiple requests per network packet.
#         Implemented in:  src/lib/x-kit/xclient/src/wire/outbuf-ximp.pkg
#
#  o  The inbuf_ximp breaks the incoming bytestream
#     into individual replies and forwards them individually
#     to xsequencer_ximp.
#         Implemented in:  src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg
#
#  o  The decode_xpackets_ximp cracks raw wire-format bytestrings into
#     event_types::x::Event values and combines multiple related Expose
#     events into a single logical Expose event for ease of downstream
#     processing.
#         Implemented in:  src/lib/x-kit/xclient/src/wire/decode-xpackets-ximp.pkg
#
#  o  The   xevent_router_ximp   imp receives all X events
#     (e.g. keystrokes and mouseclicks) and feeds each one to the
#     appropriate toplevel window, or more precisely to the
#     topwindow_to_widget_router   at the root of the widgettree for
#   ("xevent_to_widget_ximp" might be a better name)
#     that window, there to trickle down the widgettree to its ultimate
#     target widget.
#
#     To do this, xevent_router_ximp
#     tracks all X windows created by the application,
#     keyed by their X IDs.  (Toplevel X windows are
#     registered at creation by the window-old.pkg functions;
#     subwindows are registered when their X notify event
#     comes through.)
#
#         Implemented in:  src/lib/x-kit/xclient/src/window/xevent-to-window-ximp.pkg
#         See also:        src/lib/x-kit/xclient/src/window/topwindow-to-widget-router-old.pkg
#
#  o  The font_index ...
#         Implemented in:  src/lib/x-kit/xclient/src/window/font-index.pkg
#
#  o  The keymap_ximp ...
#         Implemented in:  src/lib/x-kit/xclient/src/window/keymap-ximp.pkg
#
#
#  o  The xserver_ximp buffers draw commands and combines			2014-05-03 CrT: I believe the buffering has now been eliminated to reduce latency -- clients are now responsible for grouping draw commands.
#     them into subsequences which can share a single
#     X server graphics context, in order to minimize
#     the number of graphics context switches required.
#     It works closely with the pen-to-gcontext-imp.				2014-05-03 CrT: pen-to-gcontext-imp has been replaced by src/lib/x-kit/xclient/src/window/pen-cache.pkg
#         Implemented in:  src/lib/x-kit/xclient/src/window/xserver-ximp.pkg
#
#  o  We map between the immutable "pens" we provide to the application
#     programmer and the mutable graphics contexts actually supported by
#     the X server with the help of pen_cache which tracks available
#     graphics contexts. Given a pen, we returns a matching graphics context,
#     using an existing one unchanged if possible, else modifying an
#     existing one appropropriately.
#         pen_cache is implemented in:  src/lib/x-kit/xclient/src/window/pen-cache.pkg
#
#
# All mouse and keyboard events flow down through the
# inbuf, sequencer, decoder and xevent-to-window ximps
# and thence down through the widget hierarchy
# associated with the relevant topwindow.
#
# Client xserver requests and responses are sent
# directly to the sequencer imp, with the exception
# of font requests and responses, which run through
# the font imp.
#
# Keysym translations are handled by keymap_ximp.
#
# xclient-ximps wraps up the ximps
#
#    inbuf_ximp;						# inbuf_ximp					is from   src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg
#    outbuf_ximp;						# outbuf_ximp					is from   src/lib/x-kit/xclient/src/wire/outbuf-ximp.pkg
#    xsequencer_ximp;						# xsequencer_ximp				is from   src/lib/x-kit/xclient/src/wire/xsequencer-ximp.pkg
#    decode_xpackets_ximp;					# decode_xpackets_ximp				is from   src/lib/x-kit/xclient/src/wire/decode-xpackets-ximp.pkg
#
# to look like a single logical ximp to the rest of
# the system.

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib





stipulate
    include package threadkit;					# threadkit					is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    #
    package un  =  unt;						# unt						is from   src/lib/std/unt.pkg
    package v1u =  vector_of_one_byte_unts;			# vector_of_one_byte_unts			is from   src/lib/std/src/vector-of-one-byte-unts.pkg
    package w2v =  wire_to_value;				# wire_to_value					is from   src/lib/x-kit/xclient/src/wire/wire-to-value.pkg
    package xg  =  xgeometry;					# xgeometry					is from   src/lib/std/2d/xgeometry.pkg
    package xtr =  xlogger;					# xlogger					is from   src/lib/x-kit/xclient/src/stuff/xlogger.pkg

    package sok =  socket__premicrothread;			# socket__premicrothread			is from   src/lib/std/socket--premicrothread.pkg

    package w2x =  widget_to_xserver;				# widget_to_xserver				is from   src/lib/x-kit/xclient/src/window/widget-to-xserver.pkg
    package exx =  xserver_ximp;				# xserver_ximp					is from   src/lib/x-kit/xclient/src/window/xserver-ximp.pkg

    package kp  =  keymap;					# keymap					is from   src/lib/x-kit/xclient/src/window/keymap.pkg

    package sex =  xsession_ximps;				# xsession_ximps				is from   src/lib/x-kit/xclient/src/window/xsession-ximps.pkg

    package xwp =  appwindow_to_xevent_router;			# appwindow_to_xevent_router			is from   src/lib/x-kit/xclient/src/window/appwindow-to-xevent-router.pkg
    package x2s =  xclient_to_sequencer;			# xclient_to_sequencer				is from   src/lib/x-kit/xclient/src/wire/xclient-to-sequencer.pkg
    package xes =  xevent_sink;					# xevent_sink					is from   src/lib/x-kit/xclient/src/wire/xevent-sink.pkg
    package xew =  xerror_well;					# xerror_well					is from   src/lib/x-kit/xclient/src/wire/xerror-well.pkg
    package xt  =  xtypes;					# xtypes					is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
    package et  =  event_types;					# event_types					is from   src/lib/x-kit/xclient/src/wire/event-types.pkg

    package ix  =  inbuf_ximp;					# inbuf_ximp					is from   src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg
    package ox  =  outbuf_ximp;					# outbuf_ximp					is from   src/lib/x-kit/xclient/src/wire/outbuf-ximp.pkg
    package sx  =  xsequencer_ximp;				# xsequencer_ximp				is from   src/lib/x-kit/xclient/src/wire/xsequencer-ximp.pkg
    package dxx =  decode_xpackets_ximp;			# decode_xpackets_ximp				is from   src/lib/x-kit/xclient/src/wire/decode-xpackets-ximp.pkg

    package dy  =  display;					# display					is from   src/lib/x-kit/xclient/src/wire/display.pkg


    # These are purely temporary debug kludges to force these to compile:
    #
    Xserver_Ximp_Exports
	=  xserver_ximp::Exports;				# xserver_ximp					is from   src/lib/x-kit/xclient/src/window/xserver-ximp.pkg
herein


    # This impset is typically instantiated by:
    #
    #     src/lib/x-kit/xclient/src/window/xsession-junk.pkg

    package   xclient_ximps
    :         Xclient_Ximps					# Xclient_Ximps					is from   src/lib/x-kit/xclient/src/window/xclient-ximps.api
    {
	Imports = {										# Ports we use, provided by other imps.
		    window_property_xevent_sink:	xes::Xevent_Sink,			# We'll forward X server PropertyNotify events to this sink.
		    selection_xevent_sink:		xes::Xevent_Sink			# We'll forward X server SelectionNotify, SelectionRequest and SelectionClear events to this sink.
		  };


	Exports = {										# Ports we provide for use by other imps.
		    widget_to_xserver:			w2x::Widget_To_Xserver,
		    keymap:	 			kp::Keymap,
		    appwindow_to_xevent_router:		xwp::Appwindow_To_Xevent_Router,	# Provides  note_new_topwindow()  and  get_window_site().
		    xclient_to_sequencer:		x2s::Xclient_To_Sequencer,
		    xerror_well:			xew::Xerror_Well
		  };

	Option = MICROTHREAD_NAME String;							# 

	Xclient_Ximps_Egg =  Void -> (Exports,   (Imports, Run_Gun, End_Gun) -> Void);


	fun process_options (options: List(Option), { name })
	    =
	    {   my_name   = REF name;
		#
		apply  do_option  options
		where
		    fun do_option (MICROTHREAD_NAME n)  =   my_name := n;
		end;

		{ name => *my_name };
	    };



        ##########################################################################################
	# PUBLIC.
	#
	fun make_xclient_ximps_egg												# PUBLIC. PHASE 1: Construct our state and initialize from 'options'.
	      (
		socket:		sok::Socket (X, sok::Stream(sok::Active)),							# Socket to use.
		xdisplay:	dy::Xdisplay,
		drawable:	xt::Drawable_Id,
		options:	List(Option)
	      )
	    =
	    {   (process_options (options, { name => "tmp" }))
		    ->
		    { name };


		me =	{ xserver_ximp_egg	=>   exx::make_xserver_egg (xdisplay, drawable, []),
			  xsession_ximps_egg	=>   sex::make_xsession_ximps_egg (socket, xdisplay, [])
			};


		\\ () = {													# PUBLIC. PHASE 2: Start our microthread and return our Exports to caller.
			    (me.xserver_ximp_egg    ()) ->  (xserver_ximp_exports,   xserver_ximp_egg'    );
			    #
			    (me.xsession_ximps_egg  ()) ->  (xsession_ximps_exports, xsession_ximps_egg'  );

			    xserver_ximp_exports   -> { widget_to_xserver, window_map_event_sink };

			    xsession_ximps_exports -> { xclient_to_sequencer, xerror_well, keymap, appwindow_to_xevent_router };


			    fun phase3											# PUBLIC. PHASE 3: Accept our Imports, then wait for Run_Gun to fire.
				(
				  imports:	Imports,
				  run_gun':	Run_Gun,	
				  end_gun':	End_Gun
				)
				=
				{   imports -> { window_property_xevent_sink, selection_xevent_sink };
				    #
				    xserver_ximp_egg'   ({ appwindow_to_xevent_router, xclient_to_sequencer	      },	run_gun', end_gun');

				    xsession_ximps_egg' ({ window_property_xevent_sink, selection_xevent_sink },	run_gun', end_gun');

				    ();
				};

			    ({ widget_to_xserver, keymap, appwindow_to_xevent_router, xclient_to_sequencer, xerror_well },   phase3);
			};
	    };
    };															# package xclient_ximps
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2014,
## released per terms of SMLNJ-COPYRIGHT.
