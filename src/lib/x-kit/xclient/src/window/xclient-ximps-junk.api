## xclient-ximps-junk.api
#

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib



stipulate
    include threadkit;										# threadkit					is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package exp =  encode_xpackets_port;							# encode_xpackets_port				is from   src/lib/x-kit/xclient/src/window/encode-xpackets-port.pkg
    package kp  =  keymap_port;									# keymap_port					is from   src/lib/x-kit/xclient/src/window/keymap-port.pkg
    package op  =  outbuf_port;									# outbuf_port					is from   src/lib/x-kit/xclient/src/wire/outbuf-port.pkg
    package sp  =  sequencer_port;								# sequencer_port				is from   src/lib/x-kit/xclient/src/wire/sequencer-port.pkg
    package xes =  xevent_sink;									# xevent_sink					is from   src/lib/x-kit/xclient/src/wire/xevent-sink.pkg
    package xew =  xerror_well;									# xerror_well					is from   src/lib/x-kit/xclient/src/wire/xerror-well.pkg
    package sok =  socket__premicrothread;							# socket__premicrothread			is from   src/lib/std/socket--premicrothread.pkg
    package dy  =  display;									# display					is from   src/lib/x-kit/xclient/src/wire/display.pkg
    package xt  =  xtypes;									# xtypes					is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
    package is  =  internet_socket__premicrothread;						# internet_socket__premicrothread		is from   src/lib/std/src/socket/internet-socket--premicrothread.pkg
    package dns =  dns_host_lookup;								# dns_host_lookup				is from   src/lib/std/src/socket/dns-host-lookup.pkg
    package uds =  unix_domain_socket__premicrothread;						# unix_domain_socket__premicrothread		is from   src/lib/std/src/socket/unix-domain-socket--premicrothread.pkg
herein


    # This api is implemented in:
    #
    #     src/lib/x-kit/xclient/src/wire/xclient-ximps-junk.pkg
    #
    api Xclient_Ximps_Junk
    {
	Dummy;


	say_hello_to_xserver									# Primarily for internal use, but exported anyhow.
	  :
	  { socket:				is::Stream_Socket(X),
	    xauthentication:			Null_Or( xt::Xauthentication ),
	    canonical_display_name:		String,
	    screen:				Int
	  }
	  ->
	  { socket:				is::Stream_Socket(X),
	    xserver_info:			xt::Xserver_Info,
	    canonical_display_name:		String,
	    screen:				Int
	  };

	open_internet_domain_socket								# Primarily for internal use, but exported anyhow.
	  :
	  ( dns::Internet_Address,
	    Int											# port.
	  )
	  ->
	  is::Stream_Socket( A_mode );


	connect_to_xserver									# Primarily for internal use, but exported anyhow.
	  :
	  ( String,										# raw_display_name: ":0.0" or "192.168.0.1:0.0" or such, often from unix DISPLAY environment variable.
	    Null_Or( xt::Xauthentication )							# Ultimately ~/.Xauthority
	  )
	  ->
	  { socket:				is::Stream_Socket(X),
	    xserver_info:			xt::Xserver_Info,
	    canonical_display_name:		String,
	    screen:				Int
	  };


	make_root_window
	  :
	  (Null_Or( String ))									# display_or_null.  
	  ->
	  Void;

# Cannot kick this one in until we have a newworld widget::Root_Window type:
#
#	run_in_x_window:  (wg::Root_Window -> Void) -> Void;

    };												# api Xclient_Ximps
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
