## inbuf-ximp.api
#
# For the big picture see the imp dataflow diagram in
#
#     src/lib/x-kit/xclient/src/window/xsession.pkg

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib




											# event_types				is from   src/lib/x-kit/xclient/src/wire/event-types.pkg
											# xerrors				is from   src/lib/x-kit/xclient/src/wire/xerrors.pkg

stipulate
    include threadkit;									# threadkit				is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package mps =  microthread_preemptive_scheduler;					# microthread_preemptive_scheduler	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/microthread-preemptive-scheduler.pkg
    #
    package un  =  unt;									# unt					is from   src/lib/std/unt.pkg
    package uid =  issue_unique_id;							# issue_unique_id			is from   src/lib/src/issue-unique-id.pkg
#   package wv8 =  rw_vector_of_one_byte_unts;						# rw_vector_of_one_byte_unts		is from   src/lib/std/src/rw-vector-of-one-byte-unts.pkg
    package psx =  posixlib;								# posixlib				is from   src/lib/std/src/psx/posixlib.pkg
    package e2s =  xerror_to_string;							# xerror_to_string			is from   src/lib/x-kit/xclient/src/to-string/xerror-to-string.pkg
    package skj =  socket_junk;								# socket_junk				is from   src/lib/internet/socket-junk.pkg
    package sok =  socket__premicrothread;						# socket__premicrothread		is from   src/lib/std/socket--premicrothread.pkg
    package v1u =  vector_of_one_byte_unts;						# vector_of_one_byte_unts		is from   src/lib/std/src/vector-of-one-byte-unts.pkg
    package v2w =  value_to_wire;							# value_to_wire				is from   src/lib/x-kit/xclient/src/wire/value-to-wire.pkg
    package w2v =  wire_to_value;							# wire_to_value				is from   src/lib/x-kit/xclient/src/wire/wire-to-value.pkg
    #
    package xg  =  xgeometry;								# xgeometry				is from   src/lib/std/2d/xgeometry.pkg
    package xtr =  xlogger;								# xlogger				is from   src/lib/x-kit/xclient/src/stuff/xlogger.pkg
    #
    package xms =  xmsg_sink;								# xmsg_sink				is from   src/lib/x-kit/xclient/src/wire/xmsg-sink.pkg

    trace =  xtr::log_if  xtr::io_logging  0;						# Conditionally write strings to tracing.log or whatever.
herein


    # This api is implemented in:
    #
    #     src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg
    #
    api Inbuf_Ximp
    {

	Run_Gun =  Mailop(Void);							# Purely for readability.
	End_Gun =  Mailop(Void);							# Purely for readability.

	Inbuf_Ximp_State;								# Opaque wrapper for all mutable state maintained by ximp.

	Configstate(X);

	Exports(X)= { configstate: Configstate(X)
		    };

	Imports = { xmsg_sink:   xms::Xmsg_Sink };

	make_inbuf_ximp_state: Void -> Inbuf_Ximp_State;

	make_inbuf_ximp:   String -> Exports(X);					# Name for imp microthread

	configure_inbuf_ximp								# Supply all information required for startup.
	    :
	    ( Configstate(X),
	      Inbuf_Ximp_State,
	      Imports,
	      Run_Gun,									# Imp will start when run_gun'  fires.
	      End_Gun,									# Imp will stop  when end_gun' fires.
	      sok::Socket (X, sok::Stream(sok::Active))					# Socket to read.
	    )
	    -> Void;
    };											# api Inbuf_Ximp
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
