## xsequencer-ximp.api
#
# For the big picture see the imp dataflow diagram in
#
#     src/lib/x-kit/xclient/src/window/xclient-ximps.pkg
#
# Use protocol is:
#
# Next up is parameter support for:
#    error_sink
#    to_x_sink
#    from_x_mailqueue
#
#   {   (make_run_gun  ())   ->   { run_gun',  fire_run_gun  };
#	(make_end_gun ())   ->   { end_gun', fire_end_gun };
#
#	sx_state = sx::make_xsequencer_ximp_state ();
#	sx_ports = sx::make_xsequencer_ximp "Some name";
#       sx       = sx_ports.clientport;								# The clientport represents the imp for most purposes.
#
#       ...											# Create other app imps.
#
#	sx::configure_sequencer_imp
#         (sxports.configstate, sx_state, { ... }, run_gun', end_gun' );				# Wire imp to other imps.
#												# All imps will start when run_gun' fires.
#
#       ...											# Wire up other app imps similarly.
#
#	fire_run_gun ();									# Start all app imps running.
#
#	sx.send_xrequest(...);									# Many calls like this over lifetime of imp.
#       ...											# Similar calls to other app imps.
#
#	fire_end_gun ();									# Shut the imp down cleanly.
#   };

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib



stipulate
    include threadkit;										# threadkit					is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package op  =  outbuf;									# outbuf					is from   src/lib/x-kit/xclient/src/wire/outbuf.pkg
    package sp  =  xsequencer;									# xsequencer					is from   src/lib/x-kit/xclient/src/wire/xsequencer.pkg
    package xew =  xerror_well;									# xerror_well					is from   src/lib/x-kit/xclient/src/wire/xerror-well.pkg
    package xps =  xpacket_sink;								# xpacket_sink					is from   src/lib/x-kit/xclient/src/wire/xpacket-sink.pkg
herein


    # This api is implemented in:
    #
    #     src/lib/x-kit/xclient/src/wire/xsequencer-ximp.pkg
    #
    api Xsequencer_Ximp
    {
	Exports	  = {										# Ports we export for use by other imps.
		      xpacket_sink:		xps::Xpacket_Sink,				# For xpackets from xserver via inbuf.
		      xsequencer:		sp::Xsequencer,					# Requests from widget/application code.
		      xerror_well:		xew::Xerror_Well				# Error messages from the X server.
		    };

	Imports   = {										# Ports we use which are exported by other imps.
		      outbuf:		op::Outbuf,
		      xpacket_sink:		xps::Xpacket_Sink				# Forwards xmsgs to decode_xpackets_ximp from   src/lib/x-kit/xclient/src/wire/decode-xpackets-ximp.pkg
		    };

	Option = MICROTHREAD_NAME String;							# 

	Xsequencer_Egg =  Void -> (Exports,   (Imports, Run_Gun, End_Gun) -> Void);

	make_xsequencer_egg:	List(Option) -> Xsequencer_Egg;
    };												# api Xsequencer_Ximp
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2014,
## released per terms of SMLNJ-COPYRIGHT.
