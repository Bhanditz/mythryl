## sample-ximp.api
#
# This file is intended purely for clone-and-mutate
# construction of new X imps ("ximps").
#
# For the big picture see the imp dataflow diagram in
#
#     src/lib/x-kit/xclient/src/window/xsession.pkg
#
# Use protocol is:
#
#   {	starting_gun  = make_full_maildrop ():  Maildrop(Void);
#       starting_gun' = take_from_maildrop' starting_gun;					# Build a mailop that will fire when starting_gun is set.
#
#	sxstate =  sx::make_sample_ximp_state ();
#	sxports =  sx::make_sample_ximp "Some name";
#       sx      =  sx_ports.clientport;								# The clientport represents the imp for most purposes.
#
#       ...											# Create other app imps.
#
#	sx::configure_sample_ximp (sxports.configport, sx_state, { ... }, starting_gun' );	# Wire imp to other imps.
#												# All imps will start when starting_gun' fires.
#
#       ...											# Wire up other app imps similarly.
#
#	put_in_maildrop (starting_gun, ());							# Start all app imps running.
#
#	sx::do_something (sx, 12);								# Many calls like this over lifetime of imp.
#
#       ...											# Similar calls to other app imps.
#
#	sx::shut_down_sample_ximp  (sxports.patronport);					# Shut the imp down cleanly.
#   };
#
# The point of factoring off   make_sample_ximp_state()
# is to support creating a spec datastructure holding
# everything needed to create or recreate a running
# microthread graph, retaining the ability to shut it
# down, modify the spec, and then start up the modified
# graph, without losing any state.  (Think interactive
# editing of a GUI, say.)
#     To this end, the Sample_Ximp_State value should
# contain mutable values directly updated by the ximp,
# rather than being used merely to initialize values
# thereafter modified internally by the ximp.

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib



stipulate
    include threadkit;										# threadkit				is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
herein

    # This api is implemented in:
    #
    #     src/lib/x-kit/xclient/src/wire/sample-ximp.pkg
    #
    api Sample_Ximp
    {
	Starting_Gun = Mailop(Void);								# Purely for readability.

	Sample_Ximp_State;									# Opaque wrapper for all mutable state maintained by ximp.

	Configport;										# Used only for start_up() call.
	Clientport;										# Used by client code. This is the workhorse mailqueue.
	Patronport;										# Used to shut down the imp.

	Ports	= { configport: Configport,
		    clientport: Clientport,
		    patronport: Patronport
		  };

	Links = { int_sink: Int -> Void };

	make_sample_ximp_state: Void -> Sample_Ximp_State;

	make_sample_ximp:  String -> Ports;							# String gives name for imp microthread.  Ports gives access to it.

	configure_sample_ximp: (Configport, Sample_Ximp_State, Links, Starting_Gun) -> Void;	# Supply all information required for startup.
												# Imp will start reading from clientport+patronport after starting_gun' fires.

	shut_down_sample_ximp:	Patronport -> Void;						# Shut down the ximp.

	pass_something:	Clientport -> Replyqueue(Void) -> (Int -> Void) -> Void;

	do_something:	(Clientport, Int) -> Void;
    };												# api Sample_Ximp
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
