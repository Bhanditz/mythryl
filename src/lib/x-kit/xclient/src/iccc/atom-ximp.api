## atom-ximp.api
#
# A Client-side server for atoms.
#
# Atoms are short integer representations
# of strings maintained by the X server.
#
# The X Inter-Client Communication Convention
# (ICCC) defines a standard set of atoms
# set of atoms; see:
#
#     src/lib/x-kit/xclient/src/iccc/standard-x11-atoms.pkg
#

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib


# This api is implemented in:
#
#     src/lib/x-kit/xclient/src/iccc/atom-ximp.pkg

stipulate
    include threadkit;										# threadkit		is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package xt  =  xtypes;									# xtypes		is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
    package xdy =  xdisplay;									# xdisplay		is from   src/lib/x-kit/xclient/src/wire/xdisplay.pkg
    package ap  =  atom_port;									# atom_port		is from   src/lib/x-kit/xclient/src/iccc/atom-port.pkg
    package sp  =  sequencer_port;								# sequencer_port	is from   src/lib/x-kit/xclient/src/wire/sequencer-port.pkg
herein

    api Atom_Ximp {
	#
	Atom_Ximp_State;									# Opaque wrapper for all mutable state maintained by ximp.

	Configstate;										# Used only for start_up() call.

	Exports	  = {										# Ports we export for use by other imps.
		      atom_port:		ap::Atom_Port
		    };

	Imports   = {										# Ports we use which are exported by other imps.
		      sequencer_port:		sp::Sequencer_Port
		    };

	make_atom_ximp_state: Void -> Atom_Ximp_State;

	make_atom_ximp:  String -> (Configstate, Exports);					# String gives name for imp microthread.  Exports gives access to it.

	configure_atom_ximp									# Supply all information required for startup.
	    :
	    (Configstate, Atom_Ximp_State, Imports, Run_Gun, End_Gun)
	    ->
	    Void;
    };

end;



##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
