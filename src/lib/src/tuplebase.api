## tuplebase.api
#
# API for fully-persistent tuplebase supporting only duples and triples.

# Compiled by:
#     src/lib/std/standard.lib

# This api is implemented in:
#     src/lib/src/tuplebase.pkg

api Tuplebase {
    #
    Other = Exception;								# We support the usual hack of using Exception as an extensible datatype to associate arbitrary values with Atoms.

    Tuplebase;
    Atom;

    Duple  = (Atom, Atom);
    Triple = (Atom, Atom, Atom);

    package ds: Set;								# Sets of Duples.	Set is from   src/lib/src/set.api
    package ts: Set;								# Sets of Triples.	Set is from   src/lib/src/set.api

    make_atom:			Void      -> Atom;				# Create a hairless Atom.
    make_string_atom:		String    -> Atom;				# Create an Atom with an associated String value, retrievable via string_of.
    make_float_atom:		Float     -> Atom;				# Create an Atom with an associated Float  value, retrievable via  float_of.
    make_other_atom:		Other     -> Atom;				# Create an Atom with an associated Other  value, retrievable via  other_of. This allows arbitrary values to be associated with the Atom.
    make_tuplebase_atom:	Tuplebase -> Atom;				# Create an Atom with an associated Other  value, retrievable via  other_of. This allows arbitrary values to be associated with the Atom.

    string_of:			Atom   -> Null_Or(String);			# Return String    associated with given Atom, if any, else NULL.
    float_of:			Atom   -> Null_Or(Float);			# Return Float     associated with given Atom, if any, else NULL.
    other_of:			Atom   -> Null_Or(Other);			# Return Other     associated with given Atom, if any, else NULL.
    tuplebase_of:		Atom   -> Null_Or(Tuplebase);			# Return Tuplebase associated with given Atom, if any, else NULL.

    empty_tuplebase:		Tuplebase;

    put_duple:			(Tuplebase, Duple ) -> Tuplebase;		# Store a Duple  into the tuplebase, returning the updated tuplebase. The input tuplebase is unchanged.
    put_triple:			(Tuplebase, Triple) -> Tuplebase;		# Store a Triple into the tuplebase, returning the updated tuplebase. The input tuplebase is unchanged.

    get_duples1:		(Tuplebase, Atom) -> Null_Or(ds::Set);		# Get all Duples  in tuplebase with given Atom in first  slot.
    get_duples2:		(Tuplebase, Atom) -> Null_Or(ds::Set);		# Get all Duples  in tuplebase with given Atom in second slot.

    get_triples1:		(Tuplebase, Atom) -> Null_Or(ts::Set);		# Get all Triples in tuplebase with given Atom in first  slot.
    get_triples2:		(Tuplebase, Atom) -> Null_Or(ts::Set);		# Get all Triples in tuplebase with given Atom in second slot.
    get_triples3:		(Tuplebase, Atom) -> Null_Or(ts::Set);		# Get all Triples in tuplebase with given Atom in third  slot.

};									# api Tuplebase


## Original code by Jeff Prothero Copyright (c) 2014-2014,
## released per terms of SMLNJ-COPYRIGHT.
