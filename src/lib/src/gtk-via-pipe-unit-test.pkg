# gtk-via-pipe-unit-test.pkg 

# Compiled by:
#     src/lib/test/unit-tests.lib

# Run by:
#     src/lib/test/all-unit-tests.pkg

# Unit tests for:
#     src/lib/src/gtk-via-pipe.pkg

package gtk_via_pipe_unit_test {
    #
    include unit_test;						# unit_test			is from   src/lib/src/unit-test.pkg
    #
    include gtk_via_pipe;					# gtk_via_pipe			is from   src/lib/src/gtk-via-pipe.pkg

    name =  "src/lib/src/gtk-via-pipe-unit-test.pkg";

    fun run ()
        =
        {
            printf "\nDoing %s:\n" name;   

log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/AAA"; };
printf "\ngtk_via_pipe_unit_test::run/AAA\n";
	    session = make_session [];
log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/BBB"; };
printf "\ngtk_via_pipe_unit_test::run/BBB\n";
	    window = make_window session;

log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/CCC"; };
printf "\ngtk_via_pipe_unit_test::run/CCC\n";
	    set_delete_event_callback session window .{ print "Received DELETE_EVENT on main window.\n"; };
#	    set_destroy_callback      session window .{ exit_main session; exit 0; };

log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/DDD"; };
printf "\ngtk_via_pipe_unit_test::run/DDD\n";
	    set_border_width (session, window, 10);

log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/EEE"; };
printf "\ngtk_via_pipe_unit_test::run/EEE\n";
	    button = make_button_with_label (session, "Hello World");

log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/FFF"; };
printf "\ngtk_via_pipe_unit_test::run/FFF\n";
	    set_clicked_callback session button  .{  print "Hello, world!\n";  destroy_widget( session, window );  };

log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/GGG"; };
printf "\ngtk_via_pipe_unit_test::run/GGG\n";
	    add_kid { session, kid => button, mom => window };

log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/HHH"; };
printf "\ngtk_via_pipe_unit_test::run/HHH\n";
	    show_widget (session, button); 
log::note_in_ramlog .{ "gtk_via_pipe_unit_test::run/III"; };
printf "\ngtk_via_pipe_unit_test::run/III\n";
	    show_widget (session, window);

	    # As yet we have no way to press a button and
	    # check that it was pushed, alas:

#	    press_button (session, button);
#
#	    main session;

printf "\ngtk_via_pipe_unit_test::run/JJJ\n";
	    assert TRUE;

printf "\ngtk_via_pipe_unit_test::run/ZZZ\n";
            summarize_unit_tests  name;
	};
};


## Code by Jeff Prothero: Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
