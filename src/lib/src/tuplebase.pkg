## tuplebase.pkg
#
# First-cut simple fully-persistent tuplebase.
# This version supports only duples and triples.

# Compiled by:
#     src/lib/std/standard.lib


stipulate
    package map
	=
	red_black_map_with_implicit_keys_g (				# red_black_map_wit_implicit_keys_g		is from   src/lib/src/red-black-map-with-implicit-keys-g.pkg
	    package {
		Key = int::Int;
		compare = int::compare;
	    }
	);
    
herein

    package tuplebase
    :       Tuplebase						# Tuplebase	is from   src/lib/src/tuplebase.api
    {
	Duple  = (Int, Int);
	Triple = (Int, Int, Int);

	empty_1of2 =  map::empty  (#1: Duple -> Int);
	empty_2of2 =  map::empty  (#2: Duple -> Int);

	empty_1of3 =  map::empty  (#1: Triple -> Int);
	empty_2of3 =  map::empty  (#2: Triple -> Int);
	empty_3of3 =  map::empty  (#3: Triple -> Int);
    };
end;










##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################



## Original code by Jeff Prothero Copyright (c) 2014-2014,
## released per terms of SMLNJ-COPYRIGHT.
