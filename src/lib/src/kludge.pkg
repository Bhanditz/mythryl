## kludge.pkg
#
# See comments in
#
#     src/lib/src/kludge.api

# Compiled by:
#     src/lib/std/standard.lib






stipulate
    package ci      =  mythryl_callable_c_library_interface;			# mythryl_callable_c_library_interface	is from   src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg
herein
    package   kludge
    :         Kludge								# Kludge	is from   src/lib/src/kludge.api
    {
	fun cfun  fun_name
	    =
	    ci::find_c_function { lib_name => "kludge",  fun_name };
	    #
	    ###############################################################
	    # The function currently called in this package is not a true
	    # syscall, is fast, and is not called often anyhow.
	    # Consequently I'm not taking the time and effort to switch it
	    # over from using find_c_function() to using find_c_function'().
	    # 				   -- 2012-04-21 CrT


	get_script_name								# See comments in    src/lib/src/kludge.api
	    =									# This is used (only) in   src/lib/core/internal/mythryld-app.pkg	
	    cfun "get_script_name":   Void -> Null_Or( String );		# get_script_name		def in    src/c/lib/kludge/libmythryl-kludge.c

    };
end;


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Jeff Prothero Copyright (c) 2012,
## released under Gnu Public Licence version 3.
