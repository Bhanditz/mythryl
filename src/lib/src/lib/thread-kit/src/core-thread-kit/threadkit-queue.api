## threadkit-queue.api
#
# This is the core queue used throughout threadkit
# for run queues and wait queues.
#
# There's nothing thread-specific about the implemention.
#
# We make our datastructure externally visible so that
# other modules can inline the operations.  (Someday we'll
# be able to count on the compiler for that...)

# Compiled by:
#     src/lib/std/standard.lib





										# internal_threadkit_types	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg

# This api is implemented in:
#
#     src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.pkg
#
api Threadkit_Queue {
    #
    exception EMPTY_THREADKIT_QUEUE;

    Threadkit_Queue(X);								#  = internal_threadkit_types::Threadkit_Queue(X)

    make_threadkit_queue:  Void -> Threadkit_Queue(X);

    same_queue:  (Threadkit_Queue(X), Threadkit_Queue(X)) -> Bool;		# Returns TRUE iff the two queues are the same.

    queue_is_empty:  Threadkit_Queue(X) -> Bool;				# Returns TRUE iff the queue is empty.

    push_item_onto_back_of_queue:  (Threadkit_Queue(X), X) -> Void;		# The normal way of inserting an item into the queue.

    pull_item_off_front_of_queue:  Threadkit_Queue(X) -> Null_Or(X);		# Dequeue and return then next item in the queue.
										# Return NULL if the queue is empty.

    pull_item_off_front_of_queue_or_raise_exception				# Dequeue an item; raise EMPTY_THREADKIT_QUEUE if the queue is empty.
	:									# Use this only if it is a coding error for the queue to be empty at that point in the code.
	Threadkit_Queue(X) -> X;

    reset:  Threadkit_Queue(X) -> Void;
	#
	# Reset a queue to all empty.

    remove:  (Threadkit_Queue(X), (X -> Bool)) -> Void;
	#
	# Find and remove the first item that satisfies the predicate. 

};


##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1989-1991 John H. Reppy
## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
