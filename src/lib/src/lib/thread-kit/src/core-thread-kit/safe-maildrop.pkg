## safe-maildrop.pkg
#
# Just like   src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api
# except that we use separate handles for
# read and write, so that we can hand out
# read handles for publication purposes without
# worrying about some broken client doingw writes.
#
# See also:
#
#     src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api
#     src/lib/src/lib/thread-kit/src/core-thread-kit/oneshot-maildrop.api

# Compiled by:
#     src/lib/std/standard.lib





stipulate
    package mop =  mailop;								# mailop	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg
    package md  =  maildrop;								# maildrop	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg
herein

    # This api is implemented in:
    #
    #     src/lib/src/lib/thread-kit/src/core-thread-kit/safe-maildrop.pkg
    #
    package safe_maildrop
    :       Safe_Maildrop								# Safe_Maildrop	is from   src/lib/src/lib/thread-kit/src/core-thread-kit/safe-maildrop.api
    {
	Maildrop(X)    = md::Maildrop(X);
	Rw_Maildrop(X) = md::Maildrop(X);

	exception  MAY_NOT_FILL_ALREADY_FULL_MAILDROP
             = md::MAY_NOT_FILL_ALREADY_FULL_MAILDROP;

	fun maildrop_from_rw_maildrop  maildrop
	    =
	    maildrop;

	make_maildrop			=  md::make_maildrop;
	make_empty_maildrop		=  md::make_empty_maildrop;
	put_in_maildrop			=  md::put_in_maildrop;
	get_from_maildrop		=  md::get_from_maildrop;
	get_from_maildrop'		=  md::get_from_maildrop';
	nonblocking_get_from_maildrop	=  md::nonblocking_get_from_maildrop;
	peek_in_maildrop		=  md::peek_in_maildrop;
	peek_in_maildrop'		=  md::peek_in_maildrop';
	nonblocking_peek_in_maildrop	=  md::nonblocking_peek_in_maildrop;
	maildrop_swap			=  md::maildrop_swap;
	maildrop_swap'			=  md::maildrop_swap';
	same_maildrop			=  md::same_maildrop;
    };
end;

## COPYRIGHT (c) 1989-1991 John H. Reppy
## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
