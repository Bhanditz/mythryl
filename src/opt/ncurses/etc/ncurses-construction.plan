## ncurses-construction.plan
#
# This file contains information read by
#
#     $ROOT/src/lib/make-library-glue/make-library-glue.pkg
#
# For documentation on the format of this file see Note[1]
# in above file.





       # The following fns are purely for selftest/checkout:

	    do: plain_fn
       fn-name: print_hello_world
       libcall: fprintf(stderr,"Hello, world!\n")
       fn-type: Session -> Void

	    do: plain_fn
       fn-name: negate_int
       libcall: -i0
       fn-type: (Session, Int) -> Int

	    do: plain_fn
       fn-name: negate_float
       libcall: -f0
       fn-type: (Session, Float) -> Float

	    do: plain_fn
       fn-name: negate_boolean
       libcall: !b0
       fn-type: (Session, Bool) -> Bool

	    do: plain_fn
       fn-name: addch
       libcall: addch(i0)
       fn-type: (Session, Int) -> Void

	    do: plain_fn
       fn-name: cbreak
       libcall: cbreak()
       fn-type: Session -> Void

	    do: plain_fn
       fn-name: endwin
       libcall: endwin()
       fn-type: Session -> Void

	    do: plain_fn
       fn-name: getch
       libcall: getch()
       fn-type: Session -> Int

	    do: plain_fn
       fn-name: has_colors
       libcall: has_colors()
       fn-type: Session -> Bool

	    do: plain_fn
       fn-name: initscr
       libcall: initscr()
       fn-type: Session -> Void

# NB: A number of these have error return values which are currently
# being ignored.  In the original version I had code like
#
#	if (iresult == ERR)     result = RAISE_ERROR__MAY_HEAPCLEAN(task, "move", NULL);
#	else			result = HEAP_VOID;
#
# but if the current framework supports that, I've forgotten how.
# We may need an alternative to plain_fn to handle this...? XXX SUCKO FIXME.  -- 2013-03-03 CrT

	    do: plain_fn
       fn-name: move
       libcall: move( /*y*/i0, /*x*/i1 )
       fn-type: { session: Session, x: Int, y: Int } -> Void

	    do: plain_fn
       fn-name: nl
       libcall: nl()
       fn-type: Session -> Void

	    do: plain_fn
       fn-name: noecho
       libcall: noecho()
       fn-type: Session -> Void

	    do: plain_fn
       fn-name: nonl
       libcall: nonl()
       fn-type: Session -> Void

	    do: plain_fn
       fn-name: refresh
       libcall: refresh()
       fn-type: Session -> Void

	    do: plain_fn
       fn-name: start_color
       libcall: start_color()
       fn-type: Session -> Void





# NB: Default tab-stops are every 8 chars in emacsen,
#     so by having the type-field ': ' in cols 14-15
#     in this file we ensure that tab-containing code
#     in code: and type: fields looks the same in this
#     file and in its destination file.



## Code by Jeff Prothero : Copyright (c) 2010,
## released per terms of SMLNJ-COPYRIGHT.
