## benchmark-junk.api
#
# Benchmarking support.

# Compiled by:
#     src/app/benchmarks/benchmarks.lib



stipulate
    package cpu =  cpu_timer;					# cpu_timer			is from   src/lib/std/src/cpu-timer.pkg
    package f8b =  eight_byte_float;				# eight_byte_float		is from   src/lib/std/eight-byte-float.pkg
    #
#    Float =  eight_byte_float::Eight_Byte_Float;
herein

    # This api is implemented in:
    #
    #     src/app/benchmarks/benchmark-junk.pkg
    #
    api Benchmark_Junk {
	#
	Benchmark_Result					# Result of running one benchmark.
	    = 
	    { filepath:	    String,				# Benchmark filepath, e.g. "src/app/benchmarks/tagged-int-loop.pkg".
	      cpu_times:    cpu::Cpu_Times,
	      result:	    Int
	    };

	time_run
	    :
	    String						# Benchmark filepath, e.g. "src/app/benchmarks/tagged-int-loop.pkg".
	    ->
	    (Void -> Int)					# Benchmark thunk proper.  The Int result is ignored, but is necessary to keep the benchmark from being dead code and maybe optimized away.
	    ->
	    Benchmark_Result
	    ;
	    

	summarize_all_benchmarks
	    :
	    List( Benchmark_Result )
	    ->
	    Void;
    };
end;

## COPYRIGHT (c) 2012 Jeffrey S Prothero
## released per terms of SMLNJ-COPYRIGHT.
