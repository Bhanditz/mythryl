## benchmark-junk.pkg

# Compiled by:
#     src/app/benchmarks/benchmarks.lib


# Benchmarking support.


package   benchmark_junk
:         Benchmark_Junk					# Benchmark_Junk		is from   src/app/benchmarks/benchmark-junk.api
{
    total_units = REF 0;
    total_tests = REF 0;
    total_flaws = REF 0;

    tests  = REF 0;
    flaws  = REF 0;

    # Tally number of succeeding and failing tests:
    #
    fun assert' TRUE
            =>
            tests := *tests + 1;

        assert' FALSE
            =>
            {   tests := *tests + 1;
                flaws := *flaws + 1;
                ();
            };
    end;

    # Same as above, but with narration:
    #
    fun assert TRUE
            =>
            {   tests := *tests + 1;
                print ".";
                if (*tests & 077 == 0 ) print "\n"; fi;
            };

        assert FALSE
            =>
            {   tests := *tests + 1;
                flaws := *flaws + 1;

                printf "\nTest %3d FAILED.\n" *tests;
                ();
            };
    end;

    fun summarize_unit_tests unit_name
        =
        {    if  (*flaws == 0)   printf "\n%4d tests done,  no flaws detected by %s\n" *tests        unit_name;
             else                printf "\n%4d tests done, %3d flaws detected by %s\n" *tests *flaws unit_name;    fi;

             
             total_tests :=  *total_tests + *tests;
             total_flaws :=  *total_flaws + *flaws;
             total_units :=  *total_units + 1;

             tests  :=   0;
             flaws  :=   0;
	};

    fun summarize_all_benchmarks ()
        =
        {    print "\n=========================\n";

             if  (*total_flaws == 0)   printf "           No flaws seen.\n";
             else                      printf    "      %7d flaws seen.\n"  *total_flaws;    fi;

             printf "      %7d tests done.\n"     *total_tests;
             printf "      %7d units done.\n"     *total_units;

             print "=========================\n\n";
        };

    fun unit_tests_tried   () =  *tests;
    fun unit_flaws_found   () =  *flaws;

    fun total_tests_tried  () =  *total_tests;
    fun total_flaws_found  () =  *total_flaws;

};


## COPYRIGHT (c) 2012 Jeffrey S Prothero
## released under Gnu Public Licence version 3.
