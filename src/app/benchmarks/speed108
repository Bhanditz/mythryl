#!/bin/sh
#
# Usage: speed [options] [benchmarks]
#
#set -x

CMD=$0

SML="sml"
OUTFILE="speed108.out"
TESTS=""
ALL_TESTS="boyer.sml fft.sml fib.sml kb.sml mandelbrot.sml nucleic.sml quad.sml quicksort.sml sieve.sml soli.sml sumlist.sml takc.sml taku.sml"

#
# process arguments
#
while [ "$#" != "0" ]
do
    arg=$1; shift
    case $arg in
      -sml)
        if [ "$#" = "0" ]; then
          echo "$CMD must supply argument for -sml option"
          exit 1
        fi
        SML=$1; shift
        ;;
      -out)
        if [ "$#" = "0" ]; then
          echo "$CMD must supply argument for -out option"
          exit 1
        fi
        OUTFILE=$1; shift
        ;;
      -all)
	TESTS="$ALL_TESTS"
	;;
      *.sml)
	TESTS="$TESTS $arg"
	;;
      *)
	TESTS="$TESTS $arg.sml"
	;;
    esac
done

#
# run the tests
#
echo "Running the tests, results left in $OUTFILE"

date > $OUTFILE
uname -a >> $OUTFILE

for prog in $TESTS
do
    echo "$prog" >> $OUTFILE
    $SML <<XXX
        val outstream = open_append("$OUTFILE");
	use "timeit108.sml";
	output(outstream, "  Compile: ");
	Timing.compileIt outstream "$prog";
        output(outstream, "  Run: ");
        Timing.runIt outstream Main.doit;
        output(outstream, "  Run: ");
        Timing.runIt outstream Main.doit;
        output(outstream, "  Run: ");
        Timing.runIt outstream Main.doit;
XXX
done
