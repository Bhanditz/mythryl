## lib-load-path.pkg -- MYTHRYL_LIB_LOAD_PATH handling

# Compiled by:
#     src/app/makelib/makelib.sublib




stipulate
    package wnx =  winix__premicrothread;							# winix__premicrothread				is from   src/lib/std/winix--premicrothread.pkg
    package rex =  regex;									# regex						is from   src/lib/regex/regex.pkg

    getenv      =  wnx::process::get_env:   String -> Null_Or(String);
herein

    package lib_load_path
    :       Lib_Load_Path
    {
	lib_load_path = REF ([]: List(String));

	default_lib_load_path
	    =
	    ".:$HOME/.mythryl/lib:/usr/lib/mythryl:/usr/local/lib/mythryl";

	fun get_lib_load_path ()
	    =
	    []: List(String);

	fun split_string_pathlist_into_component_pathstrings  string_pathlist			# ".:$HOME:/usr/lib/mythryl"  ->  [ ".", "$HOME", "/usr/lib/mythryl" ]
	    =
	    rex::find_all_matches_to_regex  ./[^:]+/  string_pathlist;			# All maximal-length substrings not containing a ':'.

fun print_pathstrings  pathstrings
    =
    case pathstrings
	#
	[]	    =>  print "[]";
	[ s ]	    =>  printf "[ \"%s\" ]" s;
	(s ! rest)  =>  {   printf "[ \"%s\"" s;
			    apply (fn s = printf ", \"%s\"" s) rest;
			    print " ]";
			};
    esac;

	fun initialize_lib_load_path ()
	    =
	    {   string_pathlist									# Say, ".:$HOME:/usr/lib/mythryl"
		    =
		    case (getenv "MYTHRYL_LIB_LOAD_PATH")
			#
			THE path_as_string	=>  path_as_string;
			NULL			=>  default_lib_load_path;
		    esac;

		pathstrings									# Say, [ ".", "$HOME", "/usr/lib/mythryl" ]
		    =
		    split_string_pathlist_into_component_pathstrings  string_pathlist;

print "Cracked pathlist: ";
print_pathstrings  pathstrings;
print "    -- initialize_lib_load_path in lib-load-path.pkg\n";

		lib_load_path :=  pathstrings;
	    };

    };

end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################



## By Jeff Prothero Copyright (c) 2010-2013,
## released per terms of SMLNJ-COPYRIGHT.
