## memoize.pkg --  simple memoization.

# Compiled by:
#     src/app/makelib/stuff/makelib-stuff.sublib

api Memoize {
    #	
    memoize:  (X -> Y) -> (X -> Y);
	#
	# If g is the result of (memoize f),
        # then calling g the first time will result
	# in f being called with the same argument.
        #
	# Any subsequent call to g simply returns
        # the result that was computed during the
        # first call.
        #
        # Thus, f will be called at most
	# once on g's behalf.
};

package memoize
:       Memoize
{

    fun memoize f
        =
        {   cache =   REF (fn _ = raise exception FAIL "memoize::memoize: uninitialized");
	    #
	    fun first_time x
                =
                {   v =  f x;
		    #
		    fun later_on _ =    v;
		
		    cache := later_on;

		    v;
		};
	
	    cache := first_time;

	    fn x =   *cache x;
	};
};


## (C) 1999 Lucent Technologies, Bell Laboratories
## Author: Matthias Blume (blume@kurims.kyoto-u.ac.jp)
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2011,
## released under Gnu Public Licence version 3.

