A totally trivial application for experimentation.
One use for this is to hack some test code into

   test.pkg

and then compile it with various debug switches turned
on to watch the compiler work.  For example, to explore
the typechecking process you might do:

    linux$ my
    eval: set_control "typechecker::type_package_language_debugging" "TRUE";
    eval: set_control "typechecker::type_api_debugging" "TRUE";
    eval: set_control "typechecker::api_match_debugging" "TRUE";
    eval: set_control "typechecker::value_restriction_top_warn"  "TRUE";
    eval: make "test.lib";

This will spew various typechecking-phase debug printouts
generated in 

    src/lib/compiler/front/typer/main/type-package-language-g.pkg

Sticking various bits of code in test.pkg and examining the
resulting output may be of some help while trying to read and
understand  type-package-language-g.pkg.

Other parts of the compiler have similar switches which may
be turned on when reading those parts of the source.



set_control "typechecker::type_api_debugging" "TRUE"; set_control "typechecker::type_package_language_debugging" "TRUE";set_control "typechecker::api_match_debugging" "TRUE";make "test.lib";