2009-04-06 CrT:

Compile this stuff by doing:

    linux$ my
    eval:  make "oop-crib.lib";


For additional joy you may want to do one or more of

    eval: set_control "typechecker::type_package_language_debugging" "TRUE";
    eval: set_control "typechecker::unify_and_generalize_types_g_debugging" "TRUE";
    eval: set_control "typechecker::generalize_mutually_recursive_functions" "TRUE";

    eval: set_control "typechecker::type_api_debugging" "TRUE";
    eval: set_control "typechecker::api_match_debugging" "TRUE";
    eval: set_control "typechecker::unify_types_debugging" "TRUE";
    eval: set_control "ed::type_junk_debugging" "TRUE";
    eval: set_control "ed::translate_to_anormcode_debugging" "TRUE";
    eval: set_control "ed::types_debugging" "TRUE";
    eval: set_control "typechecker::value_restriction_top_warn"  "TRUE";

    eval: set_control "typechecker::generalize_mutually_recursive_functions" "TRUE";

before the 'make'.

This is an crib for oop support development.
It contains manually coded the logic which
needs to be mechanically synthesized by 
    src/lib/compiler/front/parser/raw-syntax/expand-oop-syntax.api
    src/lib/compiler/front/parser/raw-syntax/expand-oop-syntax.pkg

The idea dump out and examine the raw syntax trees
so produced and then use that as a guide to writing
the above oop syntax expansion code.

oop-test/ contains the corresponding testbed for actual
oop syntax.

All of this stuff is based on Bernard Berthomieu's
"OOP Programming styles in ML".

apply (fn s = set_control s "TRUE") [ "highcode::print", "cg::translate_types_debugging", "typechecker::type_package_language_debugging", "typechecker::typer_junk_debugging", "typechecker::unify_and_generalize_types_g_debugging", "typechecker::type_api_debugging", "typechecker::api_match_debugging", "typechecker::unify_types_debugging", "ed::type_junk_debugging", "ed::translate_to_anormcode_debugging", "ed::types_debugging", "typechecker::value_restriction_top_warn", "typechecker::internals", "typechecker::generalize_mutually_recursive_functions" ];
make "oop-crib.lib";
apply (fn s = set_control s "TRUE") [ "highcode::print", "cg::translate_types_debugging", "typechecker::type_package_language_debugging", "typechecker::typer_junk_debugging", "typechecker::unify_and_generalize_types_g_debugging", "typechecker::type_api_debugging", "typechecker::api_match_debugging", "typechecker::unify_types_debugging", "ed::type_junk_debugging", "ed::translate_to_anormcode_debugging", "ed::types_debugging", "typechecker::value_restriction_top_warn", "typechecker::internals" ];
