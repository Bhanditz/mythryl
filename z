#!/usr/bin/mythryl

{
    # When debugging uncomment the following lines and
    # add more log_if calls as appropriate:
    #
#   file::set_logger_to (file::LOG_TO_FILE "xyzzy.log");
#   log_if = file::log_if file::compiler_logging;
#   log_if .{ "Top of script"; }; 

    loops = 10000;

    foo = REF 0;
    last = REF 0;

    mutex = pthread::make_mutex ();
    condvar = pthread::make_condvar ();

    pthread::set_up_mutex (mutex, NULL);
    pthread::set_up_condvar (condvar, NULL);

    fun subpthread_fn id ()
	=
	{
	    pthread::acquire_mutex mutex;
		#
		for (i = 0; i < loops; ++i) {
#								    log_if .{ sprintf "subpthread_fn(%d) i d=%d" id i; };		# printf "subpthread_fn(%d) loop d=%d\n" id i;   file::flush file::stdout;		
		    for (((*last + 1) % 4) != id) {	

			pthread::wait_on_condvar (condvar, mutex);
		    };

		    foo := *foo + 1;
		    last := id;

		    pthread::broadcast_condvar condvar;
		};
		#
	    pthread::release_mutex mutex;

	    pthread::pthread_exit ();
	};	

    subpthread0 = pthread::spawn_pthread  (subpthread_fn 0);
    subpthread1 = pthread::spawn_pthread  (subpthread_fn 1);
    subpthread2 = pthread::spawn_pthread  (subpthread_fn 2);
    subpthread3 = pthread::spawn_pthread  (subpthread_fn 3);

    pthread::join_pthread  subpthread0;
    pthread::join_pthread  subpthread1;
    pthread::join_pthread  subpthread2;
    pthread::join_pthread  subpthread3;

    pthread::free_mutex    mutex;
    pthread::free_condvar  condvar;

#    log_if .{ "Script DONE."; }; 		# printf "Script DONE.\n";   file::flush file::stdout;   
};






# mutex = pthread::make_mutex ();
# pthread::set_up_mutex (mutex, NULL);
# 
# fun subpthread_fn ()
#     =
#     {   if ((pthread::try_mutex mutex) == pthread::ACQUIRED_MUTEX) print "Worked!\n";	pthread::release_mutex mutex;
#         else							   print "Failed!\n";
# 	fi;
# 
# 	#
# 	pthread::pthread_exit ();
#     };
# 
# pthread = pthread::spawn_pthread  subpthread_fn;
# 
# 
# pthread::join_pthread pthread;




