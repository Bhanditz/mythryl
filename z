#!/usr/bin/mythryl

foo = REF 0;

mutex = pthread::make_mutex ();
pthread::set_up_mutex (mutex, NULL);
pthread::acquire_mutex mutex;

fun bar ()
    =
    {   pthread::acquire_mutex mutex;
	#
	foo := 1;
	#
        pthread::release_mutex mutex;
	#
	pthread::pthread_exit ();
    };

pthread = pthread::spawn_pthread bar;

makelib::scripting_globals::sleep 0.01;

if (*foo == 0) printf "Child blocked as expected.\n";
else           printf "Child FAILED TO BLOCK!\n";
fi;

pthread::release_mutex mutex;

pthread::join_pthread pthread;

if (*foo == 1) printf "Child executed as expected.\n";
else           printf "Child FAILED TO INCREMENT!\n";
fi;

printf "*foo d=%d\n" (*foo);



