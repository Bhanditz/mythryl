Persona dramatae:

   build-an-executable-mythryl-heap-image:
       Invoked by the secondary apps' 'build' scripts
       to produce an executable from a .make7 file.  




sh/build:

   # Note list of modules to be pre-loaded during bootstrap.
   etc/preloads -> preloads.standard 

   # Initialize anchor settings -- essentially, the initial Make7 environment:
   setenv CM_PATHCONFIG lib/pathconfig 

   # Make sure all the top-level directories we need exist:
   mkdir bin
   mkdir heap
   mkdir lib

   # Populate bin/ with the following scripts,
   # as we do so expanding within them the
   # metavariables @SHELL@ @BINDIR@ @VERSION@ @CMDIRARC@
   #    guess-host-architecture-and-os
   #    mythryl-runtime-intel32
   #    mythryl-ld
   #    makedepend7
   #    heap2exec

   #
   # Build src/c/o/mythryl-runtime-intel32.intel32-linux (or such) by invoking the appropriate makefile, say
   #     src/c/o/mk.intel32-linux                              		# which sets up a few parameters and then invokes
   #         src/c/o/Makefile                              		# which recursively invokes:
   #             src/c/heapcleaner/Makefile			 	# Creates libmythryl-heapcleaner.a
   #             src/c/memory/Makefile                     		# Creates libmythryl-ram.a
   #             src/c/hostthread/Makefile                  		# Creates libmythryl-hostthread.a   if multicore (== "multi-processing") support is selected.
   #             src/c/lib/Makefile                        		# Which in turn recursively invokes
   #                 src/c/lib/dynamic-loading/Makefile	   		# Creates libmythryl-dynamic-loading.a
   #                 src/c/lib/ccalls/Makefile             		# Creates libmythryl-ccalls.a
   #                 src/c/lib/date/Makefile		   		# Creates libmythryl-date.a
   #                 src/c/lib/math/Makefile               		# Creates libmythryl-math.a
   #                 src/c/lib/hostthread/Makefile          		# Creates libmythryl-hostthread.a
   #                 src/c/lib/space-and-time-profiling/Makefile	# Creates libmythryl-space-and-time-profiling.a
   #                 src/c/lib/heap/Makefile       	   		# Creates libmythryl-heap.a
   #                 src/c/lib/signal/Makefile       	   		# Creates libmythryl-signal.a
   #                 src/c/lib/socket/Makefile		   		# Creates libmythryl-socket.a
   #                 src/c/lib/time/Makefile		   		# Creates libmythryl-time.a
   #                 src/c/lib/posix-error/Makefile        		# Creates libmythryl-posix-error.a
   #                 src/c/lib/posix-file-system/Makefile      		# Creates libmythryl-posix-file-system.a
   #                 src/c/lib/posix-io/Makefile           		# Creates libmythryl-posix-io.a
   #                 src/c/lib/posix-os/Makefile           		# Creates libmythryl-posix-os.a
   #                 src/c/lib/posix-process-environment/Makefile	# Creates libmythryl-posix-process-environment.a
   #                 src/c/lib/posix-process/Makefile      		# Creates libmythryl-posix-process.a
   #                 src/c/lib/posix-signal/Makefile       		# Creates libmythryl-posix-signal.a
   #                 src/c/lib/posix-passwd/Makefile       		# Creates libmythryl-posix-passwd-db.a
   #                 src/c/lib/posix-tty/Makefile          		# Creates libmythryl-posix-tty.a

   # Install src/c/o/mythryl-runtime-intel32.intel32-linux (or whatever) as bin/mythryl-runtime-intel32

   #
   # With mythryl-runtime-intel32 built we now have the ability to run heap-dumped
   # "executables", so now we just need to generate some such
   # executables to run, starting with the compiler itself.
   # Fortunately, we have in our seed-libraries
   # tarball all the .o7 files we need, and mythryl-runtime-intel32 is capable
   # of linking them into an executable all by itself. So:

   # We invoke bin/mythryl-ld to produce a mythryld executable from the
   # libraries in the seed-libraries tarball.  (The tarball contains an
   # OH7_FILES_TO_LOAD file listing the libraries to load and the
   # order in which to load them, making life simple for us.) 

   # We install sh/_build-an-executable-mythryl-heap-image as
   # bin/build-an-executable-mythryl-heap-image, again expanding
   # metavariables @SHELL@ @BINDIR@ @VERSION@ @CMDIRARC@ as we do so.
