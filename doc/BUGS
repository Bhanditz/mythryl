2009-08-31

    #!/usr/bin/mythryl

    fun qsort [] => [];
	qsort (x ! xs) => qsort (filter .{ #a < x; } xs) ! [x] ! qsort (filter { #a >= x; } xs);
    end;                                                                       ^
                                                                               | intended .{ here.
yields:

    Unexpected exception (bug?): IMPOSSIBLE [IMPOSSIBLE]
      raised at: src/lib/compiler/front/typechecker/typecheck/typecheck-core-language.pkg:1248.26-1248.36
		 src/lib/compiler/front/typechecker/typecheck/typecheck-package-language-g.pkg:4777.12
		 src/lib/compiler/front/typechecker/typecheck/typecheck-package-language-g.pkg:4818.10
		 src/lib/compiler/front/basics/stats/compile-statistics.pkg:334.48
		 src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg:156.42
    cynbe@maw mythryl7.110.58/mythryl7.110.58% 

This is probably due to the problem described in

    src/lib/compiler/front/parse/raw-syntax/make-raw-syntax.pkg

# XXX BUGGO FIXME Right now if a #var is used outside of a .{ ... }
#                 it triggers an "IMPOSSIBLE" exception.  We need to
#                 do something like keep a count of #vars generated
#                 and consumed during parsetree generation, and if
#                 the numbers don't match (a single up/down counter
#                 would suffice, actually), then do a sweep through
#                 the parsetree turning them into regular variables
#                 while issuing sane diagnostic messages.

