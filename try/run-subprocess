#!/usr/bin/mythryl

# A simple example of spawning a subprocess
# and communicating with it via pipes.

stipulate
    package fil =  file__premicrothread;				# file__premicrothread	is from   src/lib/std/src/posix/file--premicrothread.pkg
herein

    fun run_subprocess ()
	= 
	{
	    subprocess =  spawn__premicrothread::spawn_process { executable => "/bin/sh", arguments => [], options => [] };		# spawn__premicrothread	is from   src/lib/std/src/posix/spawn--premicrothread.pkg

	    (spawn__premicrothread::text_streams_of  subprocess)
		->
		{ stdout_from_child =>  from_stream,
		  stdin_to_child    =>  to_stream
		};

	    fil::write (to_stream, "echo 'xyzzy'\n");			# file__premicrothread	is from   src/lib/std/src/posix/file--premicrothread.pkg
	    fil::flush to_stream;

    #	printf "Read from subprocess: '%s'\n" (string::chomp (the (fil::read_line  from_stream) ) );
	    printf "Read from subprocess: '%s'\n" (string::chomp (fil::read  from_stream));

	    exit 0;
	};

    run_subprocess ();
end;
